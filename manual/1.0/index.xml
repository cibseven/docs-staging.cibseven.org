<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CIB seven Documentation</title>
    <link>/manual/1.0/</link>
    <description>Recent content on CIB seven Documentation</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="/manual/1.0/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Install the Database Schema</title>
      <link>/manual/1.0/installation/database-schema/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/installation/database-schema/</guid>
      <description>&lt;p&gt;This document will guide you through the installation and update of the CIB seven &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/database/database-schema/&#34;&gt;database schema&lt;/a&gt; used by the process engine.&#xA;Regardless of the &lt;a href=&#34;/manual/1.0/manual/1.0/introduction/architecture/&#34;&gt;architecture of your application setup&lt;/a&gt;, the process engine always requires this database schema.&#xA;In a production environment, we recommend setting up this schema yourself and reference the prepared database instance in your application configuration.&#xA;Consult the installation guide related to your setup to configure the database for a &lt;a href=&#34;/manual/1.0/manual/1.0/installation/cibseven-run/&#34;&gt;remote engine&lt;/a&gt;, &lt;a href=&#34;/manual/1.0/manual/1.0/installation/full/&#34;&gt;shared engine&lt;/a&gt;, or &lt;a href=&#34;/manual/1.0/manual/1.0/installation/spring-boot/&#34;&gt;embedded engine&lt;/a&gt; accordingly.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Dashboard</title>
      <link>/manual/1.0/webapps/cockpit/dmn/dashboard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/webapps/cockpit/dmn/dashboard/</guid>
      <description>&lt;p&gt;The decisions dashboard of Cockpit is the entry point for decision monitoring. It comes with a pre-installed plugin, which lets you see deployed decision definitions. Additional &lt;a href=&#34;/manual/1.0/manual/1.0/webapps/cockpit/extend/plugins/&#34;&gt;plugins&lt;/a&gt; can be added to the decisions dashboard.&lt;/p&gt;&#xA;&lt;h1 id=&#34;deployed-decisions&#34;&gt;Deployed Decisions&lt;/h1&gt;&#xA;&lt;figure class=&#34;image&#34;&gt;&#xA;  &lt;span&gt;&lt;img&#xA;      src=&#34;../../img/cockpit-decision-definition-list.png&#34;&#xA;      &#xA;          title=&#34;Deployed Decision Definitions&#34;&#xA;       /&gt;&lt;/span&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;This plugin provides you with a list of deployed decision definitions. You can click on the name of a decision to go to the &lt;a href=&#34;/manual/1.0/manual/1.0/webapps/cockpit/dmn/decision-definition-view/&#34;&gt;decision definition view&lt;/a&gt; and access more details.&lt;/p&gt;&#xA;&lt;h1 id=&#34;deployed-decision-requirements-definition&#34;&gt;Deployed Decision Requirements Definition&lt;/h1&gt;&#xA;&lt;figure class=&#34;image&#34;&gt;&#xA;  &lt;span&gt;&lt;img&#xA;      src=&#34;../../img/cockpit-drd-list.png&#34;&#xA;      &#xA;          title=&#34;Deployed Decision Definitions&#34;&#xA;       /&gt;&lt;/span&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;This plugin provides you with a list of deployed decision requirements definitions. You can click on the name of a decision requirements definition to go to the [decision requirements definition view][decision-requirements-definition-view] and access more details.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Install CIB seven Run</title>
      <link>/manual/1.0/installation/cibseven-run/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/installation/cibseven-run/</guid>
      <description>&lt;div class=&#34;note bg-info docs-info&#34;&gt;&#xA;  &lt;h3&gt;What is a Remote Engine Distribution?&lt;/h3&gt;&#xA;  &lt;p&gt;If you need a Remote or Shared Engine Distribution depends on your use-case. Check out the &lt;a href=&#34;/manual/1.0/manual/1.0/introduction/architecture/&#34;&gt;architecture overview&lt;/a&gt; for more information.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;This page describes the steps to execute CIB seven Run.&lt;/p&gt;&#xA;&lt;h1 id=&#34;requirements&#34;&gt;Requirements&lt;/h1&gt;&#xA;&lt;p&gt;Please make sure that you have the Java Runtime Environment 17 installed.&lt;/p&gt;&#xA;&lt;p&gt;You can verify this by using your terminal, shell, or command line:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;java -version&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you need to install Java Runtime Environment, you can &lt;a href=&#34;https://www.oracle.com/java/technologies/javase-downloads.html&#34;&gt;find the download from Oracle here&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.0 to 1.1</title>
      <link>/manual/1.0/reference/cmmn11/migration/10-to-11/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/cmmn11/migration/10-to-11/</guid>
      <description>&lt;p&gt;In order to update existing CMMN 1.0 XMLs to valid CMMN 1.1 the following adjustments must be done.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The namespace must be updated as follows:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Affected Elements&lt;/th&gt;&#xA;    &lt;td&gt;Definitions&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;CMMN 1.0&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;definitions xmlns=&#34;http://www.omg.org/spec/CMMN/20131201/MODEL&#34;&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;CMMN 1.1&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;definitions xmlns=&#34;http://www.omg.org/spec/CMMN/20151109/MODEL&#34;&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The &lt;code&gt;&amp;lt;body/&amp;gt;&lt;/code&gt; element from expressions must be removed:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Affected Elements&lt;/th&gt;&#xA;    &lt;td&gt;Condition&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;CMMN 1.0&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;code&gt;&amp;lt;condition&amp;gt;&lt;/code&gt;&#xA;      &lt;br&gt;&amp;nbsp;&amp;nbsp;&#xA;      &lt;code&gt;&amp;lt;body&amp;gt;${any-expression}&amp;lt;body&amp;gt;&lt;/code&gt;&#xA;      &lt;br&gt;&#xA;      &lt;code&gt;&amp;lt;/condition&amp;gt;&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;CMMN 1.1&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;code&gt;&amp;lt;condition&amp;gt;${any-expression}&amp;lt;/condition&amp;gt;&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;This is relevant for all elements containing a condition like `IfPart`, `ManualActivationRule` and `RequiredRule`&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The attributes &lt;code&gt;entryCriteriaRefs&lt;/code&gt; and &lt;code&gt;exitCriteriaRefs&lt;/code&gt; are dropped, so that the following adjustments must be done:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Affected Elements&lt;/th&gt;&#xA;    &lt;td&gt;PlanItem, CasePlanModel&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;CMMN 1.0&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;code&gt;&amp;lt;planItem id=&#34;A_PLAN_ITEM_ID&#34;&lt;/code&gt;&#xA;      &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#xA;      &lt;code&gt;entryCriteriaRefs=&#34;Sentry_1 Sentry_2&#34;&lt;/code&gt;&#xA;      &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#xA;      &lt;code&gt;exitCriteriaRefs=&#34;Sentry_3 Sentry4&#34; /&amp;gt;&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;CMMN 1.1&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;code&gt;&amp;lt;planItem id=&#34;A_PLAN_ITEM_ID&#34;&amp;gt;&lt;/code&gt;&#xA;      &lt;br&gt;&amp;nbsp;&amp;nbsp;&#xA;      &lt;code&gt;&amp;lt;entryCriterion sentryRef=&#34;Sentry_1&#34; /&amp;gt;&lt;/code&gt;&#xA;      &lt;br&gt;&amp;nbsp;&amp;nbsp;&#xA;      &lt;code&gt;&amp;lt;entryCriterion sentryRef=&#34;Sentry_2&#34; /&amp;gt;&lt;/code&gt;&#xA;      &lt;br&gt;&amp;nbsp;&amp;nbsp;&#xA;      &lt;code&gt;&amp;lt;exitCriterion sentryRef=&#34;Sentry_3&#34; /&amp;gt;&lt;/code&gt;&#xA;      &lt;br&gt;&amp;nbsp;&amp;nbsp;&#xA;      &lt;code&gt;&amp;lt;exitCriterion sentryRef=&#34;Sentry_4&#34; /&amp;gt;&lt;/code&gt;&#xA;      &lt;br&gt;&#xA;      &lt;code&gt;&amp;lt;/planItem&amp;gt;&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The attribute &lt;code&gt;description&lt;/code&gt; is not available anymore. Instead of the &lt;code&gt;description&lt;/code&gt; attribute use the &lt;code&gt;&amp;lt;documentation/&amp;gt;&lt;/code&gt; element:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Affected Elements&lt;/th&gt;&#xA;    &lt;td&gt;Any CMMN element&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;CMMN 1.0&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;code&gt;&amp;lt;planItem id=&#34;A_PLAN_ITEM_ID&#34;&lt;/code&gt;&#xA;      &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#xA;      &lt;code&gt;description=&#34;This is a description of the plan item...&#34; /&amp;gt;&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;CMMN 1.1&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;code&gt;&amp;lt;planItem id=&#34;A_PLAN_ITEM_ID&#34;&amp;gt;&lt;/code&gt;&#xA;      &lt;br&gt;&amp;nbsp;&amp;nbsp;&#xA;      &lt;code&gt;&amp;lt;documentation&amp;gt;&lt;/code&gt;&#xA;      &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#xA;      &lt;code&gt;This is a description of the plan item...&lt;/code&gt;&#xA;      &lt;br&gt;&amp;nbsp;&amp;nbsp;&#xA;      &lt;code&gt;&amp;lt;/documentation&amp;gt;&lt;/code&gt;&#xA;      &lt;br&gt;&#xA;      &lt;code&gt;&amp;lt;/planItem&amp;gt;&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;</description>
    </item>
    <item>
      <title>Authentication</title>
      <link>/manual/1.0/webapps/shared-options/authentication/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/webapps/shared-options/authentication/</guid>
      <description>&lt;p&gt;Authentication means verifying a user&amp;rsquo;s identity against the Camunda web apps.&lt;/p&gt;&#xA;&lt;p&gt;A user authenticates against the web apps on the login page by providing a username and password. If the&#xA;authentication is successful, the user gets access to the web apps and can work on tasks&#xA;in Tasklist or perform operations in Cockpit, for example.&lt;/p&gt;&#xA;&lt;p&gt;The authentication information consists of the following:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Process engine name&lt;/li&gt;&#xA;&lt;li&gt;Username&lt;/li&gt;&#xA;&lt;li&gt;Group memberships&lt;/li&gt;&#xA;&lt;li&gt;Tenant memberships&lt;/li&gt;&#xA;&lt;li&gt;Authorized applications (Tasklist, Cockpit, Admin)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;The Camunda web apps correlate the authentication information against &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/authorization-service/&#34;&gt;authorizations&lt;/a&gt; to determine&#xA;what data the user can query for and which operations the user can perform.&lt;/p&gt;</description>
    </item>
    <item>
      <title>bpm-platform.xml</title>
      <link>/manual/1.0/reference/deployment-descriptors/descriptors/bpm-platform-xml/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/deployment-descriptors/descriptors/bpm-platform-xml/</guid>
      <description>&lt;p&gt;The &lt;code&gt;bpm-platform.xml&lt;/code&gt; file is part of the CIB seven distribution and can be used for configuration of process engines and the job executor.&#xA;It is used to configure CIB seven in the following distributions:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;/manual/1.0/manual/1.0/installation/full/tomcat/&#34;&gt;Apache Tomcat&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;div class=&#34;note bg-warning docs-warning&#34;&gt;&#xA;  &lt;h3&gt;Wildfly&lt;/h3&gt;&#xA;  &lt;p&gt;The &lt;code&gt;bpm-platform.xml&lt;/code&gt; file is not used in the CIB seven distribution for Wildfly. There, the configuration is added to the central application server configuration file (&lt;code&gt;standalone.xml&lt;/code&gt; or &lt;code&gt;domain.xml&lt;/code&gt;). The XML schema is the same (i.e., the same elements and properties can be used). See the &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/runtime-container-integration/jboss/&#34;&gt;The Camunda Wildfly Subsystem&lt;/a&gt; section of the &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/&#34;&gt;User Guide&lt;/a&gt; for more details.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Camunda BPMN Extension Elements</title>
      <link>/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/</guid>
      <description>&lt;p&gt;The following attributes are extension attributes for the &lt;code&gt;camunda&lt;/code&gt; namespace &lt;code&gt;http://camunda.org/schema/1.0/bpmn&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;h1 id=&#34;connector&#34;&gt;connector&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      The configuration of a camunda connector.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Attributes&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Constraints&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      The &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#connectorid&#34;&gt;&#xA;      camunda:connectorId&lt;/a&gt; child element is required and must identify a connector implementation&#xA;      known to the process engine&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Parent elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/service-task/&#34;&gt;Service Task&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/business-rule-task/&#34;&gt;Business Rule Task&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/send-task/&#34;&gt;Send Task&lt;/a&gt;,&#xA;      Message Event Definition of&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/message-events/#message-intermediate-throwing-event&#34;&gt;&#xA;      Message Intermediate Throwing Event&lt;/a&gt; or&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/message-events/#message-end-event&#34;&gt;Message End Event&lt;/a&gt;,&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Child elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#inputoutput&#34;&gt;&#xA;      camunda:inputOutput&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#connectorid&#34;&gt;&#xA;      camunda:connectorId&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;connectorid&#34;&gt;connectorId&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      The unique identifier of the connector type to instantiate.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Attributes&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Constraints&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      The connector type has to be known to the process engine&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Parent elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#connector&#34;&gt;&#xA;      camunda:connector&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Child elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;constraint&#34;&gt;constraint&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      Metadata of an individual validation constraint for a form field (see &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/task-forms/#form-field-validation&#34;&gt;Form Field Validation&lt;/a&gt;).&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Attributes&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;name&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      The name of the form field constraint type&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;config&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      The configuration of the form field constraint type&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Constraints&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      The &lt;code&gt;name&lt;/code&gt; attribute must be one of the known validators (&lt;code&gt;required&lt;/code&gt;, &lt;code&gt;minlength&lt;/code&gt;,&#xA;      &lt;code&gt;maxlength&lt;/code&gt;, &lt;code&gt;min&lt;/code&gt;, &lt;code&gt;max&lt;/code&gt;, &lt;code&gt;readonly&lt;/code&gt; or &lt;code&gt;validator&lt;/code&gt;)&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Parent elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#validation&#34;&gt;camunda:validation&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Child elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &amp;ndash;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;entry&#34;&gt;entry&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      A single entry of a map structure. The value can be a constant, expression, script, list or&#xA;      another map.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Attributes&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;key&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      The key of the entry in the map. Can be a string or an expression.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Constraints&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      The &lt;code&gt;key&lt;/code&gt; attribute is required&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Parent elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#map&#34;&gt;camunda:map&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Child elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#list&#34;&gt;camunda:list&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#map&#34;&gt;camunda:map&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#script&#34;&gt;camunda:script&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;erroreventdefinition&#34;&gt;errorEventDefinition&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      Definition of an error event that can be triggered by an expression.&#xA;      This element extends the&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/error-events/#defining-an-error&#34;&gt;errorEventDefinition&lt;/a&gt;&#xA;      element from the bpmn namespace inheriting all of its attributes: &lt;code&gt;id&lt;/code&gt;, &lt;code&gt;errorRef&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Attributes&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;expression&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      An expression that will trigger the error if it evaluates to &lt;code&gt;true&lt;/code&gt;.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Constraints&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      The &lt;code&gt;errorRef&lt;/code&gt; attribute is required&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Parent elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/service-task/&#34;&gt;Service Task&lt;/a&gt; of type &lt;code&gt;external&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Child elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &amp;ndash;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;executionlistener&#34;&gt;executionListener&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      Add an execution listener to an event.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Attributes&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;event&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      The type of the event for which the listener is called&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;class&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      see &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-attributes/#class&#34;&gt;camunda:class&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;expression&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      see &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-attributes/#expression&#34;&gt;camunda:expression&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;delegateExpression&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      see &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-attributes/#delegateexpression&#34;&gt;camunda:delegateExpression&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Constraints&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      The &lt;code&gt;event&lt;/code&gt; attribute is required (except for transitions) and must be one of the task events: &lt;code&gt;start&lt;/code&gt; or &lt;code&gt;end&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      One of the attributes &lt;code&gt;class&lt;/code&gt;, &lt;code&gt;expression&lt;/code&gt; or &lt;code&gt;delegateExpression&lt;/code&gt; is mandatory&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Parent elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      Process,&#xA;      Task,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/service-task/&#34;&gt;Service Task&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/send-task/&#34;&gt;Send Task&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/user-task/&#34;&gt;User Task&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/business-rule-task/&#34;&gt;Business Rule Task&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/script-task/&#34;&gt;Script Task&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/receive-task/&#34;&gt;Receive Task&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/manual-task/&#34;&gt;Manual Task&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/gateways/exclusive-gateway/&#34;&gt;Exclusive Gateway&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/gateways/sequence-flow/&#34;&gt;Sequence Flow&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/gateways/parallel-gateway/&#34;&gt;Parallel Gateway&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/gateways/inclusive-gateway/&#34;&gt;Inclusive Gateway&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/gateways/event-based-gateway/&#34;&gt;Event Based Gateway&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/start-events/&#34;&gt;Start Event&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/&#34;&gt;Intermediate Catch Event&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/&#34;&gt;Intermediate Throw Event&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/&#34;&gt;End Events&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/&#34;&gt;Boundary Events&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/subprocesses/embedded-subprocess/&#34;&gt;Embedded Subprocess&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/subprocesses/call-activity/&#34;&gt;Call Activity&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/subprocesses/event-subprocess/&#34;&gt;Event Subprocess&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/subprocesses/transaction-subprocess/&#34;&gt;Transaction Subprocess&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Child elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#field&#34;&gt;camunda:field&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#script&#34;&gt;camunda:script&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;expression&#34;&gt;expression&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;&lt;tr&gt;&#xA;  &lt;th&gt;Description&lt;/th&gt;&#xA;  &lt;td colspan=&#34;2&#34;&gt;&#xA;    Defines an expression to inject in delegated classes (see &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/delegation-code/#field-injection&#34;&gt;Field Injection&lt;/a&gt;).&#xA;  &lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;  &lt;th&gt;Attributes&lt;/th&gt;&#xA;  &lt;td colspan=&#34;2&#34;&gt;&#xA;    &amp;ndash;&#xA;  &lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;  &lt;th&gt;Text Content&lt;/th&gt;&#xA;  &lt;td colspan=&#34;2&#34;&gt;&#xA;    The expression to inject&#xA;  &lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;  &lt;th&gt;Constraints&lt;/th&gt;&#xA;  &lt;td colspan=&#34;2&#34;&gt;&#xA;    &amp;ndash;&#xA;  &lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;  &lt;th&gt;Parent elements&lt;/th&gt;&#xA;  &lt;td colspan=&#34;2&#34;&gt;&#xA;    &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#field&#34;&gt;camunda:field&lt;/a&gt;&#xA;  &lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;  &lt;th&gt;Child elements&lt;/th&gt;&#xA;  &lt;td colspan=&#34;2&#34;&gt;&#xA;    &amp;ndash;&#xA;  &lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;failedjobretrytimecycle&#34;&gt;failedJobRetryTimeCycle&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      Defines the custom retry schedule for a failed job (see &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/the-job-executor/#failed-jobs&#34;&gt;Failed Jobs&lt;/a&gt;).&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Attributes&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &amp;ndash;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Text Content&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      The retry time cycle value or expression&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Constraints&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      The configuration follows the &lt;a href=&#34;http://en.wikipedia.org/wiki/ISO_8601#Repeating_intervals&#34;&gt;ISO 8601 standard for repeating time intervals&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Parent elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      Task,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/service-task/&#34;&gt;Service Task&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/send-task/&#34;&gt;Send Task&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/user-task/&#34;&gt;User Task&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/business-rule-task/&#34;&gt;Business Rule Task&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/script-task/&#34;&gt;Script Task&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/receive-task/&#34;&gt;Receive Task&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/timer-events/#timer-start-event&#34;&gt;Timer Start Event&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/timer-events/#timer-intermediate-catching-event&#34;&gt;Timer Intermediate Catching Event&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/timer-events/#timer-boundary-event&#34;&gt;Timer Boundary Event&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/signal-events/&#34;&gt;Intermediate Signal Throw Event&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/subprocesses/embedded-subprocess/&#34;&gt;Embedded Subprocess&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/subprocesses/call-activity/&#34;&gt;Call Activity&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/subprocesses/transaction-subprocess/&#34;&gt;Transaction Subprocess&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/task-markers/#multiple-instance&#34;&gt;Multi Instance Loop Characteristics&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Child elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &amp;ndash;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;field&#34;&gt;field&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      Defines the value to inject in delegated classes (see &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/delegation-code/#field-injection&#34;&gt;Field Injection&lt;/a&gt;).&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Attributes&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;name&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      The name of the field&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;expression&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;The value of the field as expression&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;stringValue&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;The value of the field as String&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Constraints&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      Only one attribute of &lt;code&gt;stringValue&lt;/code&gt; and &lt;code&gt;expression&lt;/code&gt; or one of the child elements &lt;code&gt;string&lt;/code&gt; and &lt;code&gt;expression&lt;/code&gt; can be used&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Parent elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/service-task/&#34;&gt;Service Task&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/business-rule-task/&#34;&gt;Business Rule Task&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/send-task/&#34;&gt;Send Task&lt;/a&gt;,&#xA;      Message Event Definition of &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/message-events/#message-intermediate-throwing-event&#34;&gt;Message Intermediate Throwing Event&lt;/a&gt; or &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/message-events/#message-end-event&#34;&gt;Message End Event&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#tasklistener&#34;&gt;camunda:taskListener&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#executionlistener&#34;&gt;camunda:executionListner&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Child elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#expression&#34;&gt;camunda:expression&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#string&#34;&gt;camunda:string&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;formdata&#34;&gt;formData&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      Metadata to define fields of a form, which are used to generate task forms (see &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/task-forms/#generated-task-forms&#34;&gt;Generated Task Forms&lt;/a&gt;).&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Attributes&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &amp;ndash;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Constraints&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &amp;ndash;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Parent elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/start-events/&#34;&gt;Start Event&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/user-task/&#34;&gt;User Task&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Child elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#formfield&#34;&gt;camunda:formField&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;formfield&#34;&gt;formField&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      Metadata to define a single form field (see &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/task-forms/#generated-task-forms&#34;&gt;Generated Task Forms&lt;/a&gt;).&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Attributes&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;id&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      The id of the form field, corresponding to the name of a process variable&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;label&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      The label to be displayed next to the form field&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;type&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      The type of the form field&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;datePattern&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      The pattern of a date type form field&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;defaultValue&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      The value to be used as a default (pre-selection) for the field&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Constraints&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      The attribute &lt;code&gt;id&lt;/code&gt; may not be empty&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      The attribute &lt;code&gt;type&lt;/code&gt; can be one of the known form field types (&lt;code&gt;string&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt;, &lt;code&gt;boolean&lt;/code&gt;, &lt;code&gt;date&lt;/code&gt; or &lt;code&gt;enum&lt;/code&gt;) or a custom one&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      The attribute &lt;code&gt;datePattern&lt;/code&gt; can only be used if the &lt;code&gt;type&lt;/code&gt; attribute is set to &lt;code&gt;date&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      The child element &lt;code&gt;camunda:properties&lt;/code&gt; is only allowed once&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      The child element &lt;code&gt;camunda:validation&lt;/code&gt; is only allowed once&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      The child elements &lt;code&gt;camunda:values&lt;/code&gt; can only be used if the &lt;code&gt;type&lt;/code&gt; attribute is set to &lt;code&gt;enum&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Parent elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#formdata&#34;&gt;camunda:formData&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Child elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#properties&#34;&gt;camunda:properties&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#validation&#34;&gt;camunda:validation&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#value&#34;&gt;camunda:value&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;formproperty&#34;&gt;formProperty&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      Metadata to define a form field (&lt;strong&gt;Deprecated&lt;/strong&gt;, use &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#formdata&#34;&gt;camunda:formData&lt;/a&gt;).&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Attributes&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;id&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      The key used to submit the property through the API&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;name&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      The display label of the property&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;type&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      The type of the property&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;required&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      True if the form field is required (default: &lt;code&gt;false&lt;/code&gt;)&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;readable&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      True if the form field is readable and will be displayed (default: &lt;code&gt;true&lt;/code&gt;)&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;writeable&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      True if the form field is writeable (default: &lt;code&gt;true&lt;/code&gt;)&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;variable&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      Specifies the process variable on which the variable is mapped&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;expression&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      Specifies an expression that maps the property, e.g., &lt;code&gt;${street.address}&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;datePattern&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      The pattern of a date type form field&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;default&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      The default value or expression of the property&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Constraints&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      The &lt;code&gt;id&lt;/code&gt; attribute is required&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      The attribute &lt;code&gt;type&lt;/code&gt; can be one of the known types (&lt;code&gt;string&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt;, &lt;code&gt;boolean&lt;/code&gt;, &lt;code&gt;date&lt;/code&gt; or &lt;code&gt;enum&lt;/code&gt;) or a custom one&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      The attribute &lt;code&gt;datePattern&lt;/code&gt; can only be used if the &lt;code&gt;type&lt;/code&gt; attribute is set to &lt;code&gt;date&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      The child elements &lt;code&gt;camunda:values&lt;/code&gt; can only be used if the &lt;code&gt;type&lt;/code&gt; attribute is set to &lt;code&gt;enum&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Parent elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/start-events/&#34;&gt;Start Event&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/user-task/&#34;&gt;User Task&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Child elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#value&#34;&gt;camunda:value&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;in&#34;&gt;in&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      The element specifies variables which should be passed to the subprocess, see &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/subprocesses/call-activity/#passing-variables&#34;&gt;passing variables&lt;/a&gt; for more information.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Attributes&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;source&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      A name of a process variable to be passed in&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;sourceExpression&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      An expression to be evaluated and passed in&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;variables&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      Can be set to &lt;code&gt;all&lt;/code&gt; to pass all process variables in&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;target&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      Name of the process variable inside the subprocess instance&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;local&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      Can be set to &lt;code&gt;true&lt;/code&gt; to only pass local variables of the execution that executes the call activity.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;businessKey&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      Set the business key of the subprocess process instance&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Constraints&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      Only one of the attributes &lt;code&gt;source&lt;/code&gt;, &lt;code&gt;sourceExpression&lt;/code&gt;, &lt;code&gt;variables&lt;/code&gt; or &lt;code&gt;businessKey&lt;/code&gt; can be used&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      The attribute &lt;code&gt;target&lt;/code&gt; is required if the &lt;code&gt;source&lt;/code&gt; or &lt;code&gt;sourceExpression&lt;/code&gt; attribute is used&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Parent elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/subprocesses/call-activity/&#34;&gt;Call Activity&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/signal-events/&#34;&gt;Signal Events (in Intermediate and End Throwing Events)&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Child elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &amp;ndash;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;inputparameter&#34;&gt;inputParameter&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      An single input mapping for the activity. If the element has no child element, the text&#xA;      content of this element is mapped into the activity. The text content can be a constant&#xA;      string value or an expression. If no child element or text content exists, the variable&#xA;      inside the activity is set to the special value &lt;code&gt;null&lt;/code&gt;.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Attributes&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;name&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      The name of the variable inside the activity.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Constraints&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      The &lt;code&gt;name&lt;/code&gt; attribute is required.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      The element can have one child element, a constant string or an expression as text content.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Parent elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#inputoutput&#34;&gt;&#xA;        camunda:inputOutput&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Child elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#list&#34;&gt;&#xA;        camunda:list&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#map&#34;&gt;&#xA;        camunda:map&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#script&#34;&gt;&#xA;        camunda:script&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;inputoutput&#34;&gt;inputOutput&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      The element describes an input/output mapping for the activity.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Attributes&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &amp;ndash;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Constraints&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &amp;ndash;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Parent elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/&#34;&gt;All Tasks&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/&#34;&gt;All Events&lt;/a&gt; (except Start and Boundary Events),&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/subprocesses/call-activity/&#34;&gt;Call Activity&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/subprocesses/embedded-subprocess/&#34;&gt;Embedded Subprocess&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/subprocesses/transaction-subprocess/&#34;&gt;Transaction Subprocess&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#connector&#34;&gt;&#xA;        camunda:connector&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Child elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#inputparameter&#34;&gt;&#xA;        camunda:inputParameter&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#outputparameter&#34;&gt;&#xA;        camunda:outputParameter&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;list&#34;&gt;list&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      A list structure. If the list contains multiple values, they should be added as&#xA;      text content of child elements. Which child elements are used is arbitrary, e.g.,:&#xA;      &lt;code&gt;&lt;br/&gt;&#xA;        &amp;lt;camunda:list&amp;gt;&lt;br/&gt;&#xA;        &amp;nbsp;&amp;nbsp;&amp;lt;camunda:value&amp;gt;one&amp;lt;/camunda:value&amp;gt;&lt;br/&gt;&#xA;        &amp;nbsp;&amp;nbsp;&amp;lt;camunda:value&amp;gt;two&amp;lt;/camunda:value&amp;gt;&lt;br/&gt;&#xA;        &amp;nbsp;&amp;nbsp;&amp;lt;camunda:value&amp;gt;three&amp;lt;/camunda:value&amp;gt;&lt;br/&gt;&#xA;        &amp;lt;/camunda:list&amp;gt;&#xA;      &lt;/code&gt;&lt;br/&gt;&#xA;      A &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#script&#34;&gt;&#xA;      camunda:script&lt;/a&gt; element can also be used as a list element. The return value of the&#xA;      script is added to the list. Furthermore, lists can contain nested lists and maps.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Attributes&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &amp;ndash;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Constraints&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      Multiple values have to be encapsulated in child elements.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Parent elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#inputparameter&#34;&gt;&#xA;        camunda:inputParameter&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#outputparameter&#34;&gt;&#xA;        camunda:outputParameter&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#list&#34;&gt;camunda:list&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#entry&#34;&gt;camunda:entry&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Child elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      Any child element,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#list&#34;&gt;&#xA;        camunda:list&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#map&#34;&gt;&#xA;        camunda:map&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;map&#34;&gt;map&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      A map structure. The entries can be constants, expressions, scripts, nested maps and lists.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Attributes&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &amp;ndash;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Constraints&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &amp;ndash;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Parent elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#inputparameter&#34;&gt;&#xA;        camunda:inputParameter&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#outputparameter&#34;&gt;&#xA;        camunda:outputParameter&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#list&#34;&gt;camunda:list&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#entry&#34;&gt;camunda:entry&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Child elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#entry&#34;&gt;camunda:entry&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;out&#34;&gt;out&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      The element specifies variables which should be passed back from the subprocess, see &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/subprocesses/call-activity/#passing-variables&#34;&gt;passing variables&lt;/a&gt; for more information.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Attributes&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;source&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      A name of a process variable to be passed back&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;sourceExpression&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      An expression to be evaluated and passed back&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;variables&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      Can be set to &lt;code&gt;all&lt;/code&gt; to pass all subprocess variables back&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;target&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      Name of the process variable inside the subprocess instance&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;local&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      Can be set to &lt;code&gt;true&lt;/code&gt; to pass variables from the called case/process instance to local variables of the execution executing the call activity.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Constraints&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      Only one of the attributes &lt;code&gt;source&lt;/code&gt;, &lt;code&gt;sourceExpression&lt;/code&gt; or &lt;code&gt;variables&lt;/code&gt; can be used&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      The attribute &lt;code&gt;target&lt;/code&gt; is required if the &lt;code&gt;source&lt;/code&gt; or &lt;code&gt;sourceExpression&lt;/code&gt; attribute is used&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Parent elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/subprocesses/call-activity/&#34;&gt;Call Activity&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Child elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &amp;ndash;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;outputparameter&#34;&gt;outputParameter&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      An single output mapping for the activity. If the element has no child element, the text&#xA;      content of this element is mapped out of the activity. The text content can be a constant&#xA;      string value or an expression. If no child element or text content exists, the variable&#xA;      outside of the activity is set to the special value &lt;code&gt;null&lt;/code&gt;.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Attributes&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;name&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      The name of the variable outside of the activity.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Constraints&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      The &lt;code&gt;name&lt;/code&gt; attribute is required.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      The element can have one child element, a constant string or an expression as text content.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Parent elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#inputoutput&#34;&gt;&#xA;        camunda:inputOutput&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Child elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#list&#34;&gt;&#xA;        camunda:list&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#map&#34;&gt;&#xA;        camunda:map&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#script&#34;&gt;&#xA;        camunda:script&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;potentialstarter&#34;&gt;potentialStarter&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      Defines which users or groups can start the process.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Attributes&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &amp;ndash;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Constraints&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &amp;ndash;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Parent elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      Process&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Child elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      resourceAssignmentExpression&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;properties&#34;&gt;properties&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      A key value list of properties which be can be interpreted freely.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Attributes&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &amp;ndash;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Constraints&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &amp;ndash;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Parent elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      Base Element,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#formfield&#34;&gt;camunda:formField&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Child elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#property&#34;&gt;camunda:property&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;property&#34;&gt;property&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      A key value pair which can be interpreted freely.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Attributes&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;id&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      The id of the form field property&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;name&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      The name of the property&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;value&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      The value of the property&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Constraints&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      If the property belongs to a &lt;code&gt;camunda:formField&lt;/code&gt; extension element, only&#xA;      the attributes &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt; are used.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      If the parent &lt;code&gt;camunda:properties&lt;/code&gt; element is directly added as an extension element,&#xA;      for example by the Camunda Modeler, only the attributes &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt;&#xA;      are used.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Parent elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#properties&#34;&gt;camunda:properties&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Child elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &amp;ndash;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;script&#34;&gt;script&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      A script element. The script is executed and the return value is used as mapping value.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Attributes&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;scriptFormat&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      The format identifier, normally the language of the script source code&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;resource&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      equivalent to &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-attributes/#resource&#34;&gt;&#xA;      camunda:resource&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Constraints&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      The &lt;code&gt;scriptFormat&lt;/code&gt; attribute is required&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      If the &lt;code&gt;resource&lt;/code&gt; attribute is used, no source code text content is allowed&#xA;    &lt;/td&gt;&#xA;  &lt;tr&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Parent elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#inputparameter&#34;&gt;&#xA;        camunda:inputParameter&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#outputparameter&#34;&gt;&#xA;        camunda:outputParameter&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#entry&#34;&gt;camunda:entry&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#list&#34;&gt;camunda:list&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#executionlistener&#34;&gt;&#xA;        camunda:executionListener&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#tasklistener&#34;&gt;&#xA;        camunda:taskListener&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Child elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &amp;ndash;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;string&#34;&gt;string&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      Defines a String value to inject in delegated classes (see &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/delegation-code/#field-injection&#34;&gt;Field Injection&lt;/a&gt;).&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Attributes&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &amp;ndash;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Text Content&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      The String value to inject&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Constraints&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &amp;ndash;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Parent elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#field&#34;&gt;camunda:field&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Child elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &amp;ndash;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;tasklistener&#34;&gt;taskListener&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      Adds a task listener to a task event.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Attributes&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;event&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      The type of the event for which the listener is called&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;class&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      see &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-attributes/#class&#34;&gt;camunda:class&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;expression&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      see &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-attributes/#expression&#34;&gt;camunda:expression&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;delegateExpression&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      see &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-attributes/#delegateexpression&#34;&gt;camunda:delegateExpression&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;id&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      The id of the task listener in the parent scope, only required when &lt;code&gt;event&lt;/code&gt; is set to &lt;code&gt;timeout&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Constraints&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      The &lt;code&gt;event&lt;/code&gt; attribute is required and must be one of the task events: &#xA;      &lt;code&gt;create&lt;/code&gt;, &lt;code&gt;assignment&lt;/code&gt;, &lt;code&gt;update&lt;/code&gt;, &#xA;      &lt;code&gt;complete&lt;/code&gt;, &lt;code&gt;delete&lt;/code&gt; or &lt;code&gt;timeout&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      One of the attributes &lt;code&gt;class&lt;/code&gt;, &lt;code&gt;expression&lt;/code&gt; or &lt;code&gt;delegateExpression&lt;/code&gt; is mandatory&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      If the attribute &lt;code&gt;event&lt;/code&gt; is set to &lt;code&gt;timeout&lt;/code&gt;, the attribute &lt;code&gt;id&lt;/code&gt; and exactly one child element of type &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/timer-events/#defining-a-timer&#34;&gt;timerEventDefinition&lt;/a&gt; are mandatory&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Parent elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/user-task/&#34;&gt;User Task&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Child elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#field&#34;&gt;camunda:field&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#script&#34;&gt;camunda:script&lt;/a&gt;,&#xA;&#x9;  &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/timer-events/#defining-a-timer&#34;&gt;timerEventDefinition&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;validation&#34;&gt;validation&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      Metadata to define a list of validation constraints for form fields (see &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/task-forms/#form-field-validation&#34;&gt;Form Field Validation&lt;/a&gt;).&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Attributes&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &amp;ndash;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Constraints&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &amp;ndash;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Parent elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#formfield&#34;&gt;camunda:formField&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Child elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#constraint&#34;&gt;camunda:constraint&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;value&#34;&gt;value&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      Possible values of a form field with the type &lt;code&gt;enum&lt;/code&gt;.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Attributes&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;id&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      The id of the value&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;name&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      The name of the value&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Constraints&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &amp;ndash;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Parent elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#formfield&#34;&gt;camunda:formField&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#formproperty&#34;&gt;camunda:formProperty&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Child elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &amp;ndash;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;</description>
    </item>
    <item>
      <title>CIB seven Services</title>
      <link>/manual/1.0/user-guide/runtime-container-integration/bpm-platform-services/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/runtime-container-integration/bpm-platform-services/</guid>
      <description>&lt;p&gt;To inspect the current state of configured process engines and deployed process applications, the class &lt;code&gt;org.camunda.bpm.BpmPlatform&lt;/code&gt; offers access to the &lt;code&gt;ProcessEngineService&lt;/code&gt; and the &lt;code&gt;ProcessApplicationService&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;h1 id=&#34;processengineservice&#34;&gt;ProcessEngineService&lt;/h1&gt;&#xA;&lt;p&gt;The &lt;a href=&#34;/manual/1.0/javadoc/cibseven/1.0/org/camunda/bpm/ProcessEngineService.html&#34;&gt;ProcessEngineService&lt;/a&gt;&#xA; can be accessed by calling &lt;code&gt;BpmPlatform.getProcessEngineService()&lt;/code&gt;. It offers access to the default process engine, as well as any process engine by its name as specified in the process engine configuration. It returns &lt;code&gt;ProcessEngine&lt;/code&gt; objects from which any services for a specific engine can be accessed.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Classic vs Fluent API</title>
      <link>/manual/1.0/reference/cmmn11/api/classic-vs-fluent/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/cmmn11/api/classic-vs-fluent/</guid>
      <description>&lt;!-- move this to the user guide as soon as there is a concept on how separate CMMN and BPMN concerns in it --&gt;&#xA;&lt;p&gt;To interact with case instances and executions, the process engine offers the case service. It can be retrieved by &lt;code&gt;processEngine.getCaseService()&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;The &lt;code&gt;CaseService&lt;/code&gt; offers two API variants. One is in the following referred to as the &lt;em&gt;classic&lt;/em&gt; API, since it is very similar to the API offered by the &lt;code&gt;RuntimeService&lt;/code&gt; for BPMN processes. The &lt;em&gt;fluent&lt;/em&gt; API follows a different concept in that it allows composition of case service commands by method chaining.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Configuration</title>
      <link>/manual/1.0/webapps/cockpit/extend/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/webapps/cockpit/extend/configuration/</guid>
      <description>&lt;p&gt;You can override the default configuration of Cockpit using a central configuration file&#xA;located in &lt;code&gt;app/cockpit/scripts/config.js&lt;/code&gt;. The following configuration options are&#xA;available:&lt;/p&gt;&#xA;&lt;h1 id=&#34;logo-and-header-color&#34;&gt;Logo and Header Color&lt;/h1&gt;&#xA;&lt;p&gt;You can change the visual aspects of Cockpit. The user stylesheet file is located in&#xA;&lt;code&gt;app/cockpit/styles/user-styles.css&lt;/code&gt;. This file contains CSS which is loaded into Cockpit&#xA;and can override the standard styles.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;/* hides the Camunda logo */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;app-banner&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;svg&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;display&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;none&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;app-banner&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c&#34;&gt;/* hides the &amp;#34;Camunda Cockpit&amp;#34; text */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;text-indent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;vw&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c&#34;&gt;/* put your logo */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;background-image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sx&#34;&gt;./path/to/the/logo.png&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c&#34;&gt;/* sets the width to match the logo&amp;#39;s width */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;/* changes the header top border color  */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Header&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;border-top-color&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;blue&lt;/span&gt; &lt;span class=&#34;cp&#34;&gt;!important&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; you can also change the app name (&lt;em&gt;Cockpit&lt;/em&gt;) and vendor (&lt;em&gt;Camunda&lt;/em&gt;)&#xA;by changing the &lt;code&gt;app/cockpit/scripts/config.js&lt;/code&gt; configuration file as follow:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Configure Authentication</title>
      <link>/manual/1.0/reference/rest/overview/authentication/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/rest/overview/authentication/</guid>
      <description>&lt;p&gt;The REST API ships with an implementation of &lt;a href=&#34;http://en.wikipedia.org/wiki/Basic_access_authentication&#34;&gt;HTTP Basic Authentication&lt;/a&gt;. By default it is switched off, but can be activated by adding a servlet filter as follows:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;filter&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;filter-name&amp;gt;&lt;/span&gt;camunda-auth&lt;span class=&#34;nt&#34;&gt;&amp;lt;/filter-name&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;filter-class&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    org.camunda.bpm.engine.rest.security.auth.ProcessEngineAuthenticationFilter&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;/filter-class&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;async-supported&amp;gt;&lt;/span&gt;true&lt;span class=&#34;nt&#34;&gt;&amp;lt;/async-supported&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;init-param&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;param-name&amp;gt;&lt;/span&gt;authentication-provider&lt;span class=&#34;nt&#34;&gt;&amp;lt;/param-name&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;param-value&amp;gt;&lt;/span&gt;org.camunda.bpm.engine.rest.security.auth.impl.HttpBasicAuthenticationProvider&lt;span class=&#34;nt&#34;&gt;&amp;lt;/param-value&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;/init-param&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/filter&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;filter-mapping&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;filter-name&amp;gt;&lt;/span&gt;camunda-auth&lt;span class=&#34;nt&#34;&gt;&amp;lt;/filter-name&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;url-pattern&amp;gt;&lt;/span&gt;/*&lt;span class=&#34;nt&#34;&gt;&amp;lt;/url-pattern&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/filter-mapping&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Any engine-specific request will then be authenticated against that engine&amp;rsquo;s identity service. The GET &lt;code&gt;/engine&lt;/code&gt; request that supplies a list of all available process engines is the only request that does not require authentication. Any request that does not address a specific engine (i.e., it is not of the form &lt;code&gt;/engine/{name}/...&lt;/code&gt;) will be authenticated against the default engine.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Configure the DMN engine</title>
      <link>/manual/1.0/user-guide/process-engine/decisions/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/process-engine/decisions/configuration/</guid>
      <description>&lt;p&gt;The configuration of the DMN engine is a part of the process engine configuration. It depends on whether you use an application managed or a shared, container managed process engine. Please refer to the &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/process-engine-bootstrapping/&#34;&gt;Process Engine Bootstrapping&lt;/a&gt; for details.&lt;/p&gt;&#xA;&lt;p&gt;This section shows how to configure the DMN engine:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#configure-the-dmn-engine-using-java-api&#34;&gt;Programmatically via Java API&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#configure-the-dmn-engine-using-spring-xml&#34;&gt;Declarative via XML configuration&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;In the examples the default expression language of the input expressions is set to &lt;code&gt;groovy&lt;/code&gt;. A list of all possible configurations can be found in the &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/dmn-engine/embed/#configuration-of-the-dmn-engine&#34;&gt;DMN Engine Configuration&lt;/a&gt; section.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Configuring Spin Integration</title>
      <link>/manual/1.0/user-guide/data-formats/configuring-spin-integration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/data-formats/configuring-spin-integration/</guid>
      <description>&lt;p&gt;To use Spin with the process engine, the following is required:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;The Spin libraries must be on the engine&amp;rsquo;s classpath&lt;/li&gt;&#xA;&lt;li&gt;The Spin process engine plugin must be registered with the process engine&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;The following sections go into the details of integrating Spin with the process engine. Note that when you use a pre-built Camunda distribution, Spin is already integrated.&lt;/p&gt;&#xA;&lt;h1 id=&#34;artifacts&#34;&gt;Artifacts&lt;/h1&gt;&#xA;&lt;p&gt;There are three types of Spin artifacts as follows.&lt;/p&gt;&#xA;&lt;h2 id=&#34;camunda-spin-core&#34;&gt;camunda-spin-core&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;camunda-spin-core&lt;/code&gt; is a jar that contains only the core Spin classes. It can be combined with single data format artifacts. Camunda provides the artifacts &lt;code&gt;camunda-spin-dataformat-json-jackson&lt;/code&gt; and &lt;code&gt;camunda-spin-dataformat-xml-dom&lt;/code&gt; (&lt;code&gt;camunda-spin-dataformat-xml-dom-jakarta&lt;/code&gt; for Jakarta XML Binding 4.0 support) that implement JSON and XML processing. These artifacts transitively pull in libraries they need. For example, &lt;code&gt;camunda-spin-dataformat-json-jackson&lt;/code&gt; has a dependency to &lt;code&gt;jackson-databind&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Dashboard</title>
      <link>/manual/1.0/webapps/cockpit/bpmn/dashboard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/webapps/cockpit/bpmn/dashboard/</guid>
      <description>&lt;p&gt;The processes dashboard of Cockpit is the entry point for process monitoring. It comes with a pre-installed plugin, which lets you see deployed process definitions. Additional &lt;a href=&#34;/manual/1.0/manual/1.0/webapps/cockpit/extend/plugins/&#34;&gt;plugins&lt;/a&gt; can be added to the processes dashboard.&lt;/p&gt;&#xA;&lt;h1 id=&#34;deployed-processes&#34;&gt;Deployed Processes&lt;/h1&gt;&#xA;&lt;figure class=&#34;image&#34;&gt;&#xA;  &lt;span&gt;&lt;img&#xA;      src=&#34;../../img/cockpit-process-definition-state.png&#34;&#xA;      &#xA;          title=&#34;Deployed Processes&#34;&#xA;       /&gt;&lt;/span&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;With this plugin you can easily observe the state of a process definition. Green and red dots signalize running and &lt;a href=&#34;/manual/1.0/manual/1.0/webapps/cockpit/bpmn/failed-jobs/&#34;&gt;failed jobs&lt;/a&gt;. At this observing level a red dot signifies that there is at least one process instance or a sub process instance which has an unresolved incident. You can localize the problem by using the &lt;a href=&#34;/manual/1.0/manual/1.0/webapps/cockpit/bpmn/process-definition-view/&#34;&gt;process definition view&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Dashboard</title>
      <link>/manual/1.0/webapps/cockpit/dashboard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/webapps/cockpit/dashboard/</guid>
      <description>&lt;figure class=&#34;image&#34;&gt;&#xA;  &lt;span&gt;&lt;img&#xA;      src=&#34;../img/dashboard.png&#34;&#xA;      &#xA;          title=&#34;Cockpit Dashboard&#34;&#xA;       /&gt;&lt;/span&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;The dashboard of Cockpit provides a quick overview of running and historic operations as well as details about deployments.&lt;/p&gt;&#xA;&lt;p&gt;At the top of the dashboard you can see a plugin with pie charts that display the amount of running process instances, open incidents and open human tasks.&#xA;By clicking on the number or a section of the pie chart, you are forwarded to the respective search with preselected query parameters.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Data-based Exclusive Gateway (XOR)</title>
      <link>/manual/1.0/reference/bpmn20/gateways/exclusive-gateway/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/bpmn20/gateways/exclusive-gateway/</guid>
      <description>&lt;p&gt;An exclusive gateway (also called the XOR gateway or, in more technical terms, the exclusive data-based gateway), is used to model a decision in the process. When the execution arrives at this gateway, all outgoing sequence flows are evaluated in the order in which they have been defined. The sequence flow which condition evaluates to &amp;rsquo;true&amp;rsquo; (or which doesn&amp;rsquo;t have a condition set, conceptually having a &amp;rsquo;true&amp;rsquo; value defined on the sequence flow) is selected for continuing the process.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Database Schema</title>
      <link>/manual/1.0/user-guide/process-engine/database/database-schema/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/process-engine/database/database-schema/</guid>
      <description>&lt;p&gt;The database schema of the process engine consists of multiple tables.&#xA;The table names all start with ACT. The second part is a two-character&#xA;identification of the use case of the table. This use case will also roughly&#xA;match the service API.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;ACT_RE_*&lt;/code&gt;: &lt;code&gt;RE&lt;/code&gt; stands for repository. Tables with this prefix contain &amp;lsquo;static&amp;rsquo; information such as process definitions and process resources (images, rules, etc.).&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;ACT_RU_*&lt;/code&gt;: &lt;code&gt;RU&lt;/code&gt; stands for runtime. These are the runtime tables that contain the runtime data of process instances, user tasks, variables, jobs, etc. The engine only stores the runtime data during process instance execution and removes the records when a process instance ends. This keeps the runtime tables small and fast.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;ACT_ID_*&lt;/code&gt;: &lt;code&gt;ID&lt;/code&gt; stands for identity. These tables contain identity information such as users, groups, etc.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;ACT_HI_*&lt;/code&gt;: &lt;code&gt;HI&lt;/code&gt; stands for history. These are the tables that contain historical data such as past process instances, variables, tasks, etc.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;ACT_GE_*&lt;/code&gt;: General data, which is used in various use cases.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;The main tables of the process engines are the entities of process definitions, executions, tasks, variables and&#xA;event subscriptions. Their relationship is shown in the following UML model.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Decision Definition View</title>
      <link>/manual/1.0/webapps/cockpit/dmn/decision-definition-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/webapps/cockpit/dmn/decision-definition-view/</guid>
      <description>&lt;figure class=&#34;image&#34;&gt;&#xA;  &lt;span&gt;&lt;img&#xA;      src=&#34;../../img/cockpit-decision-definition-view.png&#34;&#xA;      &#xA;          title=&#34;Decision Definition View&#34;&#xA;       /&gt;&lt;/span&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;On the decision definition view, you can find a table or literal expression of the deployed decision definition. You can change the version of the decision definition in the dropdown menu on the left side. The table or literal expression is then updated accordingly. You can also navigate to the deployment of the selected version that contains the decision definition. Clicking the &lt;code&gt;navigate to deployment&lt;/code&gt; button will take you to the &lt;a href=&#34;/manual/1.0/manual/1.0/webapps/cockpit/deployment-view/&#34;&gt;deployment view&lt;/a&gt;. You can maximize the table view or the detailed information panel by clicking on the &lt;button class=&#34;btn btn-xs&#34;&gt;&lt;i class=&#34;glyphicon glyphicon-resize-full&#34;&gt;&lt;/i&gt;&lt;/button&gt; button, respectively the &lt;button class=&#34;btn btn-xs&#34;&gt;&lt;i class=&#34;glyphicon glyphicon-menu-up&#34;&gt;&lt;/i&gt;&lt;/button&gt; button, at the bottom left of the table view.&lt;/p&gt;</description>
    </item>
    <item>
      <title>DMN Decision Table Input</title>
      <link>/manual/1.0/reference/dmn/decision-table/input/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/dmn/decision-table/input/</guid>
      <description>&lt;figure class=&#34;image no-lightbox&#34;&gt;&#xA;  &lt;span&gt;&lt;img&#xA;      src=&#34;../img/input.png&#34;&#xA;      &#xA;          title=&#34;Input&#34;&#xA;       /&gt;&lt;/span&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;A decision table can have one or more inputs, also called input clauses. An&#xA;input clause defines the id, label, expression and type of a decision table&#xA;input.&lt;/p&gt;&#xA;&lt;p&gt;An input can be edited by double-clicking on the&#xA;respective colum header in the decision table.&lt;/p&gt;&#xA;&lt;p&gt;An input clause is represented by an &lt;code&gt;input&lt;/code&gt; element inside a &lt;code&gt;decisionTable&lt;/code&gt;&#xA;XML element.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;definitions&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xmlns=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;https://www.omg.org/spec/DMN/20191111/MODEL/&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;definitions&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;definitions&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;namespace=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://camunda.org/schema/1.0/dmn&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;decision&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;dish&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Dish&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;decisionTable&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;decisionTable&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;input1&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;label=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Season&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;inputExpression&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;inputExpression1&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;typeRef=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;nt&#34;&gt;&amp;lt;text&amp;gt;&lt;/span&gt;season&lt;span class=&#34;nt&#34;&gt;&amp;lt;/text&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/inputExpression&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;/input&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;c&#34;&gt;&amp;lt;!-- ... --&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/decisionTable&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;/decision&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/definitions&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;input-id&#34;&gt;Input Id&lt;/h1&gt;&#xA;&lt;p&gt;The input id is a unique identifier of the decision table input. It is used by&#xA;CIB seven to reference the input in the history of evaluated&#xA;decisions. Therefore, it is required by the Camunda DMN engine. It is set as&#xA;the &lt;code&gt;id&lt;/code&gt; attribute of the &lt;code&gt;input&lt;/code&gt; XML element.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Download</title>
      <link>/manual/1.0/introduction/downloading-cibseven/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/introduction/downloading-cibseven/</guid>
      <description>&lt;h1 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h1&gt;&#xA;&lt;p&gt;Before downloading CIB seven, make sure you have a JRE (Java Runtime Environment), or better, a JDK&#xA;(Java Development Kit) installed. Please check the supported &lt;a href=&#34;/manual/1.0/manual/1.0/introduction/supported-environments/#java&#34;&gt;Java versions&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.oracle.com/technetwork/java/javase/downloads/index.html&#34;&gt;Download JDK&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;download-the-runtime&#34;&gt;Download the Runtime&lt;/h1&gt;&#xA;&lt;p&gt;CIB seven is a flexible framework which can be used in different contexts. See &lt;a href=&#34;/manual/1.0/manual/1.0/introduction/architecture/&#34;&gt;Architecture Overview&lt;/a&gt; for more details. Based on how you want&#xA;to use CIB seven, you can choose a different distribution.&lt;/p&gt;&#xA;&lt;p&gt;It is also possible to run CIB seven with &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/spring-boot-integration/&#34;&gt;Spring Boot&lt;/a&gt; and &lt;a href=&#34;/manual/1.0/manual/1.0/installation/docker/&#34;&gt;Docker&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Embedded Subprocess</title>
      <link>/manual/1.0/reference/bpmn20/subprocesses/embedded-subprocess/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/bpmn20/subprocesses/embedded-subprocess/</guid>
      <description>&lt;p&gt;A subprocess is an activity that contains other activities, gateways, events, etc., which itself forms a process that is part of a bigger process. A subprocess is completely defined inside a parent process (that&amp;rsquo;s why it&amp;rsquo;s often called an embedded Subprocess).&lt;/p&gt;&#xA;&lt;p&gt;Subprocesses have two major use cases:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Subprocesses allow hierarchical modeling. Many modeling tools allow that subprocesses can be collapsed, hiding all the details of the subprocess and displaying a high-level, end-to-end overview of the business process.&lt;/li&gt;&#xA;&lt;li&gt;A subprocess creates a new scope for events. Events that are thrown during execution of the subprocess can be caught by a boundary event on the boundary of the subprocess, thus creating a scope for that event, limited to the subprocess.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Using a subprocess does impose some constraints:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Embedding the DMN Engine</title>
      <link>/manual/1.0/user-guide/dmn-engine/embed/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/dmn-engine/embed/</guid>
      <description>&lt;p&gt;The Camunda DMN engine can be used as a library in a custom application. To achieve this,&#xA;add the &lt;code&gt;camunda-engine-dmn&lt;/code&gt; artifact to the classpath of the application and then&#xA;configure and build a decision engine instance. This section provides the&#xA;required maven coordinates to add the DMN engine as a dependency to your&#xA;project. It then shows how to configure and build a new DMN engine instance.&lt;/p&gt;&#xA;&lt;h1 id=&#34;maven-coordinates&#34;&gt;Maven Coordinates&lt;/h1&gt;&#xA;&lt;p&gt;The Camunda DMN engine is released to Maven Central.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Extension Elements</title>
      <link>/manual/1.0/reference/cmmn11/custom-extensions/camunda-elements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/cmmn11/custom-extensions/camunda-elements/</guid>
      <description>&lt;p&gt;The following elements are extension elements for the &lt;code&gt;camunda&lt;/code&gt; namespace &lt;code&gt;http://camunda.org/schema/1.0/cmmn&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;h1 id=&#34;caseexecutionlistener&#34;&gt;caseExecutionListener&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      Add an execution listener to an event in the lifecycle of a case item.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Attributes&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;event&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      The type of the lifecycle event for which the listener is called&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;class&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      see &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/custom-extensions/camunda-attributes/#class&#34;&gt;camunda:class&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;expression&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      see &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/custom-extensions/camunda-attributes/#expression&#34;&gt;camunda:expression&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;delegateExpression&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      see &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/custom-extensions/camunda-attributes/#delegateexpression&#34;&gt;camunda:delegateExpression&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Constraints&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      The &lt;code&gt;event&lt;/code&gt; attribute is required and must be one of the lifecycle events that are valid for the plan item it is defined on. For regular tasks, these are: &lt;code&gt;create&lt;/code&gt;, &lt;code&gt;enable&lt;/code&gt;, &lt;code&gt;disable&lt;/code&gt;, &lt;code&gt;reenable&lt;/code&gt;, &lt;code&gt;start&lt;/code&gt;, &lt;code&gt;manualStart&lt;/code&gt;, &lt;code&gt;complete&lt;/code&gt;, &lt;code&gt;reactivate&lt;/code&gt;, &lt;code&gt;terminate&lt;/code&gt;, &lt;code&gt;exit&lt;/code, &lt;code&gt;parentTerminate&lt;/code&gt;, &lt;code&gt;suspend&lt;/code&gt;, &lt;code&gt;resume&lt;/code&gt;, &lt;code&gt;parentSuspend&lt;/code&gt;, &lt;code&gt;parentSuspend&lt;/code&gt;, &lt;code&gt;close&lt;/code&gt;, &lt;code&gt;occur&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      One of the attributes &lt;code&gt;class&lt;/code&gt;, &lt;code&gt;expression&lt;/code&gt; or &lt;code&gt;delegateExpression&lt;/code&gt; is mandatory&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Parent elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      Case,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/tasks/human-task/&#34;&gt;Human Task&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/tasks/process-task/&#34;&gt;Process Task&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/tasks/case-task/&#34;&gt;Case Task&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/grouping-tasks/stage/&#34;&gt;Stage&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/milestone/&#34;&gt;Milestone&lt;/a&gt;,&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Child elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/custom-extensions/camunda-elements/#field&#34;&gt;camunda:field&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/custom-extensions/camunda-elements/#script&#34;&gt;camunda:script&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;expression&#34;&gt;expression&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;&lt;tr&gt;&#xA;  &lt;th&gt;Description&lt;/th&gt;&#xA;  &lt;td colspan=&#34;2&#34;&gt;&#xA;    Defines an expression to inject in delegated classes (see &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/delegation-code/#field-injection&#34;&gt;Field Injection&lt;/a&gt;).&#xA;  &lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;  &lt;th&gt;Attributes&lt;/th&gt;&#xA;  &lt;td colspan=&#34;2&#34;&gt;&#xA;    &amp;ndash;&#xA;  &lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;  &lt;th&gt;Text Content&lt;/th&gt;&#xA;  &lt;td colspan=&#34;2&#34;&gt;&#xA;    The expression to inject&#xA;  &lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;  &lt;th&gt;Constraints&lt;/th&gt;&#xA;  &lt;td colspan=&#34;2&#34;&gt;&#xA;    &amp;ndash;&#xA;  &lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;  &lt;th&gt;Parent elements&lt;/th&gt;&#xA;  &lt;td colspan=&#34;2&#34;&gt;&#xA;    &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/custom-extensions/camunda-elements/#field&#34;&gt;camunda:field&lt;/a&gt;&#xA;  &lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;  &lt;th&gt;Child elements&lt;/th&gt;&#xA;  &lt;td colspan=&#34;2&#34;&gt;&#xA;    &amp;ndash;&#xA;  &lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;field&#34;&gt;field&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      Defines the value to inject in delegated classes (see &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/delegation-code/#field-injection&#34;&gt;Field Injection&lt;/a&gt;).&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Attributes&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;name&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      The name of the field&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;expression&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;The value of the field as expression&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;stringValue&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;The value of the field as String&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Constraints&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      Only one attribute of &lt;code&gt;stringValue&lt;/code&gt; and &lt;code&gt;expression&lt;/code&gt; or one of the child elements &lt;code&gt;string&lt;/code&gt; and &lt;code&gt;expression&lt;/code&gt; can be used&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Parent elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/custom-extensions/camunda-elements/#variablelistener&#34;&gt;camunda:variableListener&lt;/a&gt;,&#xA;      camunda:caseExecutionListener&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Child elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/custom-extensions/camunda-elements/#expression&#34;&gt;camunda:expression&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/custom-extensions/camunda-elements/#string&#34;&gt;camunda:string&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;in&#34;&gt;in&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      This element specifies variables which should be passed to the sub instance (process instance or case instance), see &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/tasks/process-task/#exchange-variables&#34;&gt;passing variables to called process&lt;/a&gt; or &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/tasks/case-task/#exchange-variables&#34;&gt;passing variables to called case&lt;/a&gt; for more information.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Attributes&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;source&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      A name of a variable to be passed in&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;sourceExpression&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      An expression to be evaluated and passed in&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;variables&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      Can be set to &lt;code&gt;all&lt;/code&gt; to pass all variables in&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;target&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      Name of the variable inside the sub instance&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;local&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      Can be set to &lt;code&gt;true&lt;/code&gt; to only pass local variables of the case execution that executes this case/process task instance.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;businessKey&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      Set the business key of the sub instance&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Constraints&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      Only one of the attributes &lt;code&gt;source&lt;/code&gt;, &lt;code&gt;sourceExpression&lt;/code&gt;, &lt;code&gt;variables&lt;/code&gt; or &lt;code&gt;businessKey&lt;/code&gt; can be used&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      The attribute &lt;code&gt;target&lt;/code&gt; is required if the &lt;code&gt;source&lt;/code&gt; or &lt;code&gt;sourceExpression&lt;/code&gt; attribute is used&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Parent elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/tasks/process-task/&#34;&gt;Process Task&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/tasks/case-task/&#34;&gt;Case Task&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Child elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &amp;ndash;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;out&#34;&gt;out&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      This element specifies variables which should be passed back from the sub instance (process instance or case instance), see &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/tasks/process-task/#exchange-variables&#34;&gt;passing variables to called process&lt;/a&gt; or &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/tasks/case-task/#exchange-variables&#34;&gt;passing variables to called case&lt;/a&gt; for more information.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Attributes&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;source&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      A name of a variable to be passed back&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;sourceExpression&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      An expression to be evaluated and passed back&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;variables&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      Can be set to &lt;code&gt;all&lt;/code&gt; to pass all sub instance variables back&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;target&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      Name of the variable inside the calling case instance&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Constraints&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      Only one of the attributes &lt;code&gt;source&lt;/code&gt;, &lt;code&gt;sourceExpression&lt;/code&gt; or &lt;code&gt;variables&lt;/code&gt; can be used&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      The attribute &lt;code&gt;target&lt;/code&gt; is required if the &lt;code&gt;source&lt;/code&gt; or &lt;code&gt;sourceExpression&lt;/code&gt; attribute is used&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Parent elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/tasks/process-task/&#34;&gt;Process Task&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/tasks/case-task/&#34;&gt;Case Task&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Child elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &amp;ndash;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;script&#34;&gt;script&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      A script element. The script is executed and the return value is used as mapping value.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Attributes&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;scriptFormat&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      The format identifier, normally the language of the script source code&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;resource&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      equivalent to &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/custom-extensions/camunda-attributes/#resource&#34;&gt;&#xA;      camunda:resource&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Constraints&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      The &lt;code&gt;scriptFormat&lt;/code&gt; attribute is required&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      If the &lt;code&gt;resource&lt;/code&gt; attribute is used, no source code text content is allowed&#xA;    &lt;/td&gt;&#xA;  &lt;tr&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Parent elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/custom-extensions/camunda-elements/#variablelistener&#34;&gt;&#xA;        camunda:variableListener&lt;/a&gt;,&#xA;      camunda:caseExecutionListener&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Child elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &amp;ndash;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;string&#34;&gt;string&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      Defines a String value to inject in delegated classes (see &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/delegation-code/#field-injection&#34;&gt;Field Injection&lt;/a&gt;).&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Attributes&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &amp;ndash;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Text Content&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      The String value to inject&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Constraints&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &amp;ndash;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Parent elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/custom-extensions/camunda-elements/#field&#34;&gt;camunda:field&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Child elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &amp;ndash;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;tasklistener&#34;&gt;taskListener&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      Add a task listener to a task event.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Attributes&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;event&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      The type of the event for which the listener is called&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;class&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      see &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/custom-extensions/camunda-attributes/#class&#34;&gt;camunda:class&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;expression&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      see &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/custom-extensions/camunda-attributes/#expression&#34;&gt;camunda:expression&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;delegateExpression&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      see &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/custom-extensions/camunda-attributes/#delegateexpression&#34;&gt;camunda:delegateExpression&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Constraints&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      The &lt;code&gt;event&lt;/code&gt; attribute is required and must be one of the task events: &lt;code&gt;create&lt;/code&gt;, &lt;code&gt;assignment&lt;/code&gt;, &lt;code&gt;complete&lt;/code&gt; or &lt;code&gt;delete&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      One of the attributes &lt;code&gt;class&lt;/code&gt;, &lt;code&gt;expression&lt;/code&gt; or &lt;code&gt;delegateExpression&lt;/code&gt; is mandatory&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Parent elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/tasks/human-task/&#34;&gt;Human Task&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Child elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/custom-extensions/camunda-elements/#field&#34;&gt;camunda:field&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/custom-extensions/camunda-elements/#script&#34;&gt;camunda:script&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;variablelistener&#34;&gt;variableListener&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      Adds custom code to listen to variable events such as the creation, update or deletion of a variable. A listener defined on a model scope (like the case plan model, a human task, etc.) is notified for all variable events that occur in this scope or any of its subordinate scopes.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Attributes&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;event&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      The type of the event for which the listener is called&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;class&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      see &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/custom-extensions/camunda-attributes/#class&#34;&gt;camunda:class&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;expression&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      see &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/custom-extensions/camunda-attributes/#expression&#34;&gt;camunda:expression&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;delegateExpression&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      see &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/custom-extensions/camunda-attributes/#delegateexpression&#34;&gt;camunda:delegateExpression&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Constraints&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      Valid values for the &lt;code&gt;event&lt;/code&gt; attribute are &lt;code&gt;create&lt;/code&gt;, &lt;code&gt;update&lt;/code&gt; and &lt;code&gt;delete&lt;/code&gt;. This attribute is optional and if left out, the listener is notified for all kinds of events.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      Either one of the attributes &lt;code&gt;class&lt;/code&gt;, &lt;code&gt;expression&lt;/code&gt; or &lt;code&gt;delegateExpression&lt;/code&gt;, or a &lt;code&gt;camunda:script&lt;/code&gt; child element is mandatory.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Parent elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      Case Plan Model,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/grouping-tasks/stage/&#34;&gt;Stage&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/tasks/human-task/&#34;&gt;Human Task&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/tasks/process-task/&#34;&gt;Process Task&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/tasks/case-task/&#34;&gt;Case Task&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Child elements&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/custom-extensions/camunda-elements/#field&#34;&gt;camunda:field&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/custom-extensions/camunda-elements/#script&#34;&gt;camunda:script&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;variableonpart&#34;&gt;variableOnPart&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      Add variableOnPart to sentry. see &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/sentry/#variableonpart&#34;&gt;variableOnPart.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Attributes&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;variableName&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      see &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/custom-extensions/camunda-attributes/#variablename&#34;&gt;camunda:variableName&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Constraints&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &lt;code&gt;variableEvent&lt;/code&gt; element and &lt;code&gt;variableName&lt;/code&gt; attribute are mandatory fields when the variableOnPart is defined in a sentry.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Parent element&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/sentry/&#34;&gt;Sentries&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Child element&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/custom-extensions/camunda-elements/#variableevent&#34;&gt;camunda:variableEvent&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;variableevent&#34;&gt;variableEvent&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      Add variableEvent to a VariableOnPart. A sentry is evaluated when the variableEvent transition occurs.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Value&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      Valid values are &lt;code&gt;create&lt;/code&gt;,&lt;code&gt;update&lt;/code&gt; or &lt;code&gt;delete&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Parent element&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/custom-extensions/camunda-elements/#variableonpart&#34;&gt;VariableOnPart&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;</description>
    </item>
    <item>
      <title>FEEL Data Types</title>
      <link>/manual/1.0/reference/dmn/feel/legacy/data-types/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/dmn/feel/legacy/data-types/</guid>
      <description>&lt;div class=&#34;note bg-info docs-info&#34;&gt;&#xA;  &lt;h3&gt;Heads Up!&lt;/h3&gt;&#xA;  &lt;p&gt;This page provides information on the legacy FEEL Engine, that was used before the&#xA;current &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/dmn-engine/feel/&#34;&gt;Scala-based FEEL Engine&lt;/a&gt;&#xA;was integrated into CIB seven.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;The Camunda DMN engine supports the following FEEL data types.&lt;/p&gt;&#xA;&lt;h1 id=&#34;string&#34;&gt;String&lt;/h1&gt;&#xA;&lt;figure class=&#34;image no-lightbox&#34;&gt;&#xA;  &lt;span&gt;&lt;img&#xA;      src=&#34;../../img/string-type.png&#34;&#xA;      &#xA;          title=&#34;String&#34;&#xA;       /&gt;&lt;/span&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;FEEL supports Strings. They must be encapsulated in double quotes. They&#xA;support only the equal &lt;a href=&#34;/manual/1.0/manual/1.0/reference/dmn/feel/legacy/language-elements/#comparison&#34;&gt;comparison&lt;/a&gt; operator.&lt;/p&gt;&#xA;&lt;h1 id=&#34;numeric-types&#34;&gt;Numeric Types&lt;/h1&gt;&#xA;&lt;figure class=&#34;image no-lightbox&#34;&gt;&#xA;  &lt;span&gt;&lt;img&#xA;      src=&#34;../../img/integer-type.png&#34;&#xA;      &#xA;          title=&#34;Integer&#34;&#xA;       /&gt;&lt;/span&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;FEEL supports numeric types like integer. In the Camunda DMN engine the&#xA;following numeric types are available:&lt;/p&gt;</description>
    </item>
    <item>
      <title>FEEL Engine Type Handling</title>
      <link>/manual/1.0/user-guide/dmn-engine/feel/type-handling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/dmn-engine/feel/type-handling/</guid>
      <description>&lt;p&gt;This documentation covers supported types of variable values when used in a FEEL expression and&#xA;supported output types.&lt;/p&gt;&#xA;&lt;p&gt;In DMN, when defining a &lt;code&gt;typeRef&lt;/code&gt; attribute on a &lt;strong&gt;Variable&lt;/strong&gt;, &lt;strong&gt;Input&lt;/strong&gt; or &lt;strong&gt;Output&lt;/strong&gt; element, the&#xA;DMN Engine tries to convert the result value of the corresponding &lt;strong&gt;Literal Expression&lt;/strong&gt;,&#xA;&lt;strong&gt;Input Expression&lt;/strong&gt; or the &lt;strong&gt;Output Entry&lt;/strong&gt;. When no &lt;code&gt;typeRef&lt;/code&gt; attribute is specified, the DMN&#xA;Engine passes the return value of the FEEL Engine directly without any conversion. Please see the&#xA;documentation about &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/dmn-engine/data-types/#supported-data-types&#34;&gt;Supported Data Types in DMN&lt;/a&gt; to learn more about the &lt;code&gt;typeRef&lt;/code&gt; attribute.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Getting a Distribution</title>
      <link>/manual/1.0/reference/forms/embedded-forms/integrate/getting-a-distribution/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/forms/embedded-forms/integrate/getting-a-distribution/</guid>
      <description>&lt;h1 id=&#34;manual-download&#34;&gt;Manual Download&lt;/h1&gt;&#xA;&lt;p&gt;The Forms SDK library can be downloaded from&#xA;&lt;a href=&#34;https://github.com/camunda/bower-camunda-bpm-sdk-js/releases&#34;&gt;Github&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h1 id=&#34;bower&#34;&gt;Bower&lt;/h1&gt;&#xA;&lt;p&gt;Alternatively, the Forms SDK can be installed using the Bower package manager:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;bower install camunda-bpm-sdk-js --save&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;dependency-management&#34;&gt;Dependency Management&lt;/h1&gt;&#xA;&lt;p&gt;The Forms SDK depends on the following libraries:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;JQuery (or a compatible DOM manipulation Library).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;The Forms SDK &lt;em&gt;optionally&lt;/em&gt; depends on the following libraries:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;AngularJS (v1.2.16).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;including-the-library&#34;&gt;Including the Library&lt;/h1&gt;&#xA;&lt;p&gt;Next, you need to add the JavaScript Library to the page.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;jquery-2.1.1.min.js&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;text/javascript&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;camunda-bpm-sdk.min.js&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;text/javascript&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Or, with AngularJS Support:&lt;/p&gt;</description>
    </item>
    <item>
      <title>History configuration</title>
      <link>/manual/1.0/user-guide/process-engine/history/history-configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/process-engine/history/history-configuration/</guid>
      <description>&lt;h2 id=&#34;choose-a-history-level&#34;&gt;Choose a history level&lt;/h2&gt;&#xA;&lt;p&gt;The history level controls the amount of data the process engine provides via the history event stream. The following settings are available out of the box:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;NONE&lt;/code&gt;: no history events are fired.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;ACTIVITY&lt;/code&gt;: the following events are fired:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Process Instance START, UPDATE, END, MIGRATE: fired as process instances are being started, updated, ended and migrated&lt;/li&gt;&#xA;&lt;li&gt;Case Instance CREATE, UPDATE, CLOSE: fired as case instances are being created, updated and closed&lt;/li&gt;&#xA;&lt;li&gt;Activity Instance START, UPDATE, END, MIGRATE: fired as activity instances are being started, updated, ended and migrated&lt;/li&gt;&#xA;&lt;li&gt;Case Activity Instance CREATE, UPDATE, END: fired as case activity instances are being created, updated and ended&lt;/li&gt;&#xA;&lt;li&gt;Task Instance CREATE, UPDATE, COMPLETE, DELETE, MIGRATE: fired as task instances are being created, updated (i.e., re-assigned, delegated etc.), completed, deleted and migrated.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;AUDIT&lt;/code&gt;: in addition to the events provided by history level &lt;code&gt;ACTIVITY&lt;/code&gt;, the following events are fired:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Variable Instance CREATE, UPDATE, DELETE, MIGRATE: fired as process variables are created, updated, deleted and migrated. The default history backend (DbHistoryEventHandler) writes variable instance events to the historic variable instance database table. Rows in this table are updated as variable instances are updated, meaning that only the last value of a process variable will be available.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;FULL&lt;/code&gt;: in addition to the events provided by history level &lt;code&gt;AUDIT&lt;/code&gt;, the following events are fired:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Form property UPDATE: fired as form properties are being created and/or updated.&lt;/li&gt;&#xA;&lt;li&gt;The default history backend (DbHistoryEventHandler) writes historic variable updates to the database. This makes it possible to inspect the intermediate values of a process variable using the history service.&lt;/li&gt;&#xA;&lt;li&gt;User Operation Log UPDATE: fired when a user performs an operation like claiming a user task, delegating a user task etc.&lt;/li&gt;&#xA;&lt;li&gt;Incidents CREATE, DELETE, RESOLVE, MIGRATE: fired as incidents are being created, deleted, resolved and migrated&lt;/li&gt;&#xA;&lt;li&gt;Historic Job Log CREATE, FAILED, SUCCESSFUL, DELETED: fired as a job is being created, a job execution failed or was successful or a job was deleted&lt;/li&gt;&#xA;&lt;li&gt;Decision Instance EVALUATE: fired when a decision is evaluated by the DMN engine.&lt;/li&gt;&#xA;&lt;li&gt;Batch START, END: fired as batches are being started and ended&lt;/li&gt;&#xA;&lt;li&gt;Identity links ADD, DELETE: fired when an identity link is being added, deleted or when an assignee of a user task is set or changed and when the owner of a user task is set or changed.&lt;/li&gt;&#xA;&lt;li&gt;Historic External Task Log CREATED, DELETED, FAILED, SUCCESSFUL: fired as an external task has been created, deleted or an external task execution has been reported to fail or succeed.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;AUTO&lt;/code&gt;: The level &lt;code&gt;auto&lt;/code&gt; is useful if you are planning to run multiple engines on the same database. In that case, all engines have to use the same history level. Instead of manually keeping your configurations in sync, use the level &lt;code&gt;auto&lt;/code&gt; and the engine determines the level already configured in the database automatically. If none is found, the default value &lt;code&gt;audit&lt;/code&gt; is used. Keep in mind: If you are planning to use custom history levels, you have to register the custom levels for every configuration, otherwise an exception is thrown.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;If you need to customize the amount of history events logged, you can provide a custom implementation &lt;a href=&#34;/manual/1.0/javadoc/cibseven/1.0/org/camunda/bpm/engine/impl/history/producer/HistoryEventProducer.html&#34;&gt;HistoryEventProducer&lt;/a&gt;&#xA; and wire it in the process engine configuration.&lt;/p&gt;</description>
    </item>
    <item>
      <title>HTTP Connector</title>
      <link>/manual/1.0/reference/connect/http-connector/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/connect/http-connector/</guid>
      <description>&lt;p&gt;In Camunda Connect a &lt;code&gt;Connectors&lt;/code&gt; class exists which automatically detects&#xA;every connector in the classpath. It can be used to get the HTTP connector&#xA;instance by its connector ID, which is &lt;code&gt;http-connector&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;HttpConnector&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Connectors&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getConnector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;HttpConnector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;ID&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;configure-apache-http-client&#34;&gt;Configure Apache HTTP Client&lt;/h1&gt;&#xA;&lt;p&gt;Camunda Connect HTTP client uses the Apache HTTP client to make HTTP requests. Accordingly, it supports the same configuration options.&lt;/p&gt;&#xA;&lt;h2 id=&#34;default-configuration&#34;&gt;Default Configuration&lt;/h2&gt;&#xA;&lt;p&gt;By default, the HTTP client uses Apache&amp;rsquo;s default configuration and respects the &lt;a href=&#34;https://hc.apache.org/httpcomponents-client-4.5.x/current/httpclient/apidocs/org/apache/http/impl/client/HttpClientBuilder.html&#34;&gt;system properties that are supported by HTTP client&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Human Task</title>
      <link>/manual/1.0/reference/cmmn11/tasks/human-task/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/cmmn11/tasks/human-task/</guid>
      <description>&lt;p&gt;A &lt;em&gt;human task&lt;/em&gt; is used to model work that needs to be done by a human actor.&lt;/p&gt;&#xA;&lt;div class=&#34;cmmn-symbol&#34;&gt;&lt;img src=&#34;/manual/1.0/manual/1.0//img/short-codes/cmmn-human-task.png&#34; /&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;A human task is defined in XML as follows:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;humanTask&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;theHumanTask&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;A Human Task&amp;#34;&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;A human task in state &lt;code&gt;ENABLED&lt;/code&gt; can be started manually using the &lt;code&gt;CaseService&lt;/code&gt; as follows:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;caseService&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;manuallyStartCaseExecution&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;aCaseExecutionId&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;When the human task becomes &lt;code&gt;ACTIVE&lt;/code&gt;, a new task is created in the task list of the user(s) or group(s) assigned to that task.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Install the Pre-Packaged Distribution</title>
      <link>/manual/1.0/installation/full/tomcat/pre-packaged/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/installation/full/tomcat/pre-packaged/</guid>
      <description>&lt;h1 id=&#34;installation-procedure&#34;&gt;Installation Procedure&lt;/h1&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Download the pre-packaged distribution from &lt;a href=&#34;https://cibseven.de/download/&#34;&gt;https://cibseven.de/download/&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Unpack the distro to a directory.&lt;/li&gt;&#xA;&lt;li&gt;Adjust the datasource according to your needs (see &lt;a href=&#34;/manual/1.0/manual/1.0/installation/full/tomcat/manual/&#34;&gt;Manual Installation&lt;/a&gt;).&lt;/li&gt;&#xA;&lt;li&gt;Startup the server by running &lt;code&gt;camunda-welcome.bat&lt;/code&gt; or by using the &lt;code&gt;$TOMCAT_HOME/bin/startup.{bat/sh}&lt;/code&gt; script.&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>Manual Activation Rule</title>
      <link>/manual/1.0/reference/cmmn11/markers/manual-activation-rule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/cmmn11/markers/manual-activation-rule/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Can be used with&lt;/strong&gt;: &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/tasks/&#34;&gt;Task&lt;/a&gt;, &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/grouping-tasks/stage/&#34;&gt;Stage&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;cmmn-symbol&#34;&gt;&lt;img src=&#34;/manual/1.0/manual/1.0//img/short-codes/cmmn-marker-manual-activation.png&#34; /&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Whether the actual work of a task or stage can be performed depends on its &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/concepts/entry-exit-criteria/&#34;&gt;entry criteria&lt;/a&gt;. Given that an entry criterion is fulfilled, there are two ways to activate a task:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;By manual activation&lt;/li&gt;&#xA;&lt;li&gt;By automatic activation&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Automatic activation is the default behavior in which it is not required that a user manually activates a task. In camunda, manual activation can be done by using the &lt;code&gt;CaseService&lt;/code&gt; API with &lt;code&gt;caseService.manuallyStartCaseExecution(caseExecutionId)&lt;/code&gt;. By specifying a &lt;em&gt;manual activation rule&lt;/em&gt;, it is possible to omit this step or make it depend on case variable payload. With manual activation, a user can decide to activate a task or instead disable it. A task that is automatically activated &lt;em&gt;must&lt;/em&gt; be carried out.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Plan Items and Item Definitions</title>
      <link>/manual/1.0/reference/cmmn11/concepts/plan-items/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/cmmn11/concepts/plan-items/</guid>
      <description>&lt;p&gt;CMMN differentiates between &lt;em&gt;plan items&lt;/em&gt; and &lt;em&gt;plan item definitions&lt;/em&gt;. While plan items represent actual units of work that are enacted as part of the case, plan item definitions serve as the blueprint for how a plan item has to be enacted. This concept simplifies reuse of plan item definitions and furthermore enables dynamic planning so that additional items can be generated from a definition at runtime.&lt;/p&gt;&#xA;&lt;p&gt;As an example, consider the following fragment of a case definition:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Process Engine Bootstrapping</title>
      <link>/manual/1.0/user-guide/process-engine/process-engine-bootstrapping/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/process-engine/process-engine-bootstrapping/</guid>
      <description>&lt;p&gt;You have a number of options to configure and create a process engine depending on whether you use an application managed or a shared, container managed process engine.&lt;/p&gt;&#xA;&lt;h1 id=&#34;application-managed-process-engine&#34;&gt;Application Managed Process Engine&lt;/h1&gt;&#xA;&lt;p&gt;You manage the process engine as part of your application. The following ways exist to configure it:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#bootstrap-a-process-engine-using-the-java-api&#34;&gt;Programmatically via Java API&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#configure-process-engine-using-camunda-cfg-xml&#34;&gt;Via XML configuration&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/spring-framework-integration/&#34;&gt;Via Spring&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;shared-container-managed-process-engine&#34;&gt;Shared, Container Managed Process Engine&lt;/h1&gt;&#xA;&lt;p&gt;A container of your choice (e.g., Tomcat, Wildfly or IBM WebSphere) manages the process engine for you. The configuration is carried out in a container specific way, see &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/runtime-container-integration/&#34;&gt;Runtime Container Integration&lt;/a&gt; for details.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Process Engine Configuration</title>
      <link>/manual/1.0/user-guide/spring-framework-integration/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/spring-framework-integration/configuration/</guid>
      <description>&lt;p&gt;You can use a Spring application context XML file to bootstrap the process engine. It is possible to bootstrap both application-managed and container-managed process engines through Spring.&lt;/p&gt;&#xA;&lt;p&gt;Note that you can also use a &lt;a href=&#34;#using-spring-javaconfig&#34;&gt;Spring JavaConfig&lt;/a&gt; for bootstrapping instead of XML.&lt;/p&gt;&#xA;&lt;h1 id=&#34;configure-an-application-managed-process-engine&#34;&gt;Configure an Application-Managed Process Engine&lt;/h1&gt;&#xA;&lt;p&gt;The ProcessEngine can be configured as a regular Spring bean. The starting point of the integration is the class &lt;code&gt;org.camunda.bpm.engine.spring.ProcessEngineFactoryBean&lt;/code&gt;. That bean takes a process engine configuration and creates the process engine. This means that the creation and configuration of properties for Spring is the same as documented in the configuration section. For Spring integration the configuration and engine beans will look like this:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Quarkus Version Compatibility</title>
      <link>/manual/1.0/user-guide/quarkus-integration/version-compatibility/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/quarkus-integration/version-compatibility/</guid>
      <description>&lt;p&gt;Each version of the CIB seven engine Quarkus Extension is bound to a specific version of CIB seven and Quarkus.&#xA;Only these default combinations are recommended (and supported) by CIB seven.&lt;/p&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;CIB seven version&lt;/th&gt;&#xA;    &lt;th&gt;Quarkus version&lt;/th&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;7.22.x-cibseven&lt;/td&gt;&#xA;    &lt;td&gt;3.15.x&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;In case a certain Quarkus version has a bug, you can override the existing Quarkus version by adding the following&#xA;inside your &lt;code&gt;pom.xml&lt;/code&gt;. Note that this new CIB seven/Quarkus version combination should also be supported by CIB seven.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Read a Model</title>
      <link>/manual/1.0/user-guide/model-api/bpmn-model-api/read-a-model/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/model-api/bpmn-model-api/read-a-model/</guid>
      <description>&lt;p&gt;If you already created a BPMN model and want to process it through the BPMN model API, you can import it with the&#xA;following methods.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// read a model from a file&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;File&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;File&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;PATH/TO/MODEL.bpmn&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BpmnModelInstance&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;modelInstance&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Bpmn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;readModelFromFile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// read a model from a stream&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;InputStream&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stream&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BpmnModelInstance&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;modelInstance&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Bpmn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;readModelFromStream&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stream&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;After you imported your model you can search for elements by their id or by the type of element.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Read a Model</title>
      <link>/manual/1.0/user-guide/model-api/cmmn-model-api/read-a-model/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/model-api/cmmn-model-api/read-a-model/</guid>
      <description>&lt;p&gt;If you already created a CMMN model and want to process it through the CMMN model API, you can import it with the&#xA;following methods.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// read a model from a file&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;File&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;File&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;PATH/TO/MODEL.cmmn&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;CmmnModelInstance&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;modelInstance&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Cmmn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;readModelFromFile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// read a model from a stream&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;InputStream&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stream&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;CmmnModelInstance&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;modelInstance&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Cmmn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;readModelFromStream&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stream&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;After you imported your model you can search for elements by their id or by the type of element.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Read a Model</title>
      <link>/manual/1.0/user-guide/model-api/dmn-model-api/read-a-model/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/model-api/dmn-model-api/read-a-model/</guid>
      <description>&lt;p&gt;If you already created a DMN model and want to process it through the DMN model API, you can import it with the&#xA;following methods:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// read a model from a file&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;File&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;File&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;PATH/TO/MODEL.dmn&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DmnModelInstance&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;modelInstance&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Dmn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;readModelFromFile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// read a model from a stream&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;InputStream&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stream&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DmnModelInstance&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;modelInstance&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Dmn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;readModelFromStream&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stream&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;After you imported your model, you can search for elements by their id or by the type of element.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Reading JSON</title>
      <link>/manual/1.0/reference/spin/json/01-reading-json/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/spin/json/01-reading-json/</guid>
      <description>&lt;p&gt;The JSON datatype supports reading JSON from Strings or Readers.&lt;/p&gt;&#xA;&lt;h1 id=&#34;reading-json-from-a-string&#34;&gt;Reading JSON from a String:&lt;/h1&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import static&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;org.camunda.spin.Spin.*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kn&#34;&gt;import static&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;org.camunda.spin.DataFormats.*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SpinJsonNode&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;json&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;S&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;{\&amp;#34;customer\&amp;#34;: \&amp;#34;Kermit\&amp;#34;}&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;json&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The second paramter &lt;code&gt;json()&lt;/code&gt; hints Spin to use the JSON data format for parsing the JSON.&lt;/p&gt;&#xA;&lt;p&gt;Alternatively, you can directly use the &lt;code&gt;JSON(...)&lt;/code&gt; function:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import static&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;org.camunda.spin.Spin.*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SpinJsonNode&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;json&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;JSON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;{\&amp;#34;customer\&amp;#34;: \&amp;#34;Kermit\&amp;#34;}&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;String values that represent JSON primitive values can also be read. For example, &lt;code&gt;JSON(&amp;quot;true&amp;quot;)&lt;/code&gt; returns a &lt;code&gt;SpinJsonNode&lt;/code&gt; that represents the boolean value &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Reading XML</title>
      <link>/manual/1.0/reference/spin/xml/01-reading-xml/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/spin/xml/01-reading-xml/</guid>
      <description>&lt;p&gt;The XML dataformat supports reading XML from Strings or input streams.&lt;/p&gt;&#xA;&lt;h1 id=&#34;reading-xml-from-a-string&#34;&gt;Reading XML from a String:&lt;/h1&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import static&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;org.camunda.spin.Spin.*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kn&#34;&gt;import static&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;org.camunda.spin.DataFormats.*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SpinXmlElement&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xml&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;S&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;lt;order /&amp;gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xml&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The second paramter &lt;code&gt;xml()&lt;/code&gt; hints Spin to use the XML data format for parsing the XML.&lt;/p&gt;&#xA;&lt;p&gt;Alternatively, you can directly use the &lt;code&gt;XML(...)&lt;/code&gt; function:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import static&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;org.camunda.spin.Spin.*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SpinXmlElement&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xml&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;XML&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;lt;order /&amp;gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;reading-xml-from-a-reader&#34;&gt;Reading XML from a Reader:&lt;/h1&gt;&#xA;&lt;p&gt;Spin also supports reading XML directly from a &lt;code&gt;java.io.Reader&lt;/code&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Service Task</title>
      <link>/manual/1.0/reference/bpmn20/tasks/service-task/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/bpmn20/tasks/service-task/</guid>
      <description>&lt;p&gt;A Service Task is used to invoke services. In Camunda this is done by calling Java code or providing a work item for an external worker to complete asynchronously or invoking a logic which is implemented in form of webservices.&lt;/p&gt;&#xA;&lt;div class=&#34;bpmn-symbol&#34;&gt;&lt;img src=&#34;/manual/1.0/manual/1.0//img/short-codes/bpmn-service-task.png&#34; /&gt;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;calling-java-code&#34;&gt;Calling Java Code&lt;/h1&gt;&#xA;&lt;p&gt;There are four ways of declaring how to invoke Java logic:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Specifying a class that implements a JavaDelegate or ActivityBehavior&lt;/li&gt;&#xA;&lt;li&gt;Evaluating an expression that resolves to a delegation object&lt;/li&gt;&#xA;&lt;li&gt;Invoking a method expression&lt;/li&gt;&#xA;&lt;li&gt;Evaluating a value expression&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;To specify a class that is called during process execution, the fully qualified classname needs to be provided by the &lt;code&gt;camunda:class&lt;/code&gt; attribute.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Spring Boot Version Compatibility</title>
      <link>/manual/1.0/user-guide/spring-boot-integration/version-compatibility/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/spring-boot-integration/version-compatibility/</guid>
      <description>&lt;p&gt;Each version of the Camunda Spring Boot Starter is bound to a specific version of CIB seven and Spring Boot.&#xA;Only these default combinations are recommended (and supported) by CIB.&#xA;Other combinations must be thoroughly tested before being used in production.&lt;/p&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Spring Boot Starter version&lt;/th&gt;&#xA;    &lt;th&gt;CIB seven version&lt;/th&gt;&#xA;    &lt;th&gt;Spring Boot version&lt;/th&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;7.22.0-cibseven&lt;/td&gt;&#xA;    &lt;td&gt;1.0&lt;/td&gt;&#xA;    &lt;td&gt;3.3.x&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;* For these versions, use the following Maven coordinates:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;dependency&amp;gt;&#xA;  &amp;lt;groupId&amp;gt;org.camunda.bpm.springboot&amp;lt;/groupId&amp;gt;&#xA;  &amp;lt;artifactId&amp;gt;camunda-bpm-spring-boot-starter-webapp&amp;lt;/artifactId&amp;gt;&#xA;  &amp;lt;version&amp;gt;7.22.0-cibseven&amp;lt;/version&amp;gt; &amp;lt;!-- set correct version here --&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Do not forget, that extra repository should be added to &lt;code&gt;settings.xml&lt;/code&gt; or to the POM file, since CIB seven is available yet only at &lt;a href=&#34;https://artifacts.cibseven.de/&#34;&gt;artifacts.cibseven.de&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Stage</title>
      <link>/manual/1.0/reference/cmmn11/grouping-tasks/stage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/cmmn11/grouping-tasks/stage/</guid>
      <description>&lt;p&gt;A &lt;em&gt;stage&lt;/em&gt; can contain other plan items like a human task, a process task, a case task or another stage. Stages may be considered &amp;rsquo;episodes&amp;rsquo; of a case. However, stages are not necessarily planned sequentially but can also be active in parallel.&lt;/p&gt;&#xA;&lt;p&gt;If a stage is collapsed, only its name and a plus sign are displayed:&lt;/p&gt;&#xA;&lt;div class=&#34;cmmn-symbol&#34;&gt;&lt;img src=&#34;/manual/1.0/manual/1.0//img/short-codes/cmmn-stage-collapsed.png&#34; /&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;If a stage is expanded, its plan items are displayed within its boundaries:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Start Events</title>
      <link>/manual/1.0/reference/bpmn20/events/start-events/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/bpmn20/events/start-events/</guid>
      <description>&lt;p&gt;Start events define where a Process or Sub Process starts.&lt;/p&gt;&#xA;&lt;p&gt;The process engine supports different types of start events:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/none-events/&#34;&gt;Blank&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/timer-events/&#34;&gt;Timer&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/message-events/&#34;&gt;Message&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/signal-events/&#34;&gt;Signal&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/conditional-events/&#34;&gt;Conditional&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;The engine requires at least one start event to instantiate a process. There can be a maximum of one blank or timer start event per process definition. There can be multiple message or signal start events.&lt;/p&gt;&#xA;&lt;h1 id=&#34;asynchronous-instantiation&#34;&gt;Asynchronous Instantiation&lt;/h1&gt;&#xA;&lt;p&gt;A start event may be declared as asynchronous with &lt;code&gt;camunda:asyncBefore=&amp;quot;true&amp;quot;&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Text Inputs</title>
      <link>/manual/1.0/reference/forms/embedded-forms/controls/inputs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/forms/embedded-forms/controls/inputs/</guid>
      <description>&lt;p&gt;Single line text inputs are &lt;code&gt;&amp;lt;input type=&amp;quot;text&amp;quot;&amp;gt;&lt;/code&gt; controls. Single line text inputs are the most&#xA;common input field and allow the user to provide values for different data types.&lt;/p&gt;&#xA;&lt;h1 id=&#34;binding-text-input-to-a-process-variable&#34;&gt;Binding Text Input to a Process Variable&lt;/h1&gt;&#xA;&lt;p&gt;A text input can be bound to a process variable using the &lt;code&gt;cam-variable-type&lt;/code&gt; and&#xA;&lt;code&gt;cam-variable-name&lt;/code&gt; directives:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;text&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       &lt;span class=&#34;na&#34;&gt;cam-variable-name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;CUSTOMER_ID&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       &lt;span class=&#34;na&#34;&gt;cam-variable-type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;String&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In the example above, the text input field is bound to the variable named &lt;code&gt;CUSTOMER_ID&lt;/code&gt; of type&#xA;&lt;code&gt;String&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The cam-script Directive</title>
      <link>/manual/1.0/reference/forms/embedded-forms/javascript/cam-script/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/forms/embedded-forms/javascript/cam-script/</guid>
      <description>&lt;p&gt;It is possible to use custom JavaScript in embedded forms.&lt;/p&gt;&#xA;&lt;p&gt;Custom JavaScript can be added to a form by using a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag and adding the &lt;code&gt;cam-script&lt;/code&gt;&#xA;directive:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;form&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;role&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;form&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;cam-script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;text/form-script&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// custom script goes here&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;form&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>The Process Application class</title>
      <link>/manual/1.0/user-guide/process-applications/the-process-application-class/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/process-applications/the-process-application-class/</guid>
      <description>&lt;p&gt;You can delegate the bootstrapping of the process engine and process deployment to a process application class. The basic ProcessApplication functionality is provided by the &lt;code&gt;org.camunda.bpm.application.AbstractProcessApplication&lt;/code&gt; base class. Based on this class there is a set of environment-specific sub classes that realize integration within a specific environment:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;ServletProcessApplication&lt;/strong&gt;: To be used for process applications in a Servlet container like Apache Tomcat.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;JakartaServletProcessApplication&lt;/strong&gt;: To be used for process applications in a Jakarta Servlet 5.0+ container like WildFly 27 and above.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;EjbProcessApplication&lt;/strong&gt;: To be used in a Java EE application server like IBM WebSphere Application Server.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;JakartaEjbProcessApplication&lt;/strong&gt;: To be used in a Jakarta EE 9+ application server like Wildfly 27+.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;EmbeddedProcessApplication&lt;/strong&gt;: To be used when embedding the process engine in an ordinary Java SE application.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;SpringProcessApplication&lt;/strong&gt;: To be used for bootstrapping the process application from a Spring Application Context.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;In the following section, we walk through the different implementations and discuss where and how they can be used.&lt;/p&gt;</description>
    </item>
    <item>
      <title>User Management</title>
      <link>/manual/1.0/webapps/admin/user-management/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/webapps/admin/user-management/</guid>
      <description>&lt;h1 id=&#34;users-menu&#34;&gt;Users Menu&lt;/h1&gt;&#xA;&lt;figure class=&#34;image&#34;&gt;&#xA;  &lt;span&gt;&lt;img&#xA;      src=&#34;../img/admin-users.png&#34;&#xA;      &#xA;          title=&#34;User Menu&#34;&#xA;       /&gt;&lt;/span&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;The Users menu allows you to add, edit and delete user profiles. Furthermore, you can manage group membership and change passwords.&lt;/p&gt;&#xA;&lt;h1 id=&#34;my-profile&#34;&gt;My Profile&lt;/h1&gt;&#xA;&lt;p&gt;By clicking on your user name in the Users menu, you can access the My Profile menu. In the My Profile menu you can edit your personal account settings, such as:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Profile: Change your name or email address. You cannot change the user account ID!&lt;/li&gt;&#xA;&lt;li&gt;Account: Change your password or delete/unlock your account. Be careful, deletion cannot be undone.&lt;/li&gt;&#xA;&lt;li&gt;Groups: This menu lists all groups of which you are member. With administrator rights you can assign your account to the available groups.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;You can also access the My Profile menu from any of the web applications by clicking on your user name at the top right and selecting &lt;em&gt;My Profile&lt;/em&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Working with Tasklist</title>
      <link>/manual/1.0/webapps/tasklist/working-with-tasklist/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/webapps/tasklist/working-with-tasklist/</guid>
      <description>&lt;p&gt;In the following example we will walk through a typical human workflow scenario. In our prepackaged distribution, Tasklist has four demo users which belong to different user groups. Sign in with the user &lt;em&gt;demo&lt;/em&gt;.&lt;/p&gt;&#xA;&lt;h1 id=&#34;start-a-process&#34;&gt;Start a Process&lt;/h1&gt;&#xA;&lt;p&gt;To start a process instance via Tasklist, click on &lt;em&gt;Start process&lt;/em&gt; in the header menu of the &lt;a href=&#34;/manual/1.0/manual/1.0/webapps/tasklist/dashboard/&#34;&gt;dashboard&lt;/a&gt; and select a process out of the displayed list of process definitions. If no process definitions are listed here, please verify that your process application is deployed correctly and you have the required permissions* to start a process. For our example, start the &lt;em&gt;Invoice Receipt&lt;/em&gt; process.&#xA;After selecting the process to start, complete the start form. Hit &lt;code&gt;Start&lt;/code&gt; to continue to the next step in our example.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Javadoc</title>
      <link>/manual/1.0/reference/javadoc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/javadoc/</guid>
      <description>&lt;p&gt;On production, this should redirect to the following page:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.cibseven.de/javadoc/cibseven/1.0/&#34;&gt;https://docs.cibseven.de/javadoc/cibseven/1.0/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Or to this page in case you are viewing the docs of the &lt;code&gt;master&lt;/code&gt; or &lt;code&gt;latest&lt;/code&gt; branch:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.cibseven.de/javadoc/cibseven/%7B1.0-SNAPSHOT/&#34;&gt;https://docs.cibseven.de/javadoc/cibseven/{1.0-SNAPSHOT/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Licenses</title>
      <link>/manual/1.0/introduction/licenses/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/introduction/licenses/</guid>
      <description>&lt;h1 id=&#34;cib-seven&#34;&gt;CIB seven&lt;/h1&gt;&#xA;&lt;p&gt;CIB seven is a Java-based framework.&lt;/p&gt;&#xA;&lt;h2 id=&#34;community-edition&#34;&gt;Community Edition&lt;/h2&gt;&#xA;&lt;p&gt;If you are using the community edition, the entire software is provided under various open source licenses (mainly Apache 2.0 and MIT). Which components are published under an open source license is clearly stated in the licensing header of a source file or a LICENSE file present in the root directory of the software source code repository.&lt;/p&gt;&#xA;&lt;h2 id=&#34;third-party-libraries&#34;&gt;Third-Party Libraries&lt;/h2&gt;&#xA;&lt;p&gt;CIB seven includes libraries developed by third parties. See the following resources:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Available API</title>
      <link>/manual/1.0/reference/forms/embedded-forms/javascript/api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/forms/embedded-forms/javascript/api/</guid>
      <description>&lt;p&gt;Inside a form script, the following built-in variables and functions are available:&lt;/p&gt;&#xA;&lt;h1 id=&#34;camform&#34;&gt;camForm&lt;/h1&gt;&#xA;&lt;p&gt;The &lt;code&gt;camForm&lt;/code&gt; variable is an instance of the &lt;code&gt;CamSDK.Form&lt;/code&gt; class. It is the primary access point to&#xA;the form API and allows definition of event handers for participation in the form &lt;a href=&#34;/manual/1.0/manual/1.0/reference/forms/embedded-forms/lifecycle/&#34;&gt;lifecycle&lt;/a&gt;:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;form&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;role&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;form&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  ...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;cam-script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;text/form-script&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;variableManager&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;camForm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;variableManager&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;camForm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;variables-fetched&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;c1&#34;&gt;// access to all process variables after the form has loaded&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;variableManager&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;variables&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;form&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;scope&#34;&gt;$scope&lt;/h1&gt;&#xA;&#xA;&lt;div class=&#34;note bg-info docs-info&#34;&gt;&#xA;  &lt;h3&gt;&lt;/h3&gt;&#xA;  &lt;p&gt;Only available with AngularJS integration.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Bootstrapping</title>
      <link>/manual/1.0/reference/forms/embedded-forms/integrate/bootstrapping/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/forms/embedded-forms/integrate/bootstrapping/</guid>
      <description>&lt;h1 id=&#34;creating-a-client&#34;&gt;Creating a Client&lt;/h1&gt;&#xA;&lt;p&gt;The Forms SDK uses an instance of the &lt;code&gt;CamSDK.Client&lt;/code&gt; to communicate with the process engine (over the REST API):&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;camClient&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CamSDK&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Client&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;mock&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;apiUri&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;http://localhost:8080/engine-rest&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;creating-a-form&#34;&gt;Creating a Form&lt;/h1&gt;&#xA;&lt;p&gt;In order to create a form, you need to create an instance of &lt;code&gt;CamSDK.Form&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CamSDK&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Form&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// ...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;providing-a-task-id&#34;&gt;Providing a Task Id&lt;/h2&gt;&#xA;&lt;p&gt;In case the form is a task form (i.e., the submission of the form should trigger the completing of a task), you need to provide a &lt;code&gt;taskId&lt;/code&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Call Activity</title>
      <link>/manual/1.0/reference/bpmn20/subprocesses/call-activity/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/bpmn20/subprocesses/call-activity/</guid>
      <description>&lt;p&gt;BPMN 2.0 makes a distinction between an embedded subprocess and a call activity. From a conceptual point of view, both will call a subprocess when process execution arrives at the activity.&lt;/p&gt;&#xA;&lt;p&gt;The difference is that the call activity references a process that is external to the process definition, whereas the subprocess is embedded within the original process definition. The main use case for the call activity is to have a reusable process definition that can be called from multiple other process definitions. Although not yet part of the BPMN specification, it is also possible to call a CMMN case definition.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Camunda BPMN Extension Attributes</title>
      <link>/manual/1.0/reference/bpmn20/custom-extensions/extension-attributes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/bpmn20/custom-extensions/extension-attributes/</guid>
      <description>&lt;p&gt;The following attributes are extension attributes for the &lt;code&gt;camunda&lt;/code&gt; namespace &lt;code&gt;http://camunda.org/schema/1.0/bpmn&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;h1 id=&#34;assignee&#34;&gt;assignee&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The attribute specifies a human performer of a &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/user-task/&#34;&gt;User Task&lt;/a&gt;.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.String&lt;/code&gt; or &lt;code&gt;org.camunda.bpm.engine.delegate.Expression&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The name of a performer as &lt;code&gt;java.lang.String&lt;/code&gt; or an expression which evaluates to a &lt;code&gt;java.lang.String&lt;/code&gt; e.g., &lt;code&gt;${initiator}&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;BPMN 2.0 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/user-task/&#34;&gt;User Task&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;asyncafter&#34;&gt;asyncAfter&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      Specifies an asynchronous continuation after an activity, see &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/transactions-in-processes/#asynchronous-continuations&#34;&gt;Asynchronous Continuations&lt;/a&gt; for more information.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.Boolean&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;BPMN 2.0 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/start-events/&#34;&gt;Start Events&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/&#34;&gt;End Events&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/&#34;&gt;Intermediate Throw Events&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/&#34;&gt;Intermediate Catch Events&lt;/a&gt;,&#xA;      Task,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/service-task/&#34;&gt;Service Task&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/send-task/&#34;&gt;Send Task&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/user-task/&#34;&gt;User Task&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/business-rule-task/&#34;&gt;Business Rule Task&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/script-task/&#34;&gt;Script Task&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/receive-task/&#34;&gt;Receive Task&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/manual-task/&#34;&gt;Manual Task&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/subprocesses/embedded-subprocess/&#34;&gt;Embedded Subprocess&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/subprocesses/call-activity/&#34;&gt;Call Activity&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/subprocesses/transaction-subprocess/&#34;&gt;Transaction Subprocess&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/gateways/parallel-gateway/&#34;&gt;Parallel Gateway&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/gateways/inclusive-gateway/&#34;&gt;Inclusive Gateway&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/gateways/exclusive-gateway/&#34;&gt;Exclusive Gateway&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/task-markers/#multiple-instance&#34;&gt;Multi Instance Loop Characteristics&lt;/a&gt;,&#xA;      Boundary Event,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/message-events/#message-boundary-event&#34;&gt;Message Boundary Event&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/error-events/#error-boundary-event&#34;&gt;Error Boundary Event&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/timer-events/#timer-boundary-event&#34;&gt;Timer Boundary Event&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/escalation-events/#escalation-boundary-event&#34;&gt;Escalation Boundary Event&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/conditional-events/#conditional-boundary-event&#34;&gt;Conditional Boundary Event&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/signal-events/#signal-boundary-event&#34;&gt;Signal Boundary Event&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/cancel-and-compensation-events/#cancel-boundary-event&#34;&gt;Cancel Boundary Event&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;asyncbefore&#34;&gt;asyncBefore&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      Specifies an asynchronous continuation before an activity, see &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/transactions-in-processes/#asynchronous-continuations&#34;&gt;Asynchronous Continuations&lt;/a&gt; for more information.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.Boolean&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;BPMN 2.0 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/start-events/&#34;&gt;Start Events&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/&#34;&gt;End Events&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/&#34;&gt;Intermediate Throw Events&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/&#34;&gt;Intermediate Catch Events&lt;/a&gt;,&#xA;      Task,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/service-task/&#34;&gt;Service Task&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/send-task/&#34;&gt;Send Task&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/user-task/&#34;&gt;User Task&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/business-rule-task/&#34;&gt;Business Rule Task&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/script-task/&#34;&gt;Script Task&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/receive-task/&#34;&gt;Receive Task&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/manual-task/&#34;&gt;Manual Task&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/subprocesses/embedded-subprocess/&#34;&gt;Embedded Subprocess&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/subprocesses/call-activity/&#34;&gt;Call Activity&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/subprocesses/transaction-subprocess/&#34;&gt;Transaction Subprocess&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/gateways/parallel-gateway/&#34;&gt;Parallel Gateway&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/gateways/event-based-gateway/&#34;&gt;Event Based Gateway&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/gateways/inclusive-gateway/&#34;&gt;Inclusive Gateway&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/gateways/exclusive-gateway/&#34;&gt;Exclusive Gateway&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/task-markers/#multiple-instance&#34;&gt;Multi Instance Loop Characteristics&lt;/a&gt;,&#xA;      Boundary Event,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/message-events/#message-boundary-event&#34;&gt;Message Boundary Event&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/error-events/#error-boundary-event&#34;&gt;Error Boundary Event&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/timer-events/#timer-boundary-event&#34;&gt;Timer Boundary Event&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/escalation-events/#escalation-boundary-event&#34;&gt;Escalation Boundary Event&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/conditional-events/#conditional-boundary-event&#34;&gt;Conditional Boundary Event&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/signal-events/#signal-boundary-event&#34;&gt;Signal Boundary Event&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/cancel-and-compensation-events/#cancel-boundary-event&#34;&gt;Cancel Boundary Event&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;calledelementbinding&#34;&gt;calledElementBinding&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The attribute specifies which process definition version of the subprocess the call activity calls.&#xA;      If the value is &lt;code&gt;version&lt;/code&gt;, the attribute &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-attributes/#calledelementversion&#34;&gt;camunda:calledElementVersion&lt;/a&gt; is required.&#xA;      If the value is &lt;code&gt;versionTag&lt;/code&gt;, the attribute &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-attributes/#calledelementversiontag&#34;&gt;camunda:calledElementVersionTag&lt;/a&gt; is required.&#xA;      See &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/subprocesses/call-activity/#calledelement-binding&#34;&gt;Called Element Binding&lt;/a&gt; for more information.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.String&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;code&gt;latest&lt;/code&gt;, &lt;code&gt;deployment&lt;/code&gt;, &lt;code&gt;version&lt;/code&gt;, &lt;code&gt;versionTag&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;latest&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;BPMN 2.0 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/subprocesses/call-activity/&#34;&gt;Call Activity&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;calledelementversion&#34;&gt;calledElementVersion&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The attribute specifies which process definition version of the subprocess the call activity calls if the &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-attributes/#calledelementbinding&#34;&gt;camunda:calledElementBinding&lt;/a&gt;&#xA;      is set to &lt;code&gt;version&lt;/code&gt;, see &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/subprocesses/call-activity/#calledelement-binding&#34;&gt;Called Element Binding&lt;/a&gt; for more information.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.Integer&lt;/code&gt; or &lt;code&gt;org.camunda.bpm.engine.delegate.Expression&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      A concrete version of all deployed version numbers of the subprocess to call as &lt;code&gt;java.lang.Integer&lt;/code&gt; or an expression which evaluates to a &lt;code&gt;java.lang.Integer&lt;/code&gt; e.g., &lt;code&gt;${versionToCall}&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;BPMN 2.0 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/subprocesses/call-activity/&#34;&gt;Call Activity&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;calledelementversiontag&#34;&gt;calledElementVersionTag&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The attribute specifies which process definition version tag of the subprocess the call activity calls if the &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-attributes/#calledelementbinding&#34;&gt;camunda:calledElementBinding&lt;/a&gt;&#xA;      is set to &lt;code&gt;versionTag&lt;/code&gt;, see &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/subprocesses/call-activity/#calledelement-binding&#34;&gt;Called Element Binding&lt;/a&gt; for more information.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.String&lt;/code&gt; or &lt;code&gt;org.camunda.bpm.engine.delegate.Expression&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      A concrete version tag of all deployed version numbers of the subprocess to call as &lt;code&gt;java.lang.String&lt;/code&gt; or an expression which evaluates to a &lt;code&gt;java.lang.String&lt;/code&gt; e.g., &lt;code&gt;${versionTagToCall}&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;BPMN 2.0 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/subprocesses/call-activity/&#34;&gt;Call Activity&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;calledelementtenantid&#34;&gt;calledElementTenantId&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The attribute specifies the tenant id of the process definition which is to be resolved by a call activity, see &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/subprocesses/call-activity/#calledelement-tenant-id&#34;&gt;Called Element Tenant Id&lt;/a&gt; for more information.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.String&lt;/code&gt; or &lt;code&gt;org.camunda.bpm.engine.delegate.Expression&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      A concrete tenant id or an expression which evaluates to a &lt;code&gt;java.lang.String&lt;/code&gt; e.g., &lt;code&gt;${execution.tenantId}&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;BPMN 2.0 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/subprocesses/call-activity/&#34;&gt;Call Activity&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;candidategroups&#34;&gt;candidateGroups&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The attribute specifies which group(s) will be candidate for performing the &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/user-task/&#34;&gt;User Task&lt;/a&gt;.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.String&lt;/code&gt; or &lt;code&gt;org.camunda.bpm.engine.delegate.Expression&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      Comma separated list of group ids as &lt;code&gt;java.lang.String&lt;/code&gt; or expressions that evaluate to a &lt;code&gt;java.lang.String&lt;/code&gt; or a &lt;code&gt;java.util.Collection&lt;/code&gt; of &lt;code&gt;java.lang.String&lt;/code&gt;, e.g., &lt;code&gt;management&lt;/code&gt; or &lt;code&gt;management, ${accountancyGroupId()}&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;BPMN 2.0 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/user-task/&#34;&gt;User Task&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;candidatestartergroups&#34;&gt;candidateStarterGroups&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The attribute specifies which group(s) will be able to start the process.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.String&lt;/code&gt; or &lt;code&gt;org.camunda.bpm.engine.delegate.Expression&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      Comma separated list of group ids as &lt;code&gt;java.lang.String&lt;/code&gt; or expressions that evaluate to a &lt;code&gt;java.lang.String&lt;/code&gt; or a &lt;code&gt;java.util.Collection&lt;/code&gt; of &lt;code&gt;java.lang.String&lt;/code&gt;, e.g., &lt;code&gt;management&lt;/code&gt; or &lt;code&gt;management, ${accountancyGroupId()}&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;BPMN 2.0 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      Process&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;candidatestarterusers&#34;&gt;candidateStarterUsers&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The attribute specifies which user(s) will be able to start the process.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.String&lt;/code&gt; or &lt;code&gt;org.camunda.bpm.engine.delegate.Expression&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      Comma separated list of user ids as &lt;code&gt;java.lang.String&lt;/code&gt; or expressions that evaluate to a &lt;code&gt;java.lang.String&lt;/code&gt; or a &lt;code&gt;java.util.Collection&lt;/code&gt; of &lt;code&gt;java.lang.String&lt;/code&gt;, e.g., &lt;code&gt;kermit, gonzo&lt;/code&gt; or &lt;code&gt;${ldapService.findAllSales()}&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;BPMN 2.0 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      Process&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;candidateusers&#34;&gt;candidateUsers&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The attribute specifies which user(s) will be candidate for performing the &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/user-task/&#34;&gt;User Task&lt;/a&gt;.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.String&lt;/code&gt; or &lt;code&gt;org.camunda.bpm.engine.delegate.Expression&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      Comma separated list of user ids as &lt;code&gt;java.lang.String&lt;/code&gt; or expressions that evaluate to a &lt;code&gt;java.lang.String&lt;/code&gt; or a &lt;code&gt;java.util.Collection&lt;/code&gt; of &lt;code&gt;java.lang.String&lt;/code&gt;, e.g., &lt;code&gt;kermit, gonzo&lt;/code&gt; or &lt;code&gt;${ldapService.findAllSales()}&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;BPMN 2.0 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/user-task/&#34;&gt;User Task&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;casebinding&#34;&gt;caseBinding&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The attribute specifies which case definition version of the subcase the call activity calls.&#xA;      If the value is &lt;code&gt;version&lt;/code&gt;, the attribute &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-attributes/#caseversion&#34;&gt;camunda:caseVersion&lt;/a&gt;&#xA;      is required, see &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/subprocesses/call-activity/#create-a-case-instance&#34;&gt;Case Binding&lt;/a&gt; for more information.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.String&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;code&gt;latest&lt;/code&gt;, &lt;code&gt;deployment&lt;/code&gt;, &lt;code&gt;version&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;BPMN 2.0 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/subprocesses/call-activity/#create-a-case-instance&#34;&gt;Call Activity&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;caseref&#34;&gt;caseRef&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The attribute references a case definition by its key to call.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.String&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;BPMN 2.0 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/subprocesses/call-activity/#create-a-case-instance&#34;&gt;Call Activity&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;caseversion&#34;&gt;caseVersion&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The attribute specifies which case definition version of the subcase the call activity calls if the &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-attributes/#casebinding&#34;&gt;camunda:caseBinding&lt;/a&gt; is set to &lt;code&gt;version&lt;/code&gt;, see &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/subprocesses/call-activity/#create-a-case-instance&#34;&gt;Case Binding&lt;/a&gt; for more information.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.Integer&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      All deployed version numbers of the subprocess to call&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;BPMN 2.0 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/subprocesses/call-activity/#create-a-case-instance&#34;&gt;Call Activity&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;casetenantid&#34;&gt;caseTenantId&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The attribute specifies the tenant id of the case definition which is to be resolved by a call activity, see &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/subprocesses/call-activity/#case-tenant-id&#34;&gt;Case  Tenant Id&lt;/a&gt; for more information.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.String&lt;/code&gt; or &lt;code&gt;org.camunda.bpm.engine.delegate.Expression&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      A concrete tenant id or an expression which evaluates to a &lt;code&gt;java.lang.String&lt;/code&gt; e.g., &lt;code&gt;${execution.tenantId}&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;BPMN 2.0 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/subprocesses/call-activity/&#34;&gt;Call Activity&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;class&#34;&gt;class&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The attribute specifies which Java class will be executed at runtime. The stated class must implement a &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/delegation-code/#java-delegate&#34;&gt;Java delegate&lt;/a&gt; interface.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.String&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      Fully qualified Java class name of a class which implements a &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/delegation-code/#java-delegate&#34;&gt;Java Delegate&lt;/a&gt; interface, e.g., &lt;code&gt;org.camunda.bpm.MyJavaDelegate&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;BPMN 2.0 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/service-task/&#34;&gt;Service Task&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/business-rule-task/&#34;&gt;Business Rule Task&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/send-task/&#34;&gt;Send Task&lt;/a&gt;,&#xA;      Message Event Definition of &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/message-events/#message-intermediate-throwing-event&#34;&gt;Message Intermediate Throwing Event&lt;/a&gt; or &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/message-events/#message-end-event&#34;&gt;Message End Event&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#tasklistener&#34;&gt;camunda:taskListener&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#executionlistener&#34;&gt;camunda:executionListner&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;collection&#34;&gt;collection&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The attribute specifies a collection, where an instance will be created for each element, see &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/task-markers/#multiple-instance&#34;&gt;Multiple Instance&lt;/a&gt; for more information.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.String&lt;/code&gt; or &lt;code&gt;org.camunda.bpm.engine.delegate.Expression&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The name of a &lt;code&gt;java.util.Collection&lt;/code&gt; process variable as &lt;code&gt;java.lang.String&lt;/code&gt; or an Expression which evaluates to the name of a collection&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;BPMN 2.0 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/task-markers/#multiple-instance&#34;&gt;Multi Instance Loop Characteristics&lt;/a&gt; of Task,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/subprocesses/embedded-subprocess/&#34;&gt;Embedded Subprocess&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/subprocesses/call-activity/&#34;&gt;Call Activity&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/subprocesses/transaction-subprocess/&#34;&gt;Transaction Subprocess&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;decisionref&#34;&gt;decisionRef&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The attribute references a decision definition to evalute by its key.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.String&lt;/code&gt; or &lt;code&gt;org.camunda.bpm.engine.delegate.Expression&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      A String or an expression which evalutes to the key of a decision definition which should be evaluated by this task, e.g., &lt;code&gt;myDecisionDefinitionKey&lt;/code&gt; or &lt;code&gt;${decisionKey}&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;BPMN 2.0 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/business-rule-task/&#34;&gt;Business Rule Task&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;decisionrefbinding&#34;&gt;decisionRefBinding&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The attribute specifies which decision definition version the task evaluates.&#xA;      If the value is &lt;code&gt;version&lt;/code&gt;, the attribute &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-attributes/#decisionrefversion&#34;&gt;camunda:decisionRefVersion&lt;/a&gt;&#xA;      is required.&#xA;      If the value is &lt;code&gt;versionTag&lt;/code&gt;, the attribute &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-attributes/#decisionrefversiontag&#34;&gt;camunda:decisionRefVersionTag&lt;/a&gt;&#xA;      is required.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.String&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;code&gt;latest&lt;/code&gt;, &lt;code&gt;deployment&lt;/code&gt;, &lt;code&gt;version&lt;/code&gt;, &lt;code&gt;versionTag&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;latest&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;BPMN 2.0 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/business-rule-task/&#34;&gt;Business Rule Task&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;decisionrefversion&#34;&gt;decisionRefVersion&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The attribute specifies which decision definition version the task evaluates if the &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-attributes/#decisionrefbinding&#34;&gt;camunda:decisionRefBinding&lt;/a&gt;&#xA;      is set to &lt;code&gt;version&lt;/code&gt;.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.Integer&lt;/code&gt; or &lt;code&gt;org.camunda.bpm.engine.delegate.Expression&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      A concrete version of all deployed version numbers of the decision to call as &lt;code&gt;java.lang.Integer&lt;/code&gt; or an expression which evaluates to a &lt;code&gt;java.lang.Integer&lt;/code&gt; e.g., &lt;code&gt;${versionToCall}&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;BPMN 2.0 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/business-rule-task/&#34;&gt;Business Rule Task&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;decisionrefversiontag&#34;&gt;decisionRefVersionTag&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The attribute specifies which decision definition version tag the task evaluates if the &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-attributes/#decisionrefbinding&#34;&gt;camunda:decisionRefBinding&lt;/a&gt;&#xA;      is set to &lt;code&gt;versionTag&lt;/code&gt;.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.String&lt;/code&gt; or &lt;code&gt;org.camunda.bpm.engine.delegate.Expression&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      A concrete version tag of all deployed version tags of the decision to call as &lt;code&gt;java.lang.String&lt;/code&gt; or an expression which evaluates to a &lt;code&gt;java.lang.String&lt;/code&gt; e.g., &lt;code&gt;${versionTagToCall}&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;BPMN 2.0 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/business-rule-task/&#34;&gt;Business Rule Task&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;decisionreftenantid&#34;&gt;decisionRefTenantId&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The attribute specifies the tenant id of the decision definition which is to be resolved by a business rule task, see &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/business-rule-task/#decisionref-tenant-id&#34;&gt;DecisionRef Tenant Id&lt;/a&gt; for more information.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.String&lt;/code&gt; or &lt;code&gt;org.camunda.bpm.engine.delegate.Expression&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      A concrete tenant id or an expression which evaluates to a &lt;code&gt;java.lang.String&lt;/code&gt; e.g., &lt;code&gt;${execution.tenantId}&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;BPMN 2.0 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/business-rule-task/&#34;&gt;Business Rule Task&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;delegateexpression&#34;&gt;delegateExpression&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The attribute allows specification of an expression which must resolve to an object that implements the corresponding interface (see &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/delegation-code/&#34;&gt;delegation code&lt;/a&gt;).&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;org.camunda.bpm.engine.delegate.Expression&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      Expression which evaluates to a Java class implementing a &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/delegation-code/&#34;&gt;delegation&lt;/a&gt; interface, e.g., &lt;code&gt;${myJavaDelegate}&lt;/code&gt; or &lt;code&gt;#{myTaskListener}&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;BPMN 2.0 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/service-task/&#34;&gt;Service Task&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/business-rule-task/&#34;&gt;Business Rule Task&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/send-task/&#34;&gt;Send Task&lt;/a&gt;,&#xA;      Message Event Definition of &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/message-events/#message-intermediate-throwing-event&#34;&gt;Message Intermediate Throwing Event&lt;/a&gt; or &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/message-events/#message-end-event&#34;&gt;Message End Event&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#tasklistener&#34;&gt;camunda:taskListener&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#executionlistener&#34;&gt;camunda:executionListner&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;duedate&#34;&gt;dueDate&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The attribute specifies the initial due date of a &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/user-task/&#34;&gt;User Task&lt;/a&gt; when it is created.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;org.camunda.bpm.engine.delegate.Expression&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      An expression which evaluates to a &lt;code&gt;java.util.Date&lt;/code&gt;, &lt;code&gt;java.util.String&lt;/code&gt; (&lt;a href=&#34;http://en.wikipedia.org/wiki/ISO_8601&#34;&gt;ISO 8601&lt;/a&gt; formatted) or &lt;code&gt;null&lt;/code&gt;, e.g., &lt;code&gt;${dateVariable}&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;BPMN 2.0 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/user-task/&#34;&gt;User Task&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;elementvariable&#34;&gt;elementVariable&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The attribute specifies the process variable which will be set on each created instance, containing an element of the specified collection see&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/task-markers/#multiple-instance&#34;&gt;Multiple Instance&lt;/a&gt; for more information.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.String&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The name of a process variable as &lt;code&gt;java.lang.String&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;BPMN 2.0 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/task-markers/#multiple-instance&#34;&gt;Multi Instance Loop Characteristics&lt;/a&gt; of Task,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/subprocesses/embedded-subprocess/&#34;&gt;Embedded Subprocess&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/subprocesses/call-activity/&#34;&gt;Call Activity&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/subprocesses/transaction-subprocess/&#34;&gt;Transaction Subprocess&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;errormessage&#34;&gt;errorMessage&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The attribute specifies a message to give further information about the error. When an error start event or boudary event catches the error the message will be saved as process variable if `errorMessageVariable` is configured. See &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/error-events/&#34;&gt;Error Events&lt;/a&gt; for more information.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.String&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The error message as&lt;code&gt;java.lang.String&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;BPMN 2.0 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/error-events/&#34;&gt;Error&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;errorcodevariable&#34;&gt;errorCodeVariable&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The attribute specifies a process variable that holds the error code and the errorCodevariable will be set if an error has been received by the error start or boundary event, see &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/error-events/&#34;&gt;Error Events&lt;/a&gt; for more information.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.String&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The name of a process variable as &lt;code&gt;java.lang.String&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;BPMN 2.0 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/error-events/&#34;&gt;Error Events&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;errormessagevariable&#34;&gt;errorMessageVariable&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The attribute specifies a process variable that holds the error message and the errorMessageVariable will be set if an error has been received by the error start or boundary event, see &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/error-events/&#34;&gt;Error Events&lt;/a&gt; for more information.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.String&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The name of a process variable as &lt;code&gt;java.lang.String&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;BPMN 2.0 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/error-events/&#34;&gt;Error Events&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;escalationcodevariable&#34;&gt;escalationCodeVariable&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The attribute specifies a process variable which will be set if an escalation has been received by an escalation start or boundary event, see &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/escalation-events/&#34;&gt;Escalation Events&lt;/a&gt; for more information.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.String&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The name of a process variable as &lt;code&gt;java.lang.String&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;BPMN 2.0 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/escalation-events/&#34;&gt;Escalation Events&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;exclusive&#34;&gt;exclusive&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The attribute specifies that jobs should be executed exclusively. See &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/the-job-executor/#exclusive-jobs&#34;&gt;Exclusive Jobs&lt;/a&gt; for more information.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.Boolean&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;BPMN 2.0 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/start-events/&#34;&gt;Start Events&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/&#34;&gt;End Events&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/&#34;&gt;Intermediate Throw Events&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/&#34;&gt;Intermediate Catch Events&lt;/a&gt;,&#xA;&lt;pre&gt;&lt;code&gt;  Task,&#xA;  &amp;lt;a href=&amp;quot;/manual/1.0/reference/bpmn20/tasks/service-task/&amp;quot;&amp;gt;Service Task&amp;lt;/a&amp;gt;,&#xA;  &amp;lt;a href=&amp;quot;/manual/1.0/reference/bpmn20/tasks/send-task/&amp;quot;&amp;gt;Send Task&amp;lt;/a&amp;gt;,&#xA;  &amp;lt;a href=&amp;quot;/manual/1.0/reference/bpmn20/tasks/user-task/&amp;quot;&amp;gt;User Task&amp;lt;/a&amp;gt;,&#xA;  &amp;lt;a href=&amp;quot;/manual/1.0/reference/bpmn20/tasks/business-rule-task/&amp;quot;&amp;gt;Business Rule Task&amp;lt;/a&amp;gt;,&#xA;  &amp;lt;a href=&amp;quot;/manual/1.0/reference/bpmn20/tasks/script-task/&amp;quot;&amp;gt;Script Task&amp;lt;/a&amp;gt;,&#xA;  &amp;lt;a href=&amp;quot;/manual/1.0/reference/bpmn20/tasks/receive-task/&amp;quot;&amp;gt;Receive Task&amp;lt;/a&amp;gt;,&#xA;  &amp;lt;a href=&amp;quot;/manual/1.0/reference/bpmn20/tasks/manual-task/&amp;quot;&amp;gt;Manual Task&amp;lt;/a&amp;gt;,&#xA;&#xA;  &amp;lt;a href=&amp;quot;/manual/1.0/reference/bpmn20/subprocesses/embedded-subprocess/&amp;quot;&amp;gt;Embedded Subprocess&amp;lt;/a&amp;gt;,&#xA;  &amp;lt;a href=&amp;quot;/manual/1.0/reference/bpmn20/subprocesses/call-activity/&amp;quot;&amp;gt;Call Activity&amp;lt;/a&amp;gt;,&#xA;  &amp;lt;a href=&amp;quot;/manual/1.0/reference/bpmn20/subprocesses/transaction-subprocess/&amp;quot;&amp;gt;Transaction Subprocess&amp;lt;/a&amp;gt;,&#xA;&#xA;  &amp;lt;a href=&amp;quot;/manual/1.0/reference/bpmn20/gateways/parallel-gateway/&amp;quot;&amp;gt;Parallel Gateway&amp;lt;/a&amp;gt;,&#xA;  &amp;lt;a href=&amp;quot;/manual/1.0/reference/bpmn20/gateways/event-based-gateway/&amp;quot;&amp;gt;Event Based Gateway&amp;lt;/a&amp;gt;,&#xA;  &amp;lt;a href=&amp;quot;/manual/1.0/reference/bpmn20/gateways/inclusive-gateway/&amp;quot;&amp;gt;Inclusive Gateway&amp;lt;/a&amp;gt;,&#xA;  &amp;lt;a href=&amp;quot;/manual/1.0/reference/bpmn20/gateways/exclusive-gateway/&amp;quot;&amp;gt;Exclusive Gateway&amp;lt;/a&amp;gt;,&#xA;&#xA;  &amp;lt;a href=&amp;quot;/manual/1.0/reference/bpmn20/tasks/task-markers/#multiple-instance&amp;quot;&amp;gt;Multi Instance Loop Characteristics&amp;lt;/a&amp;gt;,&#xA;&#xA;  Boundary Event,&#xA;  &amp;lt;a href=&amp;quot;/manual/1.0/reference/bpmn20/events/message-events/#message-boundary-event&amp;quot;&amp;gt;Message Boundary Event&amp;lt;/a&amp;gt;,&#xA;  &amp;lt;a href=&amp;quot;/manual/1.0/reference/bpmn20/events/error-events/#error-boundary-event&amp;quot;&amp;gt;Error Boundary Event&amp;lt;/a&amp;gt;,&#xA;  &amp;lt;a href=&amp;quot;/manual/1.0/reference/bpmn20/events/timer-events/#timer-boundary-event&amp;quot;&amp;gt;Timer Boundary Event&amp;lt;/a&amp;gt;,&#xA;  &amp;lt;a href=&amp;quot;/manual/1.0/reference/bpmn20/events/escalation-events/#escalation-boundary-event&amp;quot;&amp;gt;Escalation Boundary Event&amp;lt;/a&amp;gt;,&#xA;  &amp;lt;a href=&amp;quot;/manual/1.0/reference/bpmn20/events/conditional-events/#conditional-boundary-event&amp;quot;&amp;gt;Conditional Boundary Event&amp;lt;/a&amp;gt;,&#xA;  &amp;lt;a href=&amp;quot;/manual/1.0/reference/bpmn20/events/signal-events/#signal-boundary-event&amp;quot;&amp;gt;Signal Boundary Event&amp;lt;/a&amp;gt;,&#xA;  &amp;lt;a href=&amp;quot;/manual/1.0/reference/bpmn20/events/cancel-and-compensation-events/#cancel-boundary-event&amp;quot;&amp;gt;Cancel Boundary Event&amp;lt;/a&amp;gt;&#xA;&amp;lt;/td&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;expression&#34;&gt;expression&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The attribute defines an expression which will be evaluated at runtime.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;org.camunda.bpm.engine.delegate.Expression&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      Expression, e.g., &lt;code&gt;${gender == &#39;male&#39; ? &#39;Mr.&#39; : &#39;Mrs.&#39;}&lt;/code&gt; or &lt;code&gt;#{printer.printMessage()}&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;BPMN 2.0 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/service-task/&#34;&gt;Service Task&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/business-rule-task/&#34;&gt;Business Rule Task&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/send-task/&#34;&gt;Send Task&lt;/a&gt;,&#xA;      Message Event Definition of &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/message-events/#message-intermediate-throwing-event&#34;&gt;Message Intermediate Throwing Event&lt;/a&gt; or &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/message-events/#message-end-event&#34;&gt;Message End Event&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#tasklistener&#34;&gt;camunda:taskListener&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#executionlistener&#34;&gt;camunda:executionListner&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;followupdate&#34;&gt;followUpDate&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The attribute specifies the initial follow-up date of a &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/user-task/&#34;&gt;User Task&lt;/a&gt; when it is created.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;org.camunda.bpm.engine.delegate.Expression&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      An expression which evaluates to a &lt;code&gt;java.util.Date&lt;/code&gt;, &lt;code&gt;java.util.String&lt;/code&gt; (&lt;a href=&#34;http://en.wikipedia.org/wiki/ISO_8601&#34;&gt;ISO 8601&lt;/a&gt; formatted) or &lt;code&gt;null&lt;/code&gt;, e.g., &lt;code&gt;${dateVariable}&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;BPMN 2.0 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/user-task/&#34;&gt;User Task&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;formhandlerclass&#34;&gt;formHandlerClass&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The attribute specifies the class that will be called during the parsing of the form information of a &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/start-events/&#34;&gt;Start Event&lt;/a&gt; or &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/user-task/&#34;&gt;User Task&lt;/a&gt;.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.String&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      Fully qualified Java class name of a class which implements the &lt;code&gt;org.camunda.bpm.engine.impl.form.handler.StartFormHandler&lt;/code&gt;&#xA;      or &lt;code&gt;org.camunda.bpm.engine.impl.form.handler.TaskFormHandler&lt;/code&gt; interface, e.g., &lt;code&gt;org.camunda.bpm.MyUserTaskFormHandler&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;BPMN 2.0 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      Initial &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/start-events/&#34;&gt;Start Event&lt;/a&gt; of a Process,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/user-task/&#34;&gt;User Task&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;formkey&#34;&gt;formKey&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The attribute specifies a form resource. See &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/task-forms/&#34;&gt;task forms&lt;/a&gt; for more information.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.String&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      A &lt;code&gt;java.lang.String&lt;/code&gt; of a form resource which can be evaluated by the &lt;a href=&#34;/manual/1.0/manual/1.0/webapps/tasklist/&#34;&gt;Tasklist&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;BPMN 2.0 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      Initial &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/start-events/&#34;&gt;Start Event&lt;/a&gt; of a Process,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/user-task/&#34;&gt;User Task&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;formref&#34;&gt;formRef&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The attribute references a Camunda form definition by its key. See &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/task-forms/&#34;&gt;task forms&lt;/a&gt; for more information.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.String&lt;/code&gt; or &lt;code&gt;org.camunda.bpm.engine.delegate.Expression&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      A &lt;code&gt;java.lang.String&lt;/code&gt; or a &lt;code&gt;org.camunda.bpm.engine.delegate.Expression&lt;/code&gt; which &lt;a href=&#34;/manual/1.0/manual/1.0/webapps/tasklist/&#34;&gt;Tasklist&lt;/a&gt; can evaluate to display the referenced Camunda Form, e.g., myCamundaFormDefinitionKey or ${formKey}.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;BPMN 2.0 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      Initial &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/start-events/&#34;&gt;Start Event&lt;/a&gt; of a Process,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/user-task/&#34;&gt;User Task&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;formrefbinding&#34;&gt;formRefBinding&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;      &lt;td&gt;&#xA;      The attribute specifies which Camunda form definition version the activity references. If the value is &lt;code&gt;version&lt;/code&gt;, the attribute &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-attributes/#formrefversion&#34;&gt;camunda:formRefVersion&lt;/a&gt; is required.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.String&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;    &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;code&gt;latest&lt;/code&gt;, &lt;code&gt;deployment&lt;/code&gt;, &lt;code&gt;version&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;latest&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;BPMN 2.0 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      Initial &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/start-events/&#34;&gt;Start Event&lt;/a&gt; of a Process,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/user-task/&#34;&gt;User Task&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;formrefversion&#34;&gt;formRefVersion&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The attribute specifies which Camunda form definition version the activity references if the &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-attributes/#formrefbinding&#34;&gt;camunda:formRefBinding&lt;/a&gt;&#xA;      is set to &lt;code&gt;version&lt;/code&gt;.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.Integer&lt;/code&gt; or &lt;code&gt;org.camunda.bpm.engine.delegate.Expression&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      A concrete version of all deployed version numbers of the Camunda form definition as &lt;code&gt;java.lang.Integer&lt;/code&gt; or an expression which evaluates to a &lt;code&gt;java.lang.Integer&lt;/code&gt; e.g., &lt;code&gt;${versionToReference}&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;BPMN 2.0 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      Initial &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/start-events/&#34;&gt;Start Event&lt;/a&gt; of a Process,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/user-task/&#34;&gt;User Task&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;historytimetolive&#34;&gt;historyTimeToLive&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The attribute specifies the history time to live (in days) for the process definition. It is used within &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/history/history-cleanup/&#34;&gt;History cleanup&lt;/a&gt;.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.Integer&lt;/code&gt; or &lt;code&gt;java.lang.String&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      Any non-negative integer number or string containing a time in days defined by the ISO-8601 date format.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;null - means that process definition history won&#39;t ever be removed during history cleanup run&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;BPMN 2.0 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      Process&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;initiator&#34;&gt;initiator&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The attribute specifies a process variable in which the user id of the process initiator is set.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.String&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      A process variable name to save the process initiator&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;BPMN 2.0 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/start-events/&#34;&gt;Start Event&lt;/a&gt; of a Process&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;isstartableintasklist&#34;&gt;isStartableInTasklist&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The attribute specifies whether the process is startable in Tasklist or not.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.Boolean&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;BPMN 2.0 Elements&lt;/th&gt;&#xA;    &lt;td&gt;Process&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;jobpriority&#34;&gt;jobPriority&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      Specifies the priority a job receives that is created in the context of executing the given process element (e.g., a timer event, or in the case of &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-attributes/#asyncbefore&#34;&gt;asyncBefore&lt;/a&gt; and &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-attributes/#asyncafter&#34;&gt;asyncAfter&lt;/a&gt;). See the user guide on &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/the-job-executor/#job-prioritization&#34;&gt;Job Prioritization&lt;/a&gt; for details.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;A number in the range of a Java &lt;code&gt;long&lt;/code&gt; value or &lt;code&gt;org.camunda.bpm.engine.delegate.Expression&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      An expression must resolve to a valid Java &lt;code&gt;long&lt;/code&gt; value.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;none&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;BPMN 2.0 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/start-events/&#34;&gt;Start Events&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/&#34;&gt;End Events&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/&#34;&gt;Intermediate Throw Events&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/&#34;&gt;Intermediate Catch Events&lt;/a&gt;,&#xA;&lt;pre&gt;&lt;code&gt;  Task,&#xA;  &amp;lt;a href=&amp;quot;/manual/1.0/reference/bpmn20/tasks/service-task/&amp;quot;&amp;gt;Service Task&amp;lt;/a&amp;gt;,&#xA;  &amp;lt;a href=&amp;quot;/manual/1.0/reference/bpmn20/tasks/send-task/&amp;quot;&amp;gt;Send Task&amp;lt;/a&amp;gt;,&#xA;  &amp;lt;a href=&amp;quot;/manual/1.0/reference/bpmn20/tasks/user-task/&amp;quot;&amp;gt;User Task&amp;lt;/a&amp;gt;,&#xA;  &amp;lt;a href=&amp;quot;/manual/1.0/reference/bpmn20/tasks/business-rule-task/&amp;quot;&amp;gt;Business Rule Task&amp;lt;/a&amp;gt;,&#xA;  &amp;lt;a href=&amp;quot;/manual/1.0/reference/bpmn20/tasks/script-task/&amp;quot;&amp;gt;Script Task&amp;lt;/a&amp;gt;,&#xA;  &amp;lt;a href=&amp;quot;/manual/1.0/reference/bpmn20/tasks/receive-task/&amp;quot;&amp;gt;Receive Task&amp;lt;/a&amp;gt;,&#xA;  &amp;lt;a href=&amp;quot;/manual/1.0/reference/bpmn20/tasks/manual-task/&amp;quot;&amp;gt;Manual Task&amp;lt;/a&amp;gt;,&#xA;&#xA;  &amp;lt;a href=&amp;quot;/manual/1.0/reference/bpmn20/subprocesses/embedded-subprocess/&amp;quot;&amp;gt;Embedded Subprocess&amp;lt;/a&amp;gt;,&#xA;  &amp;lt;a href=&amp;quot;/manual/1.0/reference/bpmn20/subprocesses/call-activity/&amp;quot;&amp;gt;Call Activity&amp;lt;/a&amp;gt;,&#xA;  &amp;lt;a href=&amp;quot;/manual/1.0/reference/bpmn20/subprocesses/transaction-subprocess/&amp;quot;&amp;gt;Transaction Subprocess&amp;lt;/a&amp;gt;,&#xA;&#xA;  &amp;lt;a href=&amp;quot;/manual/1.0/reference/bpmn20/gateways/parallel-gateway/&amp;quot;&amp;gt;Parallel Gateway&amp;lt;/a&amp;gt;,&#xA;  &amp;lt;a href=&amp;quot;/manual/1.0/reference/bpmn20/gateways/inclusive-gateway/&amp;quot;&amp;gt;Inclusive Gateway&amp;lt;/a&amp;gt;,&#xA;  &amp;lt;a href=&amp;quot;/manual/1.0/reference/bpmn20/gateways/exclusive-gateway/&amp;quot;&amp;gt;Exclusive Gateway&amp;lt;/a&amp;gt;,&#xA;&#xA;  &amp;lt;a href=&amp;quot;/manual/1.0/reference/bpmn20/tasks/task-markers/#multiple-instance&amp;quot;&amp;gt;Multi Instance Loop Characteristics&amp;lt;/a&amp;gt;,&#xA;&#xA;  Process&#xA;&amp;lt;/td&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;mapdecisionresult&#34;&gt;mapDecisionResult&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The attribute references which &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/decisions/bpmn-cmmn/#predefined-mapping-of-the-decision-result&#34;&gt;built-in Decision Result Mapper&lt;/a&gt; is used to pass the result of an evaluated decision to a process variable. It should be used in combination with &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-attributes/#resultvariable&#34;&gt;camunda:resultVariable&lt;/a&gt;.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.String&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      singleEntry, singleResult, collectEntries, resultList&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;resultList&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;BPMN 2.0 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/business-rule-task/&#34;&gt;Business Rule Task&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;priority&#34;&gt;priority&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The attribute specifies the initial priority of a &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/user-task/&#34;&gt;User Task&lt;/a&gt; when it is created.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;org.camunda.bpm.engine.delegate.Expression&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      An expression which evaluates to a &lt;code&gt;java.lang.Number&lt;/code&gt; or a &lt;code&gt;java.lang.String&lt;/code&gt; which represents a number or &lt;code&gt;null&lt;/code&gt;, e.g., &lt;code&gt;${dateVariable}&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;BPMN 2.0 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/user-task/&#34;&gt;User Task&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;taskpriority&#34;&gt;taskPriority&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The attribute specifies the initial priority of an &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/service-task/#external-tasks&#34;&gt;External Task&lt;/a&gt; when it is created.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;A number in the range of a Java &lt;code&gt;long&lt;/code&gt; value or &lt;code&gt;org.camunda.bpm.engine.delegate.Expression&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      An expression must resolve to a valid Java &lt;code&gt;long&lt;/code&gt; value.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;0&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;BPMN 2.0 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/service-task/&#34;&gt;Service Task&lt;/a&gt;,&#xA;&#x9;  &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/message-events/#message-end-event&#34;&gt;Message End Event&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/events/message-events/#message-intermediate-throwing-event&#34;&gt;Message Intermediate Throwing Event&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/business-rule-task/#implementing-as-an-external-task&#34;&gt;Business Rule Task&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/send-task/&#34;&gt;Send Task&lt;/a&gt;,&#xA;      Process&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;resource&#34;&gt;resource&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The attribute specifies an external resource. The resource can be part of the deployment or&#xA;      exists in the classpath. To specify the type of resource, a URL scheme like prefix&#xA;      &lt;code&gt;deployment://&lt;/code&gt; resp. &lt;code&gt;classpath://&lt;/code&gt; can be supplied. If the scheme is&#xA;      omitted, it is assumed that the resource exists in the classpath.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.String&lt;/code&gt; or &lt;code&gt;org.camunda.bpm.engine.delegate.Expression&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The path to a resource or an expression which returns the path. Optional the path can&#xA;      start with an URL like scheme &lt;code&gt;classpath://&lt;/code&gt; or &lt;code&gt;deployment://&lt;/code&gt; to&#xA;      specify where to find the resource. If omitted the resource is assumed to exists in the&#xA;      classpath.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;BPMN 2.0 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/script-task/&#34;&gt;Script Task&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;resultvariable&#34;&gt;resultVariable&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;p&gt;&#xA;      The attribute specifies the process variable to save the return value of a &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-attributes/#expression&#34;&gt;camunda:expression&lt;/a&gt;.&#xA;      &lt;/p&gt;</description>
    </item>
    <item>
      <title>CIB seven License Book</title>
      <link>/manual/1.0/introduction/third-party-libraries/cibseven-bpm-platform-license-book/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/introduction/third-party-libraries/cibseven-bpm-platform-license-book/</guid>
      <description>&lt;h1 id=&#34;java-dependencies&#34;&gt;Java Dependencies&lt;/h1&gt;&#xA;&lt;div&gt;&lt;details&gt;&lt;summary&gt;logback-classic@1.5.7(&lt;a href=&#34;https://opensource.org/licenses/EPL-1.0&#34;&gt;EPL 1.0&lt;/a&gt;)&lt;/summary&gt;&lt;pre&gt;Copyright (C) 1999-2024, QOS.ch. All rights reserved.&lt;/pre&gt;&lt;/details&gt;&lt;/div&gt;&#xA;&lt;div&gt;&lt;details&gt;&lt;summary&gt;logback-core@1.5.7(&lt;a href=&#34;https://opensource.org/licenses/EPL-1.0&#34;&gt;EPL 1.0&lt;/a&gt;)&lt;/summary&gt;&lt;pre&gt;Copyright (C) 1999-2024, QOS.ch. All rights reserved.&lt;/pre&gt;&lt;/details&gt;&lt;/div&gt;&#xA;&lt;div&gt;&lt;details&gt;&lt;summary&gt;jackson-annotations@2.15.2(&lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;Apache 2.0&lt;/a&gt;)&lt;/summary&gt;&lt;pre&gt;Copyright 2007-, Tatu Saloranta (tatu.saloranta@iki.fi)&#xA;Jackson is a high-performance, Free/Open Source JSON processing library.&#xA;It was originally written by Tatu Saloranta (tatu.saloranta@iki.fi), and has&#xA;been in development since 2007.&#xA;It is currently developed by a community of developers: &lt;/pre&gt;&lt;/details&gt;&lt;/div&gt;&#xA;&lt;div&gt;&lt;details&gt;&lt;summary&gt;jackson-annotations@2.17.2(&lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;Apache 2.0&lt;/a&gt;)&lt;/summary&gt;&lt;pre&gt;Copyright 2007-, Tatu Saloranta (tatu.saloranta@iki.fi)&#xA;Jackson is a high-performance, Free/Open Source JSON processing library.&#xA;It was originally written by Tatu Saloranta (tatu.saloranta@iki.fi), and has&#xA;been in development since 2007.&#xA;It is currently developed by a community of developers:&lt;/pre&gt;&lt;/details&gt;&lt;/div&gt;&#xA;&lt;div&gt;&lt;details&gt;&lt;summary&gt;jackson-core@2.15.2(&lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;Apache 2.0&lt;/a&gt;)&lt;/summary&gt;&lt;pre&gt;Copyright 2007-, Tatu Saloranta (tatu.saloranta@iki.fi)&#xA;Jackson is a high-performance, Free/Open Source JSON processing library.&#xA;It was originally written by Tatu Saloranta (tatu.saloranta@iki.fi), and has&#xA;been in development since 2007.&#xA;It is currently developed by a community of developers: https://github.com/FasterXML/jackson-core/blob/2.16/release-notes/CREDITS-2.x&lt;/pre&gt;&lt;/details&gt;&lt;/div&gt;&#xA;&lt;div&gt;&lt;details&gt;&lt;summary&gt;jackson-core@2.17.2(&lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;Apache 2.0&lt;/a&gt;)&lt;/summary&gt;&lt;pre&gt;Copyright 2007-, Tatu Saloranta (tatu.saloranta@iki.fi)&#xA;Jackson is a high-performance, Free/Open Source JSON processing library.&#xA;It was originally written by Tatu Saloranta (tatu.saloranta@iki.fi), and has&#xA;been in development since 2007.&#xA;It is currently developed by a community of developers:&lt;/pre&gt;&lt;/details&gt;&lt;/div&gt;&#xA;&lt;div&gt;&lt;details&gt;&lt;summary&gt;jackson-databind@2.15.2(&lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;Apache 2.0&lt;/a&gt;)&lt;/summary&gt;&lt;pre&gt;Copyright 2007-, Tatu Saloranta (tatu.saloranta@iki.fi)&#xA;Jackson is a high-performance, Free/Open Source JSON processing library.&#xA;It was originally written by Tatu Saloranta (tatu.saloranta@iki.fi), and has&#xA;been in development since 2007.&#xA;It is currently developed by a community of developers: https://github.com/FasterXML/jackson-databind/blob/2.16/release-notes/CREDITS-2.x&lt;/pre&gt;&lt;/details&gt;&lt;/div&gt;&#xA;&lt;div&gt;&lt;details&gt;&lt;summary&gt;jackson-databind@2.17.2(&lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;Apache 2.0&lt;/a&gt;)&lt;/summary&gt;&lt;pre&gt;Copyright 2007-, Tatu Saloranta (tatu.saloranta@iki.fi)&#xA;Jackson is a high-performance, Free/Open Source JSON processing library.&#xA;It was originally written by Tatu Saloranta (tatu.saloranta@iki.fi), and has&#xA;been in development since 2007.&#xA;It is currently developed by a community of developers:&lt;/pre&gt;&lt;/details&gt;&lt;/div&gt;&#xA;&lt;div&gt;&lt;details&gt;&lt;summary&gt;jackson-dataformat-csv@2.15.2(&lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;Apache 2.0&lt;/a&gt;)&lt;/summary&gt;&lt;pre&gt;Copyright 2007-, Tatu Saloranta (tatu.saloranta@iki.fi)&#xA;Jackson is a high-performance, Free/Open Source JSON processing library.&#xA;It was originally written by Tatu Saloranta (tatu.saloranta@iki.fi), and has&#xA;been in development since 2007.&#xA;It is currently developed by a community of developers: https://github.com/FasterXML/jackson-dataformats-text/blob/2.16/release-notes/CREDITS-2.x&lt;/pre&gt;&lt;/details&gt;&lt;/div&gt;&#xA;&lt;div&gt;&lt;details&gt;&lt;summary&gt;jackson-dataformat-csv@2.17.2(&lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;Apache 2.0&lt;/a&gt;)&lt;/summary&gt;&lt;pre&gt;Copyright 2007-, Tatu Saloranta (tatu.saloranta@iki.fi)&#xA;Jackson is a high-performance, Free/Open Source JSON processing library.&#xA;It was originally written by Tatu Saloranta (tatu.saloranta@iki.fi), and has&#xA;been in development since 2007.&#xA;It is currently developed by a community of developers:&lt;/pre&gt;&lt;/details&gt;&lt;/div&gt;&#xA;&lt;div&gt;&lt;details&gt;&lt;summary&gt;jackson-datatype-jdk8@2.17.2(&lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;Apache 2.0&lt;/a&gt;)&lt;/summary&gt;&lt;pre&gt;Copyright 2007-, Tatu Saloranta (tatu.saloranta@iki.fi)&#xA;Jackson is a high-performance, Free/Open Source JSON processing library.&#xA;It was originally written by Tatu Saloranta (tatu.saloranta@iki.fi), and has&#xA;been in development since 2007.&#xA;It is currently developed by a community of developers:&lt;/pre&gt;&lt;/details&gt;&lt;/div&gt;&#xA;&lt;div&gt;&lt;details&gt;&lt;summary&gt;jackson-datatype-jsr310@2.15.2(&lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;Apache 2.0&lt;/a&gt;)&lt;/summary&gt;&lt;pre&gt;Copyright 2007-, Tatu Saloranta (tatu.saloranta@iki.fi)&#xA;Jackson is a high-performance, Free/Open Source JSON processing library.&#xA;It was originally written by Tatu Saloranta (tatu.saloranta@iki.fi), and has&#xA;been in development since 2007.&#xA;It is currently developed by a community of developers: https://github.com/FasterXML/jackson-modules-java8/blob/2.16/release-notes/CREDITS-2.x&lt;/pre&gt;&lt;/details&gt;&lt;/div&gt;&#xA;&lt;div&gt;&lt;details&gt;&lt;summary&gt;jackson-datatype-jsr310@2.17.2(&lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;Apache 2.0&lt;/a&gt;)&lt;/summary&gt;&lt;pre&gt;Copyright 2007-, Tatu Saloranta (tatu.saloranta@iki.fi)&#xA;Jackson is a high-performance, Free/Open Source JSON processing library.&#xA;It was originally written by Tatu Saloranta (tatu.saloranta@iki.fi), and has&#xA;been in development since 2007.&#xA;It is currently developed by a community of developers:&lt;/pre&gt;&lt;/details&gt;&lt;/div&gt;&#xA;&lt;div&gt;&lt;details&gt;&lt;summary&gt;jackson-jakarta-rs-base@2.15.2(&lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;Apache 2.0&lt;/a&gt;)&lt;/summary&gt;&lt;pre&gt;Copyright 2007-, Tatu Saloranta (tatu.saloranta@iki.fi)&#xA;Jackson is a high-performance, Free/Open Source JSON processing library.&#xA;It was originally written by Tatu Saloranta (tatu.saloranta@iki.fi), and has&#xA;been in development since 2007.&#xA;It is currently developed by a community of developers: https://github.com/FasterXML/jackson-jakarta-rs-providers/blob/2.16/release-notes/CREDITS-2.x&lt;/pre&gt;&lt;/details&gt;&lt;/div&gt;&#xA;&lt;div&gt;&lt;details&gt;&lt;summary&gt;jackson-jakarta-rs-base@2.17.2(&lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;Apache 2.0&lt;/a&gt;)&lt;/summary&gt;&lt;pre&gt;Copyright 2007-, Tatu Saloranta (tatu.saloranta@iki.fi)&#xA;Jackson is a high-performance, Free/Open Source JSON processing library.&#xA;It was originally written by Tatu Saloranta (tatu.saloranta@iki.fi), and has&#xA;been in development since 2007.&#xA;It is currently developed by a community of developers:&lt;/pre&gt;&lt;/details&gt;&lt;/div&gt;&#xA;&lt;div&gt;&lt;details&gt;&lt;summary&gt;jackson-jakarta-rs-json-provider@2.15.2(&lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;Apache 2.0&lt;/a&gt;)&lt;/summary&gt;&lt;pre&gt;Copyright 2007-, Tatu Saloranta (tatu.saloranta@iki.fi)&#xA;Jackson is a high-performance, Free/Open Source JSON processing library.&#xA;It was originally written by Tatu Saloranta (tatu.saloranta@iki.fi), and has&#xA;been in development since 2007.&#xA;It is currently developed by a community of developers: https://github.com/FasterXML/jackson-jakarta-rs-providers/blob/2.16/release-notes/CREDITS-2.x&lt;/pre&gt;&lt;/details&gt;&lt;/div&gt;&#xA;&lt;div&gt;&lt;details&gt;&lt;summary&gt;jackson-jakarta-rs-json-provider@2.17.2(&lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;Apache 2.0&lt;/a&gt;)&lt;/summary&gt;&lt;pre&gt;Copyright 2007-, Tatu Saloranta (tatu.saloranta@iki.fi)&#xA;Jackson is a high-performance, Free/Open Source JSON processing library.&#xA;It was originally written by Tatu Saloranta (tatu.saloranta@iki.fi), and has&#xA;been in development since 2007.&#xA;It is currently developed by a community of developers:&lt;/pre&gt;&lt;/details&gt;&lt;/div&gt;&#xA;&lt;div&gt;&lt;details&gt;&lt;summary&gt;jackson-jaxrs-base@2.15.2(&lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;Apache 2.0&lt;/a&gt;)&lt;/summary&gt;&lt;pre&gt;Copyright 2007-, Tatu Saloranta (tatu.saloranta@iki.fi)&#xA;Jackson is a high-performance, Free/Open Source JSON processing library.&#xA;It was originally written by Tatu Saloranta (tatu.saloranta@iki.fi), and has&#xA;been in development since 2007.&#xA;It is currently developed by a community of developers: https://github.com/FasterXML/jackson-jaxrs-providers/blob/2.16/release-notes/CREDITS-2.x&lt;/pre&gt;&lt;/details&gt;&lt;/div&gt;&#xA;&lt;div&gt;&lt;details&gt;&lt;summary&gt;jackson-jaxrs-json-provider@2.15.2(&lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;Apache 2.0&lt;/a&gt;)&lt;/summary&gt;&lt;pre&gt;Copyright 2007-, Tatu Saloranta (tatu.saloranta@iki.fi)&#xA;Jackson is a high-performance, Free/Open Source JSON processing library.&#xA;It was originally written by Tatu Saloranta (tatu.saloranta@iki.fi), and has&#xA;been in development since 2007.&#xA;It is currently developed by a community of developers: https://github.com/FasterXML/jackson-jaxrs-providers/blob/2.16/release-notes/CREDITS-2.x&lt;/pre&gt;&lt;/details&gt;&lt;/div&gt;&#xA;&lt;div&gt;&lt;details&gt;&lt;summary&gt;jackson-module-jakarta-xmlbind-annotations@2.15.2(&lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;Apache 2.0&lt;/a&gt;)&lt;/summary&gt;&lt;pre&gt;Copyright 2007-, Tatu Saloranta (tatu.saloranta@iki.fi)&#xA;Jackson is a high-performance, Free/Open Source JSON processing library.&#xA;It was originally written by Tatu Saloranta (tatu.saloranta@iki.fi), and has&#xA;been in development since 2007.&#xA;It is currently developed by a community of developers: https://github.com/FasterXML/jackson-modules-base/blob/2.16/release-notes/CREDITS-2.x&lt;/pre&gt;&lt;/details&gt;&lt;/div&gt;&#xA;&lt;div&gt;&lt;details&gt;&lt;summary&gt;jackson-module-jakarta-xmlbind-annotations@2.17.2(&lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;Apache 2.0&lt;/a&gt;)&lt;/summary&gt;&lt;pre&gt;Copyright 2007-, Tatu Saloranta (tatu.saloranta@iki.fi)&#xA;Jackson is a high-performance, Free/Open Source JSON processing library.&#xA;It was originally written by Tatu Saloranta (tatu.saloranta@iki.fi), and has&#xA;been in development since 2007.&#xA;It is currently developed by a community of developers:&lt;/pre&gt;&lt;/details&gt;&lt;/div&gt;&#xA;&lt;div&gt;&lt;details&gt;&lt;summary&gt;jackson-module-jaxb-annotations@2.15.2(&lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;Apache 2.0&lt;/a&gt;)&lt;/summary&gt;&lt;pre&gt;Copyright 2007-, Tatu Saloranta (tatu.saloranta@iki.fi)&#xA;Jackson is a high-performance, Free/Open Source JSON processing library.&#xA;It was originally written by Tatu Saloranta (tatu.saloranta@iki.fi), and has&#xA;been in development since 2007.&#xA;It is currently developed by a community of developers: https://github.com/FasterXML/jackson-modules-base/blob/2.16/release-notes/CREDITS-2.x&lt;/pre&gt;&lt;/details&gt;&lt;/div&gt;&#xA;&lt;div&gt;&lt;details&gt;&lt;summary&gt;jackson-module-parameter-names@2.17.2(&lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;Apache 2.0&lt;/a&gt;)&lt;/summary&gt;&lt;pre&gt;Copyright 2007-, Tatu Saloranta (tatu.saloranta@iki.fi)&#xA;Jackson is a high-performance, Free/Open Source JSON processing library.&#xA;It was originally written by Tatu Saloranta (tatu.saloranta@iki.fi), and has&#xA;been in development since 2007.&#xA;It is currently developed by a community of developers:&lt;/pre&gt;&lt;/details&gt;&lt;/div&gt;&#xA;&lt;div&gt;&lt;details&gt;&lt;summary&gt;java-uuid-generator@4.3.0(&lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;Apache 2.0&lt;/a&gt;)&lt;/summary&gt;&lt;pre&gt;Java UUID generator library has been written by Tatu Saloranta (tatu.saloranta@iki.fi)&#xA;&lt;p&gt;Other developers who have contributed code are:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cockpit Plugins</title>
      <link>/manual/1.0/webapps/cockpit/extend/plugins/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/webapps/cockpit/extend/plugins/</guid>
      <description>&lt;p&gt;Cockpit defines a plugin concept to add own functionality without being forced to extend or hack the Cockpit web application. You can add plugins at various plugin points, e.g., the processes dashboard as shown in the following example:&lt;/p&gt;&#xA;&lt;figure class=&#34;image&#34;&gt;&#xA;  &lt;span&gt;&lt;img&#xA;      src=&#34;../../img/cockpit-plugin.png&#34;&#xA;      &#xA;          title=&#34;Cockpit Plugin&#34;&#xA;       /&gt;&lt;/span&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;h1 id=&#34;the-nature-of-a-cockpit-plugin&#34;&gt;The Nature of a Cockpit Plugin&lt;/h1&gt;&#xA;&lt;p&gt;A Cockpit plugin is a maven jar project that is included in the Cockpit webapplication as a library dependency. It provides a server-side and a client-side extension to Cockpit.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Conditional and Default Sequence Flows</title>
      <link>/manual/1.0/reference/bpmn20/gateways/sequence-flow/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/bpmn20/gateways/sequence-flow/</guid>
      <description>&lt;p&gt;A sequence flow is the connector between two elements of a process. After an element is visited during process execution, all outgoing sequence flows are followed. This means that the default nature of BPMN 2.0 is to be parallel: &lt;strong&gt;two outgoing sequence flows will create two separate, parallel paths of execution.&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div data-bpmn-diagram=&#34;../bpmn/sequence-flow-parallel&#34;&gt;&lt;/div&gt;&#xA;&lt;h1 id=&#34;camunda-extensions&#34;&gt;Camunda Extensions&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Attributes&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Extension Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#executionlistener&#34;&gt;camunda:executionListener&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Constraints&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;conditional-sequence-flow&#34;&gt;Conditional Sequence Flow&lt;/h1&gt;&#xA;&lt;p&gt;A sequence flow can have a condition defined on it. When a BPMN 2.0 activity is left, the default behavior is to evaluate the conditions on the outgoing sequence flows. When a condition evaluates to &amp;rsquo;true&amp;rsquo;, that outgoing sequence flow is selected. When multiple sequence flows are selected that way, multiple executions will be generated and the process is continued in a parallel way. Note: This is different for gateways. Gateways will handle sequence flows with conditions in specific ways, depending on the gateway type.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cookie Security</title>
      <link>/manual/1.0/webapps/shared-options/cookie-security/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/webapps/shared-options/cookie-security/</guid>
      <description>&lt;p&gt;Camundas Web applications use cookies to preserve user sessions and to prevent CSRF attacks. This page explains how these cookies should be configured to increase the security.&lt;/p&gt;&#xA;&lt;p&gt;The Web applications set the following cookies:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Session Cookie&lt;/strong&gt; (&lt;code&gt;JSESSIONID&lt;/code&gt;)&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Supposed to remember the authenticated user after the login&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;CSRF Prevention Cookie&lt;/strong&gt; (&lt;code&gt;XSRF-TOKEN&lt;/code&gt;)&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Supposed to prevent Cross-Site Request Forgery (CSRF) by sending a newly generated token along with each modifying request&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;what-are-the-properties-supposed-to-be&#34;&gt;What are the properties supposed to be?&lt;/h2&gt;&#xA;&lt;p&gt;This section describes the purpose of security-related cookie properties. You can find more information about&#xA;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#Secure_and_HttpOnly_cookies&#34;&gt;Secure and HttpOnly&lt;/a&gt;&#xA;as well as&#xA;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#samesite_attribute&#34;&gt;SameSite cookies&lt;/a&gt;&#xA;in Mozilla’s Developer Guide.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Create a Model</title>
      <link>/manual/1.0/user-guide/model-api/bpmn-model-api/create-a-model/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/model-api/bpmn-model-api/create-a-model/</guid>
      <description>&lt;p&gt;To create a new BPMN model from scratch you have to create an empty BPMN model instance with the following method:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;BpmnModelInstance&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;modelInstance&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Bpmn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;createEmptyModel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The next step is to create a BPMN definitions element. Set the target namespace on it and add it&#xA;to the newly created empty model instance.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Definitions&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;definitions&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;modelInstance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;newInstance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Definitions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;definitions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setTargetNamespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://camunda.org/examples&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;modelInstance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setDefinitions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;definitions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Usually you want to add a process to your model. This follows&#xA;the same 3 steps as the creation of the BPMN definitions element:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Create a Model</title>
      <link>/manual/1.0/user-guide/model-api/cmmn-model-api/create-a-model/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/model-api/cmmn-model-api/create-a-model/</guid>
      <description>&lt;p&gt;To create a new CMMN model from scratch, you have to create an empty CMMN model instance with the following method:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;CmmnModelInstance&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;modelInstance&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Cmmn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;createEmptyModel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The next step is to create a CMMN definitions element. Set the target namespace on it and add it&#xA;to the newly created empty model instance.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Definitions&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;definitions&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;modelInstance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;newInstance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Definitions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;definitions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setTargetNamespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://camunda.org/examples&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;modelInstance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setDefinitions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;definitions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Usually you want to add a case to your model. This follows&#xA;the same 3 steps as the creation of the CMMN definitions element:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Create a Model</title>
      <link>/manual/1.0/user-guide/model-api/dmn-model-api/create-a-model/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/model-api/dmn-model-api/create-a-model/</guid>
      <description>&lt;p&gt;To create a new DMN model from scratch, you have to create an empty DMN model instance with the following method:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;DmnModelInstance&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;modelInstance&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Dmn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;createEmptyModel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The next step is to create a DMN definitions element. Set the target namespace on it and add it&#xA;to the newly created empty model instance.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Definitions&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;definitions&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;modelInstance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;newInstance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Definitions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;definitions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setNamespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://camunda.org/schema/1.0/dmn&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;definitions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;definitions&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;definitions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;definitions&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;modelInstance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setDefinitions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;definitions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Usually you want to add a decision to your model. This follows&#xA;the same 3 steps as the creation of the DMN definitions element:&lt;/p&gt;</description>
    </item>
    <item>
      <title>CSRF Prevention</title>
      <link>/manual/1.0/webapps/shared-options/csrf-prevention/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/webapps/shared-options/csrf-prevention/</guid>
      <description>&lt;p&gt;A CSRF filter is enabled by default, validating each modifying request performed through the webapps. The filter implements a (per-session) &lt;em&gt;Synchronization Token&lt;/em&gt; method for CSRF validation with an optional &lt;em&gt;Same Origin with Standard Headers&lt;/em&gt; verification.&lt;/p&gt;&#xA;&lt;p&gt;In Spring Boot Starter, the configuration needs to be made in the &lt;code&gt;application.yaml&lt;/code&gt;.&#xA;Please read more about it &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/spring-boot-integration/configuration/#csrf&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;If you would like to enable the additional &lt;em&gt;Same Origin with Standard Headers&lt;/em&gt; verification, the &lt;code&gt;targetOrigin&lt;/code&gt; init-parameter should be set in the &lt;code&gt;web.xml&lt;/code&gt; file of your application. That, and some additional optional initialization parameters are:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Dashboard</title>
      <link>/manual/1.0/webapps/tasklist/dashboard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/webapps/tasklist/dashboard/</guid>
      <description>&lt;figure class=&#34;image&#34;&gt;&#xA;  &lt;span&gt;&lt;img&#xA;      src=&#34;../img/tasklist-dashboard-detail.png&#34;&#xA;      &#xA;          title=&#34;Tasklist Dashboard&#34;&#xA;       /&gt;&lt;/span&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;On the dashboard of Tasklist you see an overview of pending tasks. On the left side of the screen, an overview of the &lt;a href=&#34;/manual/1.0/manual/1.0/webapps/tasklist/filters/&#34;&gt;filters&lt;/a&gt; is displayed. On the upper right side of the screen, you can set a follow-up or due date, you can claim, unclaim and reassign tasks and you can add comments. Underneath that section, the embedded form is displayed (please note that external task forms cannot be displayed here), you can switch to the task history, you can see the diagram view or you can view the description of the user task.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Data Formats in Processes</title>
      <link>/manual/1.0/user-guide/data-formats/data-formats-in-processes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/data-formats/data-formats-in-processes/</guid>
      <description>&lt;p&gt;The main entry point to Spin&amp;rsquo;s functionality is the static function &lt;code&gt;org.camunda.spin.Spin.S&lt;/code&gt; that can be used to process documents or to map Java objects to a document format. The returned value of this function is a &lt;em&gt;Spin wrapper&lt;/em&gt;, which is an intermediary representation of a document and that offers functions for manipulation of the underlying document. Additionally, the functions &lt;code&gt;org.camunda.spin.Spin.XML&lt;/code&gt; and &lt;code&gt;org.camunda.spin.Spin.JSON&lt;/code&gt; can be used that return a strongly-typed Spin wrapper of the provided documents which is useful when writing Java. Refer to the &lt;a href=&#34;/manual/1.0/manual/1.0/reference/spin/&#34;&gt;Spin reference documentation&lt;/a&gt; on how these methods can be used and what API is offered by the Spin wrappers.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Database Configuration</title>
      <link>/manual/1.0/user-guide/process-engine/database/database-configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/process-engine/database/database-configuration/</guid>
      <description>&lt;p&gt;There are two ways to configure the database that the CIB seven engine will use. The first option is to define the JDBC properties of the database:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;jdbcUrl&lt;/code&gt;: JDBC URL of the database.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;jdbcDriver&lt;/code&gt;: implementation of the driver for the specific database type.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;jdbcUsername&lt;/code&gt;: username to connect to the database.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;jdbcPassword&lt;/code&gt;: password to connect to the database.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Note that the engine uses &lt;a href=&#34;http://www.mybatis.org/&#34;&gt;Apache MyBatis&lt;/a&gt; internally for persistence.&lt;/p&gt;&#xA;&lt;p&gt;The data source that is constructed based on the provided JDBC properties will have the default MyBatis connection pool settings. The following attributes can optionally be set to tweak that connection pool (taken from the MyBatis documentation):&lt;/p&gt;</description>
    </item>
    <item>
      <title>Decision Instance View</title>
      <link>/manual/1.0/webapps/cockpit/dmn/decision-instance-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/webapps/cockpit/dmn/decision-instance-view/</guid>
      <description>&lt;p&gt;On the decision instance page you find the table or literal expression of the decision that was executed as well as the values for the input variables and the decision result.&lt;/p&gt;&#xA;&lt;figure class=&#34;image&#34;&gt;&#xA;  &lt;span&gt;&lt;img&#xA;      src=&#34;../../img/cockpit-decision-instance-view.png&#34;&#xA;      &#xA;          title=&#34;Decision Instance View&#34;&#xA;       /&gt;&lt;/span&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;The input and output values for this decision instance are shown directly on the table in the corresponding cells as well as in the Inputs and Outputs tabs below the table. Complex variables like Objects, Files and Bytes are not displayed on the table. You have to use the Inputs and Outputs tabs to access the values of these variables.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Decisions in the Process Engine Repository</title>
      <link>/manual/1.0/user-guide/process-engine/decisions/repository/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/process-engine/decisions/repository/</guid>
      <description>&lt;p&gt;To evaluate a DMN decision in CIB seven, it has to be part of&#xA;a &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/deployments/&#34;&gt;Deployment&lt;/a&gt;. After a decision has been deployed, it can be referenced&#xA;by its key and version. The platform supports &lt;a href=&#34;/manual/1.0/manual/1.0/reference/dmn/&#34;&gt;DMN 1.3&lt;/a&gt; XML files.&lt;/p&gt;&#xA;&lt;h1 id=&#34;deploying-a-decision&#34;&gt;Deploying a Decision&lt;/h1&gt;&#xA;&lt;p&gt;To deploy a DMN decision you can either use the Repository Service or add it to&#xA;a process application. The platform will recognize all files with a &lt;code&gt;.dmn&lt;/code&gt; or&#xA;&lt;code&gt;.dmn11.xml&lt;/code&gt; file extension as DMN resources.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Delegation Code</title>
      <link>/manual/1.0/user-guide/model-api/bpmn-model-api/delegation-code/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/model-api/bpmn-model-api/delegation-code/</guid>
      <description>&lt;p&gt;If you use &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/delegation-code/&#34;&gt;Delegation Code&lt;/a&gt;, you can access the BPMN model instance and current element of the executed process. If a BPMN model is accessed, it will be cached to avoid redundant database queries.&lt;/p&gt;&#xA;&lt;h1 id=&#34;java-delegate&#34;&gt;Java Delegate&lt;/h1&gt;&#xA;&lt;p&gt;If your class implements the &lt;code&gt;org.camunda.bpm.engine.delegate.JavaDelegate&lt;/code&gt; interface, you can access the BPMN model instance&#xA;and the current flow element. In the following example the &lt;code&gt;JavaDelegate&lt;/code&gt; was added to a service task in the BPMN model.&#xA;Therefore the returned flow element can be cast to a &lt;code&gt;ServiceTask&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Delegation Code</title>
      <link>/manual/1.0/user-guide/model-api/cmmn-model-api/delegation-code/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/model-api/cmmn-model-api/delegation-code/</guid>
      <description>&lt;p&gt;If you use &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/delegation-code/&#34;&gt;Delegation Code&lt;/a&gt;, you can access the CMMN model instance and current element of the executed case. If a CMMN model is accessed, it will be cached to avoid redundant database queries.&lt;/p&gt;&#xA;&lt;h1 id=&#34;case-execution-listener&#34;&gt;Case Execution Listener&lt;/h1&gt;&#xA;&lt;p&gt;If your class implements the &lt;code&gt;org.camunda.bpm.engine.delegate.CaseExecutionListener&lt;/code&gt; interface, you can access the CMMN model instance&#xA;and the plan item element. As a Case Execution Listener can be added to several elements like case plan model, human task, etc., it can&#xA;not be guaranteed which type the flow element will be.&lt;/p&gt;</description>
    </item>
    <item>
      <title>DMN Decision Table Output</title>
      <link>/manual/1.0/reference/dmn/decision-table/output/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/dmn/decision-table/output/</guid>
      <description>&lt;figure class=&#34;image no-lightbox&#34;&gt;&#xA;  &lt;span&gt;&lt;img&#xA;      src=&#34;../img/output.png&#34;&#xA;      &#xA;          title=&#34;Output&#34;&#xA;       /&gt;&lt;/span&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;A decision table can have one or more outputs, also called output clauses. An&#xA;output clause defines the id, label, name and type of a decision table output.&lt;/p&gt;&#xA;&lt;p&gt;An output clause is represented by an &lt;code&gt;output&lt;/code&gt; element inside a &lt;code&gt;decisionTable&lt;/code&gt;&#xA;XML element.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;definitions&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xmlns=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;https://www.omg.org/spec/DMN/20191111/MODEL/&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;definitions&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;definitions&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;namespace=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://camunda.org/schema/1.0/dmn&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;decision&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;dish&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Dish&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;decisionTable&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;decisionTable&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;c&#34;&gt;&amp;lt;!-- ... --&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;output&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;output1&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;label=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Dish&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;desiredDish&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;typeRef=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;c&#34;&gt;&amp;lt;!-- ... --&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/decisionTable&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;/decision&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/definitions&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;output-id&#34;&gt;Output Id&lt;/h1&gt;&#xA;&lt;p&gt;The output id is a unique identifier of the decision table output. It is used&#xA;by CIB seven to reference the output in the history of&#xA;evaluated decisions. Therefore, it is required by the Camunda DMN engine. It is&#xA;set as the &lt;code&gt;id&lt;/code&gt; attribute of the &lt;code&gt;output&lt;/code&gt; XML element.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Engine CDI Integration</title>
      <link>/manual/1.0/user-guide/quarkus-integration/cdi-integration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/quarkus-integration/cdi-integration/</guid>
      <description>&lt;p&gt;Quarkus comes with a built-in solution for CDI (short for &amp;ldquo;Context and Dependency Injection&amp;rdquo;) called ArC,&#xA;which is based on the &lt;a href=&#34;https://jakarta.ee/specifications/cdi/4.0/jakarta-cdi-spec-4.0.html&#34;&gt;Java CDI 4.0 standard&lt;/a&gt;. Quarkus ArC does not entirely cover&#xA;the CDI 4.0 standard but only implements a subset of it.&lt;/p&gt;&#xA;&lt;p&gt;The CIB seven engine offers CDI 4 integration with the &lt;code&gt;camunda-engine-cdi-jakarta&lt;/code&gt; module. This module is integrated&#xA;directly into the Quarkus Extension. You can learn more about the features and the programming model&#xA;at &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/cdi-java-ee-integration/&#34;&gt;CDI and Java EE Integration&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Evaluating Decisions using the DMN Engine API</title>
      <link>/manual/1.0/user-guide/dmn-engine/evaluate-decisions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/dmn-engine/evaluate-decisions/</guid>
      <description>&lt;p&gt;The DMN engine &lt;a href=&#34;/manual/1.0/javadoc/cibseven/1.0/org/camunda/bpm/dmn/engine/DmnEngine.html&#34;&gt;interface&lt;/a&gt;&#xA; exposes methods&#xA;for parsing and evaluating DMN Decisions.&lt;/p&gt;&#xA;&lt;h1 id=&#34;parse-decisions&#34;&gt;Parse Decisions&lt;/h1&gt;&#xA;&lt;p&gt;Decisions can be parsed from an &lt;code&gt;InputStream&lt;/code&gt; or transformed from a &lt;a href=&#34;/manual/1.0/javadoc/cibseven/1.0/org/camunda/bpm/model/dmn/DmnModelInstance.html&#34;&gt;DmnModelInstance&lt;/a&gt;&#xA;.&lt;/p&gt;&#xA;&lt;p&gt;This example shows how to parse a decision from an input stream:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// create a default DMN engine&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DmnEngine&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dmnEngine&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DmnEngineConfiguration&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;createDefaultDmnEngineConfiguration&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;buildEngine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;InputStream&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;inputStream&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// parse all decision from the input stream&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DmnDecision&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decisions&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dmnEngine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;parseDecisions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;inputStream&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The next example uses the DMN Model API to first create a&#xA;DmnModelInstance and then transform the decisions:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Extension Attributes</title>
      <link>/manual/1.0/reference/cmmn11/custom-extensions/camunda-attributes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/cmmn11/custom-extensions/camunda-attributes/</guid>
      <description>&lt;p&gt;The following attributes are extension attributes for the &lt;code&gt;camunda&lt;/code&gt; namespace &lt;code&gt;http://camunda.org/schema/1.0/cmmn&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;h1 id=&#34;assignee&#34;&gt;assignee&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      This attribute specifies a performer of a &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/tasks/human-task/&#34;&gt;Human Task&lt;/a&gt;.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.String&lt;/code&gt; or &lt;code&gt;org.camunda.bpm.engine.delegate.Expression&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The name of a performer as &lt;code&gt;java.lang.String&lt;/code&gt; or an expression which evaluates to a &lt;code&gt;java.lang.String&lt;/code&gt; e.g., &lt;code&gt;${perfomer}&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;CMMN 1.1 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/tasks/human-task/&#34;&gt;Human Task&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;candidategroups&#34;&gt;candidateGroups&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      This attribute specifies which group(s) will be candidate for performing the &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/tasks/human-task/&#34;&gt;Human Task&lt;/a&gt;.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.String&lt;/code&gt; or &lt;code&gt;org.camunda.bpm.engine.delegate.Expression&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      Comma separated list of group ids as &lt;code&gt;java.lang.String&lt;/code&gt; or expressions that evaluate to a &lt;code&gt;java.lang.String&lt;/code&gt; or a &lt;code&gt;java.util.Collection&lt;/code&gt; of &lt;code&gt;java.lang.String&lt;/code&gt;, e.g., &lt;code&gt;management&lt;/code&gt; or &lt;code&gt;management, ${accountancyGroupId()}&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;CMMN 1.1 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/tasks/human-task/&#34;&gt;Human Task&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;candidateusers&#34;&gt;candidateUsers&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      This attribute specifies which user(s) will be candidate for performing the &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/tasks/human-task/&#34;&gt;Human Task&lt;/a&gt;.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.String&lt;/code&gt; or &lt;code&gt;org.camunda.bpm.engine.delegate.Expression&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      Comma separated list of user ids as &lt;code&gt;java.lang.String&lt;/code&gt; or expressions that evaluate to a &lt;code&gt;java.lang.String&lt;/code&gt; or a &lt;code&gt;java.util.Collection&lt;/code&gt; of &lt;code&gt;java.lang.String&lt;/code&gt;, e.g., &lt;code&gt;kermit, gonzo&lt;/code&gt; or &lt;code&gt;${ldapService.findAllSales()}&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;CMMN 1.1 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/tasks/human-task/&#34;&gt;Human Task&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;casebinding&#34;&gt;caseBinding&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      This attribute specifies which case definition version should be called inside the case task.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.String&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;code&gt;latest&lt;/code&gt;, &lt;code&gt;deployment&lt;/code&gt;, &lt;code&gt;version&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Constraints&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      If the value is set to &lt;code&gt;version&lt;/code&gt; the attribute &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/custom-extensions/camunda-attributes/#caseversion&#34;&gt;camunda:caseVersion&lt;/a&gt; is required, see &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/custom-extensions/camunda-attributes/#casebinding&#34;&gt;Case Binding&lt;/a&gt; for more information.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;CMMN 1.1 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/tasks/case-task/&#34;&gt;Case Task&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;casetenantid&#34;&gt;caseTenantId&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The attribute specifies the tenant id of the case definition which is to be resolved by a case task, see &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/tasks/case-task/#case-tenant-id&#34;&gt;Case Tenant Id&lt;/a&gt; for more information.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.String&lt;/code&gt; or &lt;code&gt;org.camunda.bpm.engine.delegate.Expression&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      A concrete tenant id or an expression which evaluates to a &lt;code&gt;java.lang.String&lt;/code&gt; e.g., &lt;code&gt;${caseExecution.tenantId}&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;CMMN 1.1 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/tasks/case-task/&#34;&gt;Case Task&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;caseversion&#34;&gt;caseVersion&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      This attribute &lt;strong&gt;explicitly&lt;/strong&gt; defines which case definition version should be called inside the case task.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.Integer&lt;/code&gt; or &lt;code&gt;org.camunda.bpm.engine.delegate.Expression&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      All deployed version numbers of the case definition to call or an expression which evaluates to a &lt;code&gt;java.lang.Integer&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;CMMN 1.1 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/tasks/case-task/&#34;&gt;Case Task&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;class&#34;&gt;class&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The attribute specifies which Java class will be executed at runtime. The stated class must implement a &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/delegation-code/#java-delegate&#34;&gt;Java delegate&lt;/a&gt; interface.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.String&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      Fully qualified Java class name of a class which implements a &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/delegation-code/#java-delegate&#34;&gt;Java Delegate&lt;/a&gt; interface, e.g., &lt;code&gt;org.camunda.bpm.MyJavaDelegate&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;CMMN 1.1 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/custom-extensions/camunda-elements/#variablelistener&#34;&gt;camunda:variableListener&lt;/a&gt;,&#xA;      camunda:caseExecutionListener&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;decisionbinding&#34;&gt;decisionBinding&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      This attribute specifies which decision definition version should be evaluated inside the &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/tasks/decision-task/&#34;&gt;decision task&lt;/a&gt;.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.String&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;code&gt;latest&lt;/code&gt;, &lt;code&gt;deployment&lt;/code&gt;, &lt;code&gt;version&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Constraints&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      If the value is set to &lt;code&gt;version&lt;/code&gt; the attribute &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/custom-extensions/camunda-attributes/#decisionversion&#34;&gt;camunda:decisionVersion&lt;/a&gt; is required.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;latest&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;CMMN 1.1 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/tasks/decision-task/&#34;&gt;Decision Task&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;decisiontenantid&#34;&gt;decisionTenantId&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The attribute specifies the tenant id of the decision definition which is to be evaluated by a decision task, see &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/tasks/decision-task/#decision-tenant-id&#34;&gt;Decision Tenant Id&lt;/a&gt; for more information.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.String&lt;/code&gt; or &lt;code&gt;org.camunda.bpm.engine.delegate.Expression&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      A concrete tenant id or an expression which evaluates to a &lt;code&gt;java.lang.String&lt;/code&gt; e.g., &lt;code&gt;${caseExecution.tenantId}&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;CMMN 1.1 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/tasks/decision-task/&#34;&gt;Decision Task&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;decisionversion&#34;&gt;decisionVersion&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      This attribute &lt;strong&gt;explicitly&lt;/strong&gt; defines which decision definition version should be called inside the &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/tasks/decision-task/&#34;&gt;decision task&lt;/a&gt;.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.Integer&lt;/code&gt; or &lt;code&gt;org.camunda.bpm.engine.delegate.Expression&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      All deployed version numbers of the decision definition to call or an expression which evaluates to a &lt;code&gt;java.lang.Integer&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;CMMN 1.1 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/tasks/decision-task/&#34;&gt;Decision Task&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;delegateexpression&#34;&gt;delegateExpression&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The attribute allows specification of an expression which must resolve to an object that implements the corresponding interface (see &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/delegation-code/&#34;&gt;delegation code&lt;/a&gt;).&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;org.camunda.bpm.engine.delegate.Expression&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      Expression which evaluates to a Java class implementing a &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/delegation-code/&#34;&gt;delegation&lt;/a&gt; interface, e.g., &lt;code&gt;${myVariableListener}&lt;/code&gt;.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;CMMN 1.1 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/custom-extensions/camunda-elements/#variablelistener&#34;&gt;camunda:variableListener&lt;/a&gt;,&#xA;      camunda:caseExecutionListener&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;duedate&#34;&gt;dueDate&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      This attribute specifies the initial due date of a &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/tasks/human-task/&#34;&gt;Human Task&lt;/a&gt; when it is created.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;org.camunda.bpm.engine.delegate.Expression&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      An expression which evaluates to a &lt;code&gt;java.util.Date&lt;/code&gt;, &lt;code&gt;java.util.String&lt;/code&gt; (&lt;a href=&#34;http://en.wikipedia.org/wiki/ISO_8601&#34;&gt;ISO 8601&lt;/a&gt; formatted) or &lt;code&gt;null&lt;/code&gt;, e.g., &lt;code&gt;${dueDate}&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;CMMN 1.1 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/tasks/human-task/&#34;&gt;Human Task&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;expression&#34;&gt;expression&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The attribute defines an expression which will be evaluated at runtime.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;org.camunda.bpm.engine.delegate.Expression&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      Expression, e.g., &lt;code&gt;${gender == &#39;male&#39; ? &#39;Mr.&#39; : &#39;Mrs.&#39;}&lt;/code&gt; or &lt;code&gt;#{printer.printMessage()}&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;CMMN 1.1 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/custom-extensions/camunda-elements/#variablelistener&#34;&gt;camunda:variableListener&lt;/a&gt;,&#xA;      camunda:caseExecutionListener&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;formkey&#34;&gt;formKey&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      This attribute specifies a form resource. See &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/task-forms/&#34;&gt;task forms&lt;/a&gt; for more information.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.String&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      A &lt;code&gt;java.lang.String&lt;/code&gt; of a form resource which can be evaluated by the &lt;a href=&#34;/manual/1.0/manual/1.0/webapps/tasklist/&#34;&gt;Tasklist&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;CMMN 1.1 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/tasks/human-task/&#34;&gt;Human Task&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;historytimetolive&#34;&gt;historyTimeToLive&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The attribute specifies the history time to live (in days) for the case definition. It is used within &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/history/history-cleanup/&#34;&gt;History cleanup&lt;/a&gt;.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.Integer or java.lang.String&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      Any non-negative integer number or string containing a time in days defined by the ISO-8601 date format.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;null - means that case definition history won&#39;t ever be removed during history cleanup run&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;CMMN 1.1 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      Case&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;mapdecisionresult&#34;&gt;mapDecisionResult&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The attribute references which &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/decisions/bpmn-cmmn/#predefined-mapping-of-the-decision-result&#34;&gt;built-in Decision Result Mapper&lt;/a&gt; is used to pass the result of an evaluated decision to a case variable. It should be used in combination with &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/custom-extensions/camunda-attributes/#resultvariable&#34;&gt;camunda:resultVariable&lt;/a&gt;.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.String&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      singleEntry, singleResult, collectEntries, resultList&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;resultList&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;CMMN 1.1 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/tasks/decision-task/&#34;&gt;Decision Task&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;priority&#34;&gt;priority&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      This attribute specifies the initial priority of a &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/tasks/human-task/&#34;&gt;Human Task&lt;/a&gt; when it is created.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;org.camunda.bpm.engine.delegate.Expression&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      An expression which evaluates to a &lt;code&gt;java.lang.Number&lt;/code&gt; or a &lt;code&gt;java.lang.String&lt;/code&gt; which represents a number or &lt;code&gt;null&lt;/code&gt;, e.g., &lt;code&gt;${priority}&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;CMMN 1.1 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/tasks/human-task/&#34;&gt;Human Task&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;processbinding&#34;&gt;processBinding&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      This attribute specifies which process definition version should be called inside the process task.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.String&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;code&gt;latest&lt;/code&gt;, &lt;code&gt;deployment&lt;/code&gt;, &lt;code&gt;version&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Constraints&lt;/th&gt;&#xA;    &lt;td colspan=&#34;2&#34;&gt;&#xA;      If the value is set to &lt;code&gt;version&lt;/code&gt; the attribute &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/custom-extensions/camunda-attributes/#processversion&#34;&gt;camunda:processVersion&lt;/a&gt; is required, see &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/custom-extensions/camunda-attributes/#processbinding&#34;&gt;Process Binding&lt;/a&gt; for more information.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;CMMN 1.1 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/tasks/process-task/&#34;&gt;Process Task&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;processtenantid&#34;&gt;processTenantId&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The attribute specifies the tenant id of the process definition which is to be resolved by a process task, see &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/tasks/process-task/#process-tenant-id&#34;&gt;Process Tenant Id&lt;/a&gt; for more information.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.String&lt;/code&gt; or &lt;code&gt;org.camunda.bpm.engine.delegate.Expression&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      A concrete tenant id or an expression which evaluates to a &lt;code&gt;java.lang.String&lt;/code&gt; e.g., &lt;code&gt;${caseExecution.tenantId}&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;CMMN 1.1 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/tasks/process-task/&#34;&gt;Process Task&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;processversion&#34;&gt;processVersion&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      This attribute &lt;strong&gt;explicitly&lt;/strong&gt; defines which process definition version should be called inside the process task.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.Integer&lt;/code&gt; or &lt;code&gt;org.camunda.bpm.engine.delegate.Expression&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      All deployed version numbers of the process definition to call or an expression which evaluates to a &lt;code&gt;java.lang.Integer&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;CMMN 1.1 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/tasks/process-task/&#34;&gt;Process Task&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;repeatonstandardevent&#34;&gt;repeatOnStandardEvent&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The attribute specifies a transition in which the repetition rule of a stage or task is evaluated.&#xA;      &lt;br&gt;&#xA;      &lt;br&gt;&#xA;      Note that this attribute is omitted when the stage or task to repeat has at least one entry criterion.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.String&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;code&gt;create&lt;/code&gt;, &lt;code&gt;enable&lt;/code&gt;, &lt;code&gt;disable&lt;/code&gt;, &lt;code&gt;reenable&lt;/code&gt;, &lt;code&gt;manualStart&lt;/code&gt;, &lt;code&gt;start&lt;/code&gt;, &lt;code&gt;complete&lt;/code&gt;, &lt;code&gt;exit&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;complete&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;CMMN 1.1 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/markers/repetition-rule/&#34;&gt;Repetition Rule&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;resource&#34;&gt;resource&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The attribute specifies an external resource. The resource can be part of the deployment or&#xA;      exists in the classpath. To specify the type of resource, a URL scheme like prefix&#xA;      &lt;code&gt;deployment://&lt;/code&gt; resp. &lt;code&gt;classpath://&lt;/code&gt; can be supplied. If the scheme is&#xA;      omitted, it is assumed that the resource exists in the classpath.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.String&lt;/code&gt; or &lt;code&gt;org.camunda.bpm.engine.delegate.Expression&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The path to a resource or an expression which returns the path. Optional the path can&#xA;      start with an URL like scheme &lt;code&gt;classpath://&lt;/code&gt; or &lt;code&gt;deployment://&lt;/code&gt; to&#xA;      specify where to find the resource. If omitted the resource is assumed to exists in the&#xA;      classpath.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;CMMN 1.1 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/custom-extensions/camunda-elements/#variablelistener&#34;&gt;camunda:variableListener&lt;/a&gt;,&#xA;      camunda:caseExecutionListener&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;resultvariable&#34;&gt;resultVariable&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The attribute specifies the case variable in which the returned decision result is saved. It can be used in combination with &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/custom-extensions/camunda-attributes/#mapdecisionresult&#34;&gt;camunda:mapDecisionResult&lt;/a&gt; to define a decision result mapping.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.String&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The name of a case variable to save the return value&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&amp;ndash;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;CMMN 1.1 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/tasks/decision-task/&#34;&gt;Decision Task&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;variablename&#34;&gt;variableName&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The variable name that is attached to element &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/custom-extensions/camunda-elements/#variableonpart&#34;&gt;camunda:variableOnPart&lt;/a&gt; for which the sentry listens. Sentry is evaluated when the variable event transition occurs.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.String&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Camunda extension element&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/custom-extensions/camunda-elements/#variableonpart&#34;&gt;camunda:variableOnPart&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;</description>
    </item>
    <item>
      <title>Extension Attributes</title>
      <link>/manual/1.0/reference/dmn/custom-extensions/camunda-attributes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/dmn/custom-extensions/camunda-attributes/</guid>
      <description>&lt;p&gt;The following attributes are extension attributes for the &lt;code&gt;camunda&lt;/code&gt; namespace &lt;code&gt;http://camunda.org/schema/1.0/dmn&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;h1 id=&#34;historytimetolive&#34;&gt;historyTimeToLive&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The attribute specifies the history time to live (in days) for the decision definition. It is used within &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/history/history-cleanup/&#34;&gt;History cleanup&lt;/a&gt;.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.Integer or java.lang.String&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      Any non-negative integer number or string containing a time in days defined by the ISO-8601 date format.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;null - means that decision definition history won&#39;t ever be removed during history cleanup run&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;DMN 1.3 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      Decision&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;inputvariable&#34;&gt;inputVariable&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      This attribute specifies the variable name which can be used to access the result&#xA;      of the input expression in an input entry expression.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Type&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;java.lang.String&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Possible Values&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The name of the variable as &lt;code&gt;java.lang.String&lt;/code&gt;.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Default Value&lt;/th&gt;&#xA;    &lt;td&gt;&lt;code&gt;cellInput&lt;/code&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;DMN 1.3 Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/dmn/decision-table/input/&#34;&gt;Input&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;versiontag&#34;&gt;versionTag&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;p&gt;&#xA;      The attribute specifies a version tag for the decision definition.&#xA;      &lt;/p&gt;</description>
    </item>
    <item>
      <title>FEEL Engine Custom Functions</title>
      <link>/manual/1.0/user-guide/dmn-engine/feel/custom-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/dmn-engine/feel/custom-functions/</guid>
      <description>&lt;p&gt;CIB seven provides a wrapper for the FEEL Scala Engine to implement Custom Functions, which can be&#xA;called in expressions and unary tests.&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;note bg-warning docs-warning&#34;&gt;&#xA;  &lt;h3&gt;Custom Function Behavior&lt;/h3&gt;&#xA;  &lt;p&gt;Please note that the Custom Function Mechanism of the Standalone FEEL Scala Engine might behave differently.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;You can add Custom Functions to the Process Engine (or the Standalone DMN Engine) only programmatically&#xA;through a &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/process-engine-plugins/&#34;&gt;Process Engine Plugin&lt;/a&gt;. Read more about it in the section about how to&#xA;&lt;a href=&#34;#register-custom-function-providers&#34;&gt;Register Custom Function Providers&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>FEEL Language Elements</title>
      <link>/manual/1.0/reference/dmn/feel/legacy/language-elements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/dmn/feel/legacy/language-elements/</guid>
      <description>&lt;div class=&#34;note bg-info docs-info&#34;&gt;&#xA;  &lt;h3&gt;Heads Up!&lt;/h3&gt;&#xA;  &lt;p&gt;This page provides information on the legacy FEEL Engine, that was used before the&#xA;current &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/dmn-engine/feel/&#34;&gt;Scala-based FEEL Engine&lt;/a&gt;&#xA;was integrated into CIB seven.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;The Camunda DMN engine supports FEEL for &lt;a href=&#34;/manual/1.0/manual/1.0/reference/dmn/decision-table/rule/#input-entry-condition&#34;&gt;input entries&lt;/a&gt;. The FEEL term for&#xA;expression in input entries are simple unary tests. These simple unary tests&#xA;test an input value against an expression and return either &lt;code&gt;true&lt;/code&gt; if the test&#xA;is satisfied or &lt;code&gt;false&lt;/code&gt; otherwise. The expression can contain different&#xA;elements which are described in this sections.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Group Management</title>
      <link>/manual/1.0/webapps/admin/group-management/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/webapps/admin/group-management/</guid>
      <description>&lt;h1 id=&#34;groups-menu&#34;&gt;Groups Menu&lt;/h1&gt;&#xA;&lt;figure class=&#34;image&#34;&gt;&#xA;  &lt;span&gt;&lt;img&#xA;      src=&#34;../img/admin-groups.png&#34;&#xA;      &#xA;          title=&#34;Groups Menu&#34;&#xA;       /&gt;&lt;/span&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;The Groups menu allows you to add, edit and delete user groups. Besides that you can view the members of groups&lt;/p&gt;</description>
    </item>
    <item>
      <title>HTTP Header Security</title>
      <link>/manual/1.0/webapps/shared-options/header-security/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/webapps/shared-options/header-security/</guid>
      <description>&lt;p&gt;The HTTP Header Security mechanism allows you to add security-related response headers which enable browser-side security mechanisms.&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-are-the-headers-supposed-to-be&#34;&gt;What are the headers supposed to be?&lt;/h2&gt;&#xA;&lt;p&gt;This section briefly describes the purpose of the headers. You can find more information about the&#xA;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-XSS-Protection&#34;&gt;XSS Protection&lt;/a&gt;,&#xA;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy&#34;&gt;Content Security Policy&lt;/a&gt;,&#xA;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Content-Type-Options&#34;&gt;Content-Type Options&lt;/a&gt;&lt;br&gt;&#xA;as well as &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security&#34;&gt;Strict Transport Security&lt;/a&gt;&#xA;header in Mozilla’s Developer Guide.&lt;/p&gt;&#xA;&lt;h3 id=&#34;xss-protection&#34;&gt;XSS Protection&lt;/h3&gt;&#xA;&lt;p&gt;If the &lt;strong&gt;XSS Protection&lt;/strong&gt; header is enabled some cross-site scripting (XSS) attacks are detected, and the malicious parts of the page are either sanitized, or the rendering of the page is blocked entirely.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Implemented Standards</title>
      <link>/manual/1.0/introduction/implemented-standards/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/introduction/implemented-standards/</guid>
      <description>&lt;p&gt;Camunda implements three different standards in the Business Process Management scope: BPMN 2.0, CMMN 1.1 and DMN 1.3.&#xA;These three standards are defined by the &lt;a href=&#34;http://www.omg.org/&#34;&gt;Object Management Group&lt;/a&gt; with active collaboration of Camunda.&lt;/p&gt;&#xA;&lt;p&gt;Camunda provides open source implementations of execution.&lt;/p&gt;&#xA;&lt;h1 id=&#34;bpmn&#34;&gt;BPMN&lt;/h1&gt;&#xA;&lt;p&gt;Business Process Model and Notation (BPMN) is a standard for Workflow and Process Automation.&#xA;Camunda supports the 2.0 version of BPMN.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Getting started implementing BPMN Processes: &lt;a href=&#34;/manual/1.0/get-started/quick-start/&#34;&gt;Quick Start (Java / JS)&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Getting to Know BPMN as a Modeling Language: &lt;a href=&#34;https://camunda.org/bpmn/tutorial/&#34;&gt;BPMN Modeling Tutorial&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Modeling BPMN: &lt;a href=&#34;https://camunda.org/bpmn/reference/&#34;&gt;BPMN Modeling Reference&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Implementing BPMN Processes: &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/&#34;&gt;BPMN Implementation Reference&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Executing BPMN: &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/&#34;&gt;Process Engine&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;cmmn&#34;&gt;CMMN&lt;/h1&gt;&#xA;&lt;p&gt;Case Management Model and Notation (CMMN) is a standard for Case Management.&#xA;Camunda supports the 1.1 version of CMMN.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Install the Full Distribution on a JBoss EAP/WildFly Application Server manually </title>
      <link>/manual/1.0/installation/full/jboss/manual/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/installation/full/jboss/manual/</guid>
      <description>&lt;p&gt;This document describes the installation of CIB seven and its components on a vanilla &lt;a href=&#34;http://www.wildfly.org&#34;&gt;WildFly Application Server&lt;/a&gt; or JBoss EAP 7 / 8.&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;note bg-info docs-info&#34;&gt;&#xA;  &lt;h3&gt;Reading this Guide&lt;/h3&gt;&#xA;  &lt;p&gt;&lt;p&gt;This guide uses a number of variables to denote common path names and constants:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;$WILDFLY_HOME&lt;/code&gt; points to the JBoss EAP/WildFly application server main directory.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;$WILDFLY_VERSION&lt;/code&gt; denotes the version of WildFly application server.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;$WILDFLY_DISTRIBUTION&lt;/code&gt; represents the downloaded pre-packaged CIB seven distribution for WildFly, e.g. &lt;code&gt;camunda-bpm-wildfly-$PLATFORM_VERSION.zip&lt;/code&gt; or &lt;code&gt;camunda-bpm-wildfly-$PLATFORM_VERSION.tar.gz&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;$PLATFORM_VERSION&lt;/code&gt; denotes the version of CIB seven you want to install or already have installed, e.g. &lt;code&gt;7.0.0&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Install the Full Distribution on a Tomcat Application Server manually</title>
      <link>/manual/1.0/installation/full/tomcat/manual/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/installation/full/tomcat/manual/</guid>
      <description>&lt;p&gt;This section describes how you can install CIB seven and its components on a vanilla &lt;a href=&#34;http://tomcat.apache.org/&#34;&gt;Apache Tomcat&lt;/a&gt;, if you are not able to use the pre-packaged Tomcat distribution. In addition, download a &lt;a href=&#34;https://cibseven.de/download/&#34;&gt;Tomcat distribution&lt;/a&gt; to fetch the required CIB seven modules.&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;note bg-info docs-info&#34;&gt;&#xA;  &lt;h3&gt;Reading the Guide&lt;/h3&gt;&#xA;  &lt;p&gt;&lt;p&gt;Throughout this guide we will use a number of variables to denote common path names and constants:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;$TOMCAT_HOME&lt;/code&gt; points to the main directory of the tomcat server.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;$TOMCAT_VERSION&lt;/code&gt; denotes the version of Tomcat server.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;$PLATFORM_VERSION&lt;/code&gt; denotes the version of CIB seven you want to install or already have installed, e.g. &lt;code&gt;7.0.0&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;$TOMCAT_DISTRIBUTION&lt;/code&gt; represents the downloaded pre-packaged CIB seven distribution for Tomcat, e.g. &lt;code&gt;camunda-bpm-tomcat-$PLATFORM_VERSION.zip&lt;/code&gt; or &lt;code&gt;camunda-bpm-tomcat-$PLATFORM_VERSION.tar.gz&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>JNDI Bindings for CIB seven Services</title>
      <link>/manual/1.0/user-guide/runtime-container-integration/jndi-bindings-for-bpmn-platform-services/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/runtime-container-integration/jndi-bindings-for-bpmn-platform-services/</guid>
      <description>&lt;p&gt;The CIB seven Services (i.e., Process Engine Service and Process Application Service) are provided via JNDI Bindings with the following JNDI names:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Process Engine Service: &lt;code&gt;java:global/camunda-bpm-platform/process-engine/ProcessEngineService!org.camunda.bpm.ProcessEngineService&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Process Application Service: &lt;code&gt;java:global/camunda-bpm-platform/process-engine/ProcessApplicationService!org.camunda.bpm.ProcessApplicationService&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;On JBoss EAP and WildFly, you are able to get any of these CIB seven Services through a JNDI lookup.&#xA;However, on Apache Tomcat you have to do quite a bit more to be able to do a lookup to get one of these CIB seven Services.&lt;/p&gt;</description>
    </item>
    <item>
      <title>JTA Transaction Integration</title>
      <link>/manual/1.0/user-guide/cdi-java-ee-integration/jta-transaction-integration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/cdi-java-ee-integration/jta-transaction-integration/</guid>
      <description>&lt;h2 id=&#34;embedded-process-engine&#34;&gt;Embedded Process Engine&lt;/h2&gt;&#xA;&lt;p&gt;The process engine transaction management can integrate with JTA and Jakarta Transactions.&#xA;To use transaction manager integration, you need to use the&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;org.camunda.bpm.engine.impl.cfg.JtaProcessEngineConfiguration&lt;/code&gt; for JTA integration only.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;org.camunda.bpm.engine.impl.cfg.JakartaTransactionProcessEngineConfiguration&lt;/code&gt; for Jakarta Transactions integration only.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;org.camunda.bpm.engine.cdi.CdiJtaProcessEngineConfiguration&lt;/code&gt; for additional CDI expression resolution support.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;The process engine requires access to an implementation of &lt;code&gt;javax.transaction.TransactionManager&lt;/code&gt; or &lt;code&gt;jakarta.transaction.TransactionManager&lt;/code&gt; respectively.&#xA;Not all application servers provide such an implementation. Most notably, IBM WebSphere and Oracle WebLogic historically did not provide this  implementation.&#xA;To achieve JTA transaction integration on these containers, users should use the Spring Framework Abstraction and configure the process engine using the&#xA;&lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/spring-framework-integration/&#34;&gt;SpringProcessEngineConfiguration&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Manipulating XML</title>
      <link>/manual/1.0/reference/spin/xml/02-manipulating-xml/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/spin/xml/02-manipulating-xml/</guid>
      <description>&lt;p&gt;The XML data type supports manipulation of XML attributes and child elements.&lt;/p&gt;&#xA;&lt;h1 id=&#34;attributes&#34;&gt;Attributes&lt;/h1&gt;&#xA;&lt;h2 id=&#34;checking-for-attributes-in-xml&#34;&gt;Checking for Attributes in XML&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import static&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;org.camunda.spin.Spin.XML&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xml&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;lt;order xmlns:cam=\&amp;#34;http://camunda.org/example\&amp;#34; id=\&amp;#34;order1\&amp;#34; cam:name=\&amp;#34;name\&amp;#34; /&amp;gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;boolean&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hasAttr&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;XML&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xml&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;hasAttr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;assertTrue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hasAttr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hasAttr&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;XML&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xml&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;hasAttrNs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://camunda.org/example&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;assertTrue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hasAttr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;reading-attributes-from-xml&#34;&gt;Reading Attributes from XML&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import static&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;org.camunda.spin.Spin.XML&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SpinXmlDomAttribute&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;attribute&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;XML&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;lt;order id=\&amp;#34;order1\&amp;#34; /&amp;gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;attr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;XML&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;lt;order id=\&amp;#34;order1\&amp;#34; /&amp;gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;attr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;attr&lt;/code&gt; method returns a wrapper of the XML attribute and with &lt;code&gt;value&lt;/code&gt; the value of the attribute can be accessed.&lt;/p&gt;</description>
    </item>
    <item>
      <title>None Events</title>
      <link>/manual/1.0/reference/bpmn20/events/none-events/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/bpmn20/events/none-events/</guid>
      <description>&lt;p&gt;None events are unspecified events, also called &amp;lsquo;blank&amp;rsquo; events. For instance, a &amp;rsquo;none&amp;rsquo; start event technically means that the trigger for starting the process instance is unspecified. This means that the engine cannot anticipate when the process instance must be started. The none start event is used when the process instance is started through the API by calling one of the &lt;code&gt;startProcessInstanceBy...&lt;/code&gt; methods.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ProcessInstance&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;processInstance&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;runtimeService&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;startProcessInstanceByKey&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;invoice&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note: a subprocess must always have a none start event.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Plan Item Lifecycles</title>
      <link>/manual/1.0/reference/cmmn11/concepts/lifecycle/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/cmmn11/concepts/lifecycle/</guid>
      <description>&lt;p&gt;CMMN case instances and plan items go through a lifecycle of states during their execution. Depending on their state, different actions may be carried out to interact with them. Moreover, state transitions may automatically trigger changes in other plan items. The concrete lifecycle of a plan item depends on its plan item definition.&lt;/p&gt;&#xA;&lt;p&gt;The following descriptions cover the CMMN lifecycles as supported by the CIB seven engine. This is a subset of states and transitions that the CMMN standard defines. Any state or transition that is currently not supported is marked in grey.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Process Definition View</title>
      <link>/manual/1.0/webapps/cockpit/bpmn/process-definition-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/webapps/cockpit/bpmn/process-definition-view/</guid>
      <description>&lt;figure class=&#34;image&#34;&gt;&#xA;  &lt;span&gt;&lt;img&#xA;      src=&#34;../../img/cockpit-process-definitions-view.png&#34;&#xA;      &#xA;          title=&#34;Process Definition View&#34;&#xA;       /&gt;&lt;/span&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;The process definition view provides you with information about the definition and the status of a process. On the left side you can easily survey the versions of the process and how many instances of the versions are running. Incidents of all running process instances are displayed together with an instance counter label in the corresponding rendered diagram. So it is easy to locate &lt;a href=&#34;/manual/1.0/manual/1.0/webapps/cockpit/bpmn/failed-jobs/&#34;&gt;failed activities&lt;/a&gt; in the process. Use the mouse to navigate through the diagram. By pressing the CTRL key while turning the mouse wheel you can zoom in and out. Hold the left mouse button to pan the diagram in the desired direction. Furthermore, you can maximize the diagram view or the detailed information panel by clicking on, respectively, the &lt;button class=&#34;btn btn-xs&#34;&gt;&lt;i class=&#34;glyphicon glyphicon-resize-full&#34;&gt;&lt;/i&gt;&lt;/button&gt; button or the &lt;button class=&#34;btn btn-xs&#34;&gt;&lt;i class=&#34;glyphicon glyphicon-menu-up&#34;&gt;&lt;/i&gt;&lt;/button&gt; button, at the bottom left of the diagram view.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Process Engine API</title>
      <link>/manual/1.0/user-guide/process-engine/process-engine-api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/process-engine/process-engine-api/</guid>
      <description>&lt;h1 id=&#34;services-api&#34;&gt;Services API&lt;/h1&gt;&#xA;&lt;p&gt;The Java API is the most common way of interacting with the engine. The central starting point is the ProcessEngine, which can be created in several ways as described in the configuration section. From the ProcessEngine, you can obtain the various services that contain the workflow/BPM methods. ProcessEngine and the services objects are thread safe. So you can keep a reference to 1 of those for a whole server.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Process Engine Configuration</title>
      <link>/manual/1.0/user-guide/spring-boot-integration/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/spring-boot-integration/configuration/</guid>
      <description>&lt;p&gt;The auto starter uses the  &lt;code&gt;org.camunda.bpm.engine.impl.cfg.ProcessEnginePlugin&lt;/code&gt; mechanism to configure the engine.&lt;/p&gt;&#xA;&lt;p&gt;The configuration is divided into &lt;em&gt;sections&lt;/em&gt;. These &lt;em&gt;sections&lt;/em&gt; are represented by the marker interfaces:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;org.camunda.bpm.spring.boot.starter.configuration.CamundaProcessEngineConfiguration&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;org.camunda.bpm.spring.boot.starter.configuration.CamundaDatasourceConfiguration&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;org.camunda.bpm.spring.boot.starter.configuration.CamundaHistoryConfiguration&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;org.camunda.bpm.spring.boot.starter.configuration.CamundaHistoryLevelAutoHandlingConfiguration&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;org.camunda.bpm.spring.boot.starter.configuration.CamundaJobConfiguration&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;org.camunda.bpm.spring.boot.starter.configuration.CamundaDeploymentConfiguration&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;org.camunda.bpm.spring.boot.starter.configuration.CamundaAuthorizationConfiguration&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;org.camunda.bpm.spring.boot.starter.configuration.CamundaFailedJobConfiguration&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;org.camunda.bpm.spring.boot.starter.configuration.CamundaMetricsConfiguration&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;default-configurations&#34;&gt;Default Configurations&lt;/h2&gt;&#xA;&lt;p&gt;The following default and best practice configurations are provided by the starter and can be customized or overridden.&lt;/p&gt;&#xA;&lt;h3 id=&#34;defaultprocessengineconfiguration&#34;&gt;&lt;code&gt;DefaultProcessEngineConfiguration&lt;/code&gt;&lt;/h3&gt;&#xA;&lt;p&gt;Sets the process engine name and automatically adds all &lt;code&gt;ProcessEnginePlugin&lt;/code&gt; beans to the configuration.&lt;/p&gt;&#xA;&lt;h3 id=&#34;defaultdatasourceconfiguration&#34;&gt;&lt;code&gt;DefaultDatasourceConfiguration&lt;/code&gt;&lt;/h3&gt;&#xA;&lt;p&gt;Configures the Camunda data source and enables &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/spring-framework-integration/transactions/&#34;&gt;transaction integration&lt;/a&gt;. By default, the primary &lt;code&gt;DataSource&lt;/code&gt; and &lt;code&gt;PlatformTransactionManager&lt;/code&gt; beans are wired with the process engine configuration.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Process Task</title>
      <link>/manual/1.0/reference/cmmn11/tasks/process-task/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/cmmn11/tasks/process-task/</guid>
      <description>&lt;p&gt;A &lt;em&gt;process task&lt;/em&gt; can be used to invoke a BPMN 2.0 process from a case.&lt;/p&gt;&#xA;&lt;div class=&#34;cmmn-symbol&#34;&gt;&lt;img src=&#34;/manual/1.0/manual/1.0//img/short-codes/cmmn-process-task.png&#34; /&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;A process task is a regular task that requires an attribute &lt;code&gt;processRef&lt;/code&gt; which references a process definition by its key. Such a process task can be defined as follows:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;processTask&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;checkCreditProcess&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Check credit&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;processRef=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;checkCreditProcess&amp;#34;&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The referenced process definition is resolved at runtime. This means that the process can be deployed independently from the calling case, if needed.&lt;/p&gt;</description>
    </item>
    <item>
      <title>processes.xml</title>
      <link>/manual/1.0/reference/deployment-descriptors/descriptors/processes-xml/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/deployment-descriptors/descriptors/processes-xml/</guid>
      <description>&lt;p&gt;The &lt;code&gt;processes.xml&lt;/code&gt; file is deployed as part of a process application and is used for configuration of the deployment of BPMN 2.0 resource files. Additionally, it can be used to configure process engines which are started / stopped with the deployment of the application.&lt;/p&gt;&#xA;&lt;p&gt;See the &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-applications/the-processes-xml-deployment-descriptor/&#34;&gt;processes.xml&lt;/a&gt; section of the &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/&#34;&gt;User Guide&lt;/a&gt; for more details..&lt;/p&gt;&#xA;&lt;h1 id=&#34;xml-schema-namespace&#34;&gt;Xml Schema Namespace&lt;/h1&gt;&#xA;&lt;p&gt;The namespace for the processes.xml file is &lt;code&gt;http://www.camunda.org/schema/1.0/ProcessApplication&lt;/code&gt;. The XSD file can be found in the &lt;code&gt;camunda-engine.jar&lt;/code&gt; file.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Quarkus Extension Configuration</title>
      <link>/manual/1.0/user-guide/quarkus-integration/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/quarkus-integration/configuration/</guid>
      <description>&lt;p&gt;This section of the Camunda Quarkus extension documentation covers the configuration options for the process engine&#xA;within a Quarkus application.&lt;/p&gt;&#xA;&lt;p&gt;The documentation on the Camunda Quarkus Extension Configuration is intended for Quarkus application developers. It&#xA;requires some knowledge on &lt;a href=&#34;https://quarkus.io/guides/cdi-reference&#34;&gt;Quarkus CDI support&lt;/a&gt;, &lt;a href=&#34;https://quarkus.io/guides/config-reference&#34;&gt;Quarkus configuration&lt;/a&gt;, as well as&#xA;Camunda Process Engine Configuration properties.&lt;/p&gt;&#xA;&lt;h2 id=&#34;process-engine-configuration&#34;&gt;Process Engine Configuration&lt;/h2&gt;&#xA;&lt;p&gt;An instance of the &lt;code&gt;QuarkusProcessEngineConfiguration&lt;/code&gt; class configures the process engine in a Quarkus application.&#xA;A &lt;code&gt;QuarkusProcessEngineConfiguration&lt;/code&gt; instance provides the following defaults:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Required Rule</title>
      <link>/manual/1.0/reference/cmmn11/markers/required-rule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/cmmn11/markers/required-rule/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Can be used with&lt;/strong&gt;: &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/tasks/&#34;&gt;Task&lt;/a&gt;, &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/grouping-tasks/stage/&#34;&gt;Stage&lt;/a&gt; and &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/milestone/&#34;&gt;Milestone&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;cmmn-symbol&#34;&gt;&lt;img src=&#34;/manual/1.0/manual/1.0//img/short-codes/cmmn-marker-required.png&#34; /&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;A plan item may be &lt;em&gt;required&lt;/em&gt;, meaning that it has to reach an end-like state before the containing stage can complete. Whether a plan item is required can be specified by a &lt;em&gt;required rule&lt;/em&gt;.&lt;/p&gt;&#xA;&lt;p&gt;This rule is evaluated when the milestone, stage or task is instantiated and transitions to the state &lt;code&gt;AVAILABLE&lt;/code&gt;, and its result value of type &lt;code&gt;boolean&lt;/code&gt; is maintained throughout the remainder of the case instance. If this rule evaluates to &lt;code&gt;true&lt;/code&gt;, the plan item&amp;rsquo;s parent stage instance must not transition to &lt;code&gt;COMPLETED&lt;/code&gt; state unless the plan item is in the &lt;code&gt;COMPLETED&lt;/code&gt;, &lt;code&gt;TERMINATED&lt;/code&gt; or &lt;code&gt;DISABLED&lt;/code&gt; state. For example, a task that has not yet been worked on, i.e., is in state &lt;code&gt;ENABLED&lt;/code&gt;, prevents its containing stage to complete. If the rule is not present, then it is considered to be &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Resource Deployments</title>
      <link>/manual/1.0/user-guide/quarkus-integration/deployments/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/quarkus-integration/deployments/</guid>
      <description>&lt;p&gt;This section documents how to perform process engine deployments with a Quarkus application containing an embedded&#xA;process engine. The documentation assumes some familiarity with &lt;a href=&#34;https://quarkus.io/guides/cdi-reference&#34;&gt;Quarkus CDI support&lt;/a&gt; and the Camunda&#xA;&lt;a href=&#34;/manual/1.0/javadoc/cibseven/1.0/org/camunda/bpm/engine/repository/DeploymentBuilder.html&#34;&gt;DeploymentBuilder&lt;/a&gt;&#xA; API.&lt;/p&gt;&#xA;&lt;p&gt;The CIB seven engine Quarkus Extension only supports programmatic deployments. A user can observe for the&#xA;&lt;code&gt;CamundaEngineStartupEvent&lt;/code&gt; CDI event. The &lt;code&gt;CamundaEngineStartupEvent&lt;/code&gt; signals that a process engine has been&#xA;successfully bootstrapped, and a deployment can be performed.&lt;/p&gt;&#xA;&lt;p&gt;The following example shows how a single process engine deployment can be performed in a Quarkus application:&lt;/p&gt;</description>
    </item>
    <item>
      <title>REST API specification</title>
      <link>/manual/1.0/reference/rest/specification/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/rest/specification/</guid>
      <description>&lt;p&gt;On production, this should redirect to the following page:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.cibseven.de/rest/cibseven/1.0/&#34;&gt;https://docs.cibseven.de/rest/cibseven/1.0/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Or to this page in case you are viewing the docs of the &lt;code&gt;master&lt;/code&gt; or &lt;code&gt;latest&lt;/code&gt; branch:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.cibseven.de/rest/cibseven/1.0-SNAPSHOT/&#34;&gt;https://docs.cibseven.de/rest/cibseven/1.0-SNAPSHOT/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Rolling Update</title>
      <link>/manual/1.0/update/rolling-update/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/update/rolling-update/</guid>
      <description>&lt;div class=&#34;note bg-warning docs-warning&#34;&gt;&#xA;  &lt;h3&gt;Limits for Rolling Updates&lt;/h3&gt;&#xA;  &lt;p&gt;&lt;p&gt;Rolling updates are not possible prior to Version &lt;code&gt;7.5&lt;/code&gt;. Or in other words: the first update that can be done in the way described on this page is the update from version &lt;code&gt;7.5.x&lt;/code&gt; to &lt;code&gt;7.6.y&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Also note that it is only possible to update from one minor version to the next. For example, it is possible to update from &lt;code&gt;7.5.3&lt;/code&gt; to &lt;code&gt;7.6.2&lt;/code&gt; in a rolling fashion but it is not possible to update from &lt;code&gt;7.5.3&lt;/code&gt; to &lt;code&gt;7.7.2&lt;/code&gt; in one go.&#xA;Before the rolling update from one minor to another can be executed, the latest patch, of the current used minor version, must be applied to all nodes before proceeding to the next minor version.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Run CIB seven using Docker</title>
      <link>/manual/1.0/installation/docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/installation/docker/</guid>
      <description>&lt;p&gt;Docker images can be found on &lt;a href=&#34;https://github.com/cibseven/cibseven-docker&#34;&gt;GitHub&lt;/a&gt; and &lt;a href=&#34;https://hub.docker.com/r/cibseven/cibseven/&#34;&gt;Docker Hub&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Please note that by default the Apache Tomcat distribution is used. For a guide on how to use one of the other distributions, see the &lt;a href=&#34;https://github.com/cibseven/cibseven-docker/#supported-tagsreleases&#34;&gt;tag schema&lt;/a&gt;.&#xA;For example, tags like &lt;code&gt;1.0&lt;/code&gt; or &lt;code&gt;latest&lt;/code&gt; without explicit distribution mark are delivering Tomcat version of CIB seven.&lt;/p&gt;&#xA;&lt;h1 id=&#34;start-cib-seven-run-using-docker&#34;&gt;Start CIB seven Run using Docker&lt;/h1&gt;&#xA;&lt;p&gt;To start &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/cibseven-run/&#34;&gt;CIB seven Run&lt;/a&gt; execute the following commands:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker pull cibseven/cibseven:run-latest&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker run -d --name cibseven -p 8080:8080 cibseven/cibseven:run-latest&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;or following command to use explicit version 1.0:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Send Task</title>
      <link>/manual/1.0/reference/bpmn20/tasks/send-task/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/bpmn20/tasks/send-task/</guid>
      <description>&lt;p&gt;A Send Task is used to send a message. In Camunda this is done by calling Java code.&lt;/p&gt;&#xA;&lt;p&gt;The Send Task has the same behavior as a Service Task.&lt;/p&gt;&#xA;&lt;div class=&#34;bpmn-symbol&#34;&gt;&lt;img src=&#34;/manual/1.0/manual/1.0//img/short-codes/bpmn-send-task.png&#34; /&gt;&lt;/div&gt;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;sendTask&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;sendTask&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;camunda:class=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;org.camunda.bpm.MySendTaskDelegate&amp;#34;&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;camunda-extensions&#34;&gt;Camunda Extensions&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Attributes&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-attributes/#asyncbefore&#34;&gt;camunda:asyncBefore&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-attributes/#asyncafter&#34;&gt;camunda:asyncAfter&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-attributes/#class&#34;&gt;camunda:class&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-attributes/#delegateexpression&#34;&gt;camunda:delegateExpression&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-attributes/#exclusive&#34;&gt;camunda:exclusive&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-attributes/#expression&#34;&gt;camunda:expression&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-attributes/#jobpriority&#34;&gt;camunda:jobPriority&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-attributes/#resultvariable&#34;&gt;camunda:resultVariable&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-attributes/#topic&#34;&gt;camunda:topic&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-attributes/#type&#34;&gt;camunda:type&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-attributes/#taskpriority&#34;&gt;camunda:taskPriority&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Extension Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#failedjobretrytimecycle&#34;&gt;camunda:failedJobRetryTimeCycle&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#field&#34;&gt;camunda:field&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#connector&#34;&gt;camunda:connector&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#inputoutput&#34;&gt;camunda:inputOutput&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Constraints&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      One of the attributes &lt;code&gt;camunda:class&lt;/code&gt;, &lt;code&gt;camunda:delegateExpression&lt;/code&gt;,&#xA;      &lt;code&gt;camunda:type&lt;/code&gt; or &lt;code&gt;camunda:expression&lt;/code&gt; is mandatory&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      The attribute &lt;code&gt;camunda:resultVariable&lt;/code&gt; can only be used in combination with the&#xA;      &lt;code&gt;camunda:expression&lt;/code&gt; attribute&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      The &lt;code&gt;camunda:exclusive&lt;/code&gt; attribute is only evaluated if the attribute&#xA;      &lt;code&gt;camunda:asyncBefore&lt;/code&gt; or &lt;code&gt;camunda:asyncAfter&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      The attribute &lt;code&gt;camunda:topic&lt;/code&gt; can only be used when the &lt;code&gt;camunda:type&lt;/code&gt; attribute is set to &lt;code&gt;external&lt;/code&gt;.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;      The attribute &lt;code&gt;camunda:taskPriority&lt;/code&gt; can only be used when the &lt;code&gt;camunda:type&lt;/code&gt; attribute is set to &lt;code&gt;external&lt;/code&gt;.&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;</description>
    </item>
    <item>
      <title>SOAP Connector</title>
      <link>/manual/1.0/reference/connect/soap-connector/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/connect/soap-connector/</guid>
      <description>&lt;p&gt;In Camunda Connect a &lt;code&gt;Connectors&lt;/code&gt; class exists which automatically detects&#xA;every connector in the classpath. It can be used to get the SOAP connector&#xA;instance by its connector ID, which is &lt;code&gt;soap-http-connector&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;SoapHttpConnector&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;soap&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Connectors&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getConnector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SoapHttpConnector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;ID&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The SOAP connector extends the Camunda Connect HTTP connector which uses&#xA;the Apache HTTP client in the default implementation. To read about default and custom client configuration,&#xA;please see the corresponding section in the &lt;a href=&#34;/manual/1.0/manual/1.0/reference/connect/http-connector/&#34;&gt;HTTP connector docs&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Spring Transaction Integration</title>
      <link>/manual/1.0/user-guide/spring-framework-integration/transactions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/spring-framework-integration/transactions/</guid>
      <description>&lt;h1 id=&#34;transaction-integration-by-example&#34;&gt;Transaction Integration by Example&lt;/h1&gt;&#xA;&lt;p&gt;The following explains the &lt;a href=&#34;https://github.com/camunda/camunda-bpm-platform/blob/7.22.0-cibseven/engine-spring/core/src/test/java/org/camunda/bpm/engine/spring/test/transaction/SpringTransactionIntegrationTest.java&#34;&gt;SpringTransactionIntegrationTest&lt;/a&gt; of the core codebase step by step. Below is the Spring configuration file that we use in this example (you can find it in &lt;a href=&#34;https://github.com/cibseven/cibseven/blob/7.22.0-cibseven/engine-spring/core/src/test/resources/org/camunda/bpm/engine/spring/test/transaction/SpringTransactionIntegrationTest-context.xml&#34;&gt;SpringTransactionIntegrationTest-context.xml&lt;/a&gt;). The section shown below contains the &lt;code&gt;dataSource&lt;/code&gt;, &lt;code&gt;transactionManager&lt;/code&gt;, &lt;code&gt;processEngine&lt;/code&gt; and the process engine services.&lt;/p&gt;&#xA;&lt;p&gt;When passing the DataSource to the &lt;code&gt;SpringProcessEngineConfiguration&lt;/code&gt; (using property &amp;ldquo;dataSource&amp;rdquo;), the CIB seven engine uses a &lt;code&gt;org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy&lt;/code&gt; internally, which wraps the passed DataSource. This is done to make sure the SQL connections retrieved from the DataSource and the Spring transactions play well together. This implies that it&amp;rsquo;s no longer needed to proxy the dataSource yourself in Spring configuration, although it&amp;rsquo;s still allowed to pass a &lt;code&gt;TransactionAwareDataSourceProxy&lt;/code&gt; into the &lt;code&gt;SpringProcessEngineConfiguration&lt;/code&gt;. In this case no additional wrapping will occur.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tenant Management</title>
      <link>/manual/1.0/webapps/admin/tenant-management/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/webapps/admin/tenant-management/</guid>
      <description>&lt;h1 id=&#34;tenants-menu&#34;&gt;Tenants Menu&lt;/h1&gt;&#xA;&lt;figure class=&#34;image&#34;&gt;&#xA;  &lt;span&gt;&lt;img&#xA;      src=&#34;../img/admin-tenants.png&#34;&#xA;      &#xA;          title=&#34;Tenants Menu&#34;&#xA;       /&gt;&lt;/span&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;The Tenants menu allows you to add, edit and delete tenants. Besides that you can view which user or group is a&#xA;member of a tenant.&lt;/p&gt;&#xA;&lt;h2 id=&#34;create-a-new-tenant&#34;&gt;Create a new tenant&lt;/h2&gt;&#xA;&lt;p&gt;All you have to do to create a new tenant is:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Click the &lt;em&gt;Create new tenant&lt;/em&gt; button&lt;/li&gt;&#xA;&lt;li&gt;Type the &lt;em&gt;Tenant Id&lt;/em&gt; and &lt;em&gt;Tenant Name&lt;/em&gt; in the corresponding input fields&lt;/li&gt;&#xA;&lt;li&gt;Click the &lt;em&gt;Create new Tenant&lt;/em&gt; button&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;This creates a new tenant.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Textareas</title>
      <link>/manual/1.0/reference/forms/embedded-forms/controls/textarea/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/forms/embedded-forms/controls/textarea/</guid>
      <description>&lt;p&gt;Textareas are HTML &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; elements of the form&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;textarea&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;textarea&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;binding-a-textarea-to-a-process-variable&#34;&gt;Binding a Textarea to a Process Variable&lt;/h1&gt;&#xA;&lt;p&gt;A textarea input can be bound to a process variable using the &lt;code&gt;cam-variable-type&lt;/code&gt; and&#xA;&lt;code&gt;cam-variable-name&lt;/code&gt; directives:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;textarea&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;cam-variable-name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;CUSTOMER_ADDRESS&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;na&#34;&gt;cam-variable-type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;String&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;textarea&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In the example above, the textarea is bound to the variable named &lt;code&gt;CUSTOMER_ADDRESS&lt;/code&gt; of type&#xA;&lt;code&gt;String&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;h1 id=&#34;supported-variable-types-for-textareas&#34;&gt;Supported Variable Types for Textareas&lt;/h1&gt;&#xA;&lt;p&gt;The textarea supports the same variable types as the single line text input &lt;code&gt;&amp;lt;input type=&amp;quot;text&amp;quot;&amp;gt;&amp;lt;/input&amp;gt;&lt;/code&gt;. See the section on &lt;a href=&#34;/manual/1.0/manual/1.0/reference/forms/embedded-forms/controls/inputs/#supported-variable-types-for-text-inputs&#34;&gt;Supported Variable Types&lt;/a&gt; for details.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The processes.xml Deployment Descriptor</title>
      <link>/manual/1.0/user-guide/process-applications/the-processes-xml-deployment-descriptor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/process-applications/the-processes-xml-deployment-descriptor/</guid>
      <description>&lt;p&gt;The processes.xml deployment descriptor contains the deployment metadata for a process application. The following example is a simple example of a &lt;code&gt;processes.xml&lt;/code&gt; deployment descriptor:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;process-application&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;na&#34;&gt;xmlns=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://www.camunda.org/schema/1.0/ProcessApplication&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;na&#34;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;process-archive&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;loan-approval&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;process-engine&amp;gt;&lt;/span&gt;default&lt;span class=&#34;nt&#34;&gt;&amp;lt;/process-engine&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;properties&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;isDeleteUponUndeploy&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;false&lt;span class=&#34;nt&#34;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;isScanForProcessDefinitions&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;true&lt;span class=&#34;nt&#34;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/properties&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;/process-archive&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/process-application&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;A single deployment (process-archive) is declared. The process archive has the name &lt;em&gt;loan-approval&lt;/em&gt; and is deployed to the process engine with the name &lt;em&gt;default&lt;/em&gt;. Two additional properties are specified:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;isDeleteUponUndeploy&lt;/code&gt;: this property controls whether the undeployment of the process application should entail that the process engine deployment is deleted from the database. The default setting is false. If this property is set to true, undeployment of the process application leads to the removal of the deployment (including process instances) from the database.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;isScanForProcessDefinitions&lt;/code&gt;: if this property is set to true, the classpath of the process application is automatically scanned for deployable resources. Deployable resources must end in &lt;code&gt;.bpmn20.xml&lt;/code&gt;, &lt;code&gt;.bpmn&lt;/code&gt;, &lt;code&gt;.cmmn11.xml&lt;/code&gt;, &lt;code&gt;.cmmn&lt;/code&gt;, &lt;code&gt;.dmn11.xml&lt;/code&gt; or &lt;code&gt;.dmn&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;See &lt;a href=&#34;/manual/1.0/manual/1.0/reference/deployment-descriptors/descriptors/processes-xml/&#34;&gt;Deployment Descriptor Reference&lt;/a&gt; for complete documentation of the syntax of the &lt;code&gt;processes.xml&lt;/code&gt; file.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Usage with a Pre-Built Distribution</title>
      <link>/manual/1.0/reference/rest/overview/distro-use/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/rest/overview/distro-use/</guid>
      <description>&lt;p&gt;The REST API is included in Camunda&amp;rsquo;s pre-built distributions.&#xA;It can be accessed via the context &lt;code&gt;/engine-rest&lt;/code&gt; and uses the engines provided by the class &lt;code&gt;BpmPlatform&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;The default process engine is available out of the box by accessing &lt;code&gt;/engine-rest/engine/default/{rest-methods}&lt;/code&gt;&#xA;or simply &lt;code&gt;/engine-rest/{rest-methods}&lt;/code&gt;. Any other shared (i.e., it is globally visible) process engine that is created later is available through &lt;code&gt;/engine-rest/engine/{name}/{rest-methods}&lt;/code&gt; without any further configuration.&lt;/p&gt;&#xA;&lt;p&gt;Authentication is deactivated by default, but can be activated as described in the &lt;a href=&#34;/manual/1.0/manual/1.0/reference/rest/overview/authentication/&#34;&gt;Authentication&lt;/a&gt; section.&lt;/p&gt;</description>
    </item>
    <item>
      <title>User operation log</title>
      <link>/manual/1.0/user-guide/process-engine/history/user-operation-log/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/process-engine/history/user-operation-log/</guid>
      <description>&lt;p&gt;The user operation log contains entries for many API operations and can be used for auditing purposes. It provides data on what kind of operations are performed as well as details on the changes involved in the operation. Operations are logged when the operation is performed in the context of a logged in user. To use the operation log, the process engine history level must be set to &lt;code&gt;FULL&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;write-log-entries-regardless-of-user-authentication-context&#34;&gt;Write log entries regardless of user authentication context&lt;/h2&gt;&#xA;&lt;p&gt;If it is desired that operations are logged regardless whether they are performed in the context of a logged in user or not, then the process engine configuration flag named &lt;code&gt;restrictUserOperationLogToAuthenticatedUsers&lt;/code&gt; can be set to &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Writing JSON</title>
      <link>/manual/1.0/reference/spin/json/02-writing-json/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/spin/json/02-writing-json/</guid>
      <description>&lt;p&gt;The JSON datatype supports writing JSON to Strings or Writers.&lt;/p&gt;&#xA;&lt;h1 id=&#34;writing-to-a-string&#34;&gt;Writing to a String:&lt;/h1&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import static&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;org.camunda.spin.Spin.JSON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SpinJsonNode&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jsonNode&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;JSON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;{\&amp;#34;customer\&amp;#34;: \&amp;#34;Kermit\&amp;#34;}&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;json&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jsonNode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;toString&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;writing-to-a-writer&#34;&gt;Writing to a Writer&lt;/h1&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import static&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;org.camunda.spin.Spin.JSON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SpinJsonNode&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jsonNode&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;JSON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;{\&amp;#34;customer\&amp;#34;: \&amp;#34;Kermit\&amp;#34;}&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;StringWriter&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;writer&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jsonNode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;writeToWriter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;StringWriter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Run CIB seven using Spring Boot</title>
      <link>/manual/1.0/installation/spring-boot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/installation/spring-boot/</guid>
      <description>&lt;p&gt;To learn how to run CIB seven with Spring Boot, please consult the &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/spring-boot-integration/&#34;&gt;Spring Boot user guide&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Activiti Migration</title>
      <link>/manual/1.0/update/activiti/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/update/activiti/</guid>
      <description>&lt;p&gt;Migrating an existing application from Activiti &amp;lt;= 5.11 (or Camunda fox 6.x - see below) to Camunda 7.0 is straightforward.&#xA;This page describes the necessary steps.&lt;/p&gt;&#xA;&lt;p&gt;Later upgrade of Camunda 7.0 to Camunda 7.22 is required and described in &lt;a href=&#34;https://docs.camunda.org/manual/latest/update/minor/&#34;&gt;Camunda version upgrade docs&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Final migration from Camunda 7.x to CIB seven {{ &lt;minor-version&gt; }} should be straightforward.&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;note bg-info docs-info&#34;&gt;&#xA;  &lt;h3&gt;Getting Help&lt;/h3&gt;&#xA;  &lt;p&gt;If you are on a more recent Activiti version or if you have any trouble migrating, ask for assistance in the &lt;a href=&#34;https://github.com/orgs/cibseven/discussions&#34;&gt;Discussions&lt;/a&gt;. We are happy to help you!&lt;/p&gt;</description>
    </item>
    <item>
      <title>AngularJS Integration</title>
      <link>/manual/1.0/reference/forms/embedded-forms/integrate/angular-js/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/forms/embedded-forms/integrate/angular-js/</guid>
      <description>&lt;h1 id=&#34;including-the-angular-distribution&#34;&gt;Including the Angular Distribution&lt;/h1&gt;&#xA;&lt;p&gt;Make sure you include the AngularJS build of the Forms SDK:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;angular.min.js&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;text/javascript&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;camunda-bpm-sdk-angular.js&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;text/javascript&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;loading-the-forms-module&#34;&gt;Loading the Forms Module&lt;/h1&gt;&#xA;&lt;p&gt;Add the Forms SDK as module dependency to your application&#xA;module:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;angular&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;bootstrap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;cam.embedded.forms&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;...]);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;angular-directives--compilation&#34;&gt;Angular Directives &amp;amp; Compilation&lt;/h1&gt;&#xA;&lt;p&gt;If the form is loaded from a URL, the SDK makes sure that it is properly compiled and linked to the current Angular scope. This allows using Angular directives in forms loaded dynamically at runtime.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Apache Tomcat Integration</title>
      <link>/manual/1.0/user-guide/runtime-container-integration/tomcat/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/runtime-container-integration/tomcat/</guid>
      <description>&lt;h1 id=&#34;jndi-bindings&#34;&gt;JNDI Bindings&lt;/h1&gt;&#xA;&lt;p&gt;To use the JNDI Bindings for CIB seven Services on Apache Tomcat you have to add the file &lt;code&gt;META-INF/context.xml&lt;/code&gt; to your process application and add the following ResourceLinks (&lt;a href=&#34;http://tomcat.apache.org/tomcat-9.0-doc/config/context.html#Resource_Links&#34;&gt;Tomcat 9&lt;/a&gt;, &lt;a href=&#34;https://tomcat.apache.org/tomcat-10.1-doc/config/context.html#Resource_Links&#34;&gt;Tomcat 10.1&lt;/a&gt;):&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;Context&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;ResourceLink&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;ProcessEngineService&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;na&#34;&gt;global=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;global/camunda-bpm-platform/process-engine/ProcessEngineService!org.camunda.bpm.ProcessEngineService&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;na&#34;&gt;type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;org.camunda.bpm.ProcessEngineService&amp;#34;&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;ResourceLink&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;ProcessApplicationService&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;na&#34;&gt;global=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;global/camunda-bpm-platform/process-engine/ProcessApplicationService!org.camunda.bpm.ProcessApplicationService&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;na&#34;&gt;type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;org.camunda.bpm.ProcessApplicationService&amp;#34;&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/Context&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;These elements are used to create a link to the global JNDI Resources defined in &lt;code&gt;$TOMCAT_HOME/conf/server.xml&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Furthermore, declare the dependency on the JNDI binding inside the &lt;code&gt;WEB-INF/web.xml&lt;/code&gt; deployment descriptor.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Architecture Overview</title>
      <link>/manual/1.0/introduction/architecture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/introduction/architecture/</guid>
      <description>&lt;p&gt;Camunda is a Java-based framework. The main components are written in Java and we have a general focus on providing Java developers with the tools they need for designing, implementing and running business processes and workflows on the JVM. Nevertheless, we also want to make the process engine technology available to non-Java developers. This is why Camunda also provides a REST API which allows you to build applications connecting to a remote process engine.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Authorization Management</title>
      <link>/manual/1.0/webapps/admin/authorization-management/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/webapps/admin/authorization-management/</guid>
      <description>&lt;figure class=&#34;image&#34;&gt;&#xA;  &lt;span&gt;&lt;img&#xA;      src=&#34;../img/admin-authorization.png&#34;&#xA;      &#xA;          title=&#34;Authorizations&#34;&#xA;       /&gt;&lt;/span&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;Manage authorizations for a variety of resources (e.g., &lt;em&gt;Applications&lt;/em&gt;, &lt;em&gt;Groups&lt;/em&gt;, &lt;em&gt;Filters&lt;/em&gt;). In the following sections you will learn how to use an administrator account with the help of some simple use cases.&lt;/p&gt;&#xA;&lt;p&gt;See &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/authorization-service/&#34;&gt;Authorization Service&lt;/a&gt; for more information about Authorizations.&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;note bg-info docs-info&#34;&gt;&#xA;  &lt;h3&gt;Accessing the Authorization Management menu&lt;/h3&gt;&#xA;  &lt;p&gt;The Authorization Management menu is only usable by users which are granted with &lt;em&gt;Read&lt;/em&gt; permission for authorizations.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;grant-basic-permissions&#34;&gt;Grant Basic Permissions&lt;/h1&gt;&#xA;&lt;p&gt;In this use case we&amp;rsquo;ll grant some basic permissions. To start out we&amp;rsquo;ll need some users and a group. Create two users in the  &lt;a href=&#34;/manual/1.0/manual/1.0/webapps/admin/user-management/#user-menu&#34;&gt;users menu&lt;/a&gt;, create a group called &lt;em&gt;support&lt;/em&gt; in the &lt;a href=&#34;/manual/1.0/manual/1.0/webapps/admin/group-management/#groups-menu&#34;&gt;groups menu&lt;/a&gt; and add the new users to the group in the &lt;a href=&#34;/manual/1.0/manual/1.0/webapps/admin/user-management/#user-menu&#34;&gt;users menu&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Auto Complete</title>
      <link>/manual/1.0/reference/cmmn11/markers/auto-complete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/cmmn11/markers/auto-complete/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Can be used with&lt;/strong&gt;: &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/grouping-tasks/stage/&#34;&gt;Stage&lt;/a&gt;, CasePlanModel&lt;/p&gt;&#xA;&lt;div class=&#34;cmmn-symbol&#34;&gt;&lt;img src=&#34;/manual/1.0/manual/1.0//img/short-codes/cmmn-marker-auto-complete.png&#34; /&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;The attribute &lt;code&gt;autoComplete&lt;/code&gt; controls the completion of a stage instance. The following table describes the completion criteria of a stage instance based on the &lt;code&gt;autoComplete&lt;/code&gt; property.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;autoComplete = true&lt;/code&gt;: There are no children in the &lt;code&gt;ACTIVE&lt;/code&gt; state, and all required (&lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/markers/required-rule/&#34;&gt;see Required Rule&lt;/a&gt;) children are &lt;code&gt;COMPLETED&lt;/code&gt;, &lt;code&gt;DISABLED&lt;/code&gt; or &lt;code&gt;TERMINATED&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;autoComplete = false&lt;/code&gt;: There are no children in the &lt;code&gt;ACTIVE&lt;/code&gt; state, and&#xA;&lt;ul&gt;&#xA;&lt;li&gt;all children are &lt;code&gt;COMPLETED&lt;/code&gt;, &lt;code&gt;DISABLED&lt;/code&gt; or &lt;code&gt;TERMINATED&lt;/code&gt;, or&lt;/li&gt;&#xA;&lt;li&gt;on manual completion using &lt;code&gt;CaseService#completeCaseExecution&lt;/code&gt;, all required (&lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/markers/required-rule/&#34;&gt;see Required Rule&lt;/a&gt;) children are &lt;code&gt;COMPLETED&lt;/code&gt;, &lt;code&gt;DISABLED&lt;/code&gt; or &lt;code&gt;TERMINATED&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;For a CasePlanModel the property &lt;code&gt;autoComplete&lt;/code&gt; can be set as follows:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Automatic Resource Deployment</title>
      <link>/manual/1.0/user-guide/spring-framework-integration/deployment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/spring-framework-integration/deployment/</guid>
      <description>&lt;p&gt;Spring integration also has a special feature for deploying resources. In the process engine configuration, you can specify a set of resources. When the process engine is created, all those resources will be scanned and deployed. There is filtering in place that prevents duplicate deployments. Only in case the resources have actually changed, new deployments will be deployed to the engine database. This makes sense in a lot of use cases, where the Spring container is rebooted often (e.g., testing).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Case Task</title>
      <link>/manual/1.0/reference/cmmn11/tasks/case-task/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/cmmn11/tasks/case-task/</guid>
      <description>&lt;p&gt;A &lt;em&gt;case task&lt;/em&gt; can be used to call another CMMN case.&lt;/p&gt;&#xA;&lt;div class=&#34;cmmn-symbol&#34;&gt;&lt;img src=&#34;/manual/1.0/manual/1.0//img/short-codes/cmmn-case-task.png&#34; /&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;A case task is a regular task that requires a &lt;code&gt;caseRef&lt;/code&gt; attribute that references a case definition by its key. Such a case task can be defined as follows:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;caseTask&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;checkCreditCase&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Check credit&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;caseRef=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;checkCreditCase&amp;#34;&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The referenced case definition is resolved at runtime. This means that the referenced case can be deployed independently from the calling case, if needed.&lt;/p&gt;&#xA;&lt;p&gt;A case task in state &lt;code&gt;ENABLED&lt;/code&gt; can be started manually using the &lt;code&gt;CaseService&lt;/code&gt; as follows:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Configure the Full Distribution for JBoss EAP/WildFly</title>
      <link>/manual/1.0/installation/full/jboss/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/installation/full/jboss/configuration/</guid>
      <description>&lt;p&gt;This page explains how to configure the full distribution for the JBoss EAP/WildFly application server.&lt;/p&gt;&#xA;&lt;h2 id=&#34;ldap&#34;&gt;LDAP&lt;/h2&gt;&#xA;&lt;p&gt;In order to setup LDAP for the JBoss EAP/WildFly Application Server distribution, you have to perform the following steps:&lt;/p&gt;&#xA;&lt;h3 id=&#34;adjust-the-process-engine-configuration&#34;&gt;Adjust the Process Engine Configuration&lt;/h3&gt;&#xA;&lt;p&gt;Edit the file &lt;code&gt;standalone.xml&lt;/code&gt; (or &lt;code&gt;domain.xml&lt;/code&gt;) provided by the JBoss EAP/WildFly Application Server and add the &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/identity-service/#the-ldap-identity-service&#34;&gt;LDAP Identity Provider Plugin&lt;/a&gt; and the &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/authorization-service/#the-administrator-authorization-plugin&#34;&gt;Administrator Authorization Plugin&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;subsystem&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xmlns=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;urn:org.camunda.bpm.jboss:1.1&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;process-engines&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;process-engine&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;default&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;default=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt; ...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;properties&amp;gt;&lt;/span&gt;...&lt;span class=&#34;nt&#34;&gt;&amp;lt;/properties&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;plugins&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;nt&#34;&gt;&amp;lt;class&amp;gt;&lt;/span&gt;org.camunda.bpm.identity.impl.ldap.plugin.LdapIdentityProviderPlugin&lt;span class=&#34;nt&#34;&gt;&amp;lt;/class&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;nt&#34;&gt;&amp;lt;properties&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;serverUrl&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;ldap://localhost:4334/&lt;span class=&#34;nt&#34;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;managerDn&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;uid=jonny,ou=office-berlin,o=camunda,c=org&lt;span class=&#34;nt&#34;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;managerPassword&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;s3cr3t&lt;span class=&#34;nt&#34;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;baseDn&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;o=camunda,c=org&lt;span class=&#34;nt&#34;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;userSearchBase&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;ou=employees&lt;span class=&#34;nt&#34;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;userSearchFilter&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;(objectclass=person)&lt;span class=&#34;nt&#34;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;userIdAttribute&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;uid&lt;span class=&#34;nt&#34;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;userFirstnameAttribute&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;cn&lt;span class=&#34;nt&#34;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;userLastnameAttribute&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;sn&lt;span class=&#34;nt&#34;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;userEmailAttribute&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;mail&lt;span class=&#34;nt&#34;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;userPasswordAttribute&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;userpassword&lt;span class=&#34;nt&#34;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;groupSearchBase&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;ou=roles&lt;span class=&#34;nt&#34;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;groupSearchFilter&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;(objectclass=groupOfNames)&lt;span class=&#34;nt&#34;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;groupIdAttribute&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;ou&lt;span class=&#34;nt&#34;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;groupNameAttribute&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;cn&lt;span class=&#34;nt&#34;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;groupMemberAttribute&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;member&lt;span class=&#34;nt&#34;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;nt&#34;&gt;&amp;lt;/properties&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;nt&#34;&gt;&amp;lt;class&amp;gt;&lt;/span&gt;org.camunda.bpm.engine.impl.plugin.AdministratorAuthorizationPlugin&lt;span class=&#34;nt&#34;&gt;&amp;lt;/class&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;nt&#34;&gt;&amp;lt;properties&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;administratorUserName&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;admin&lt;span class=&#34;nt&#34;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;nt&#34;&gt;&amp;lt;/properties&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;/plugins&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/process-engine&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;/process-engines&amp;gt;&lt;/span&gt; ...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/subsystem&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;administratorUserName&lt;/code&gt; property should contain the user id of the LDAP user you want to grant administrator authorizations to. You can then use this user to log in to the web application and grant authorizations to additional users.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Configure the Full Distribution for Tomcat</title>
      <link>/manual/1.0/installation/full/tomcat/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/installation/full/tomcat/configuration/</guid>
      <description>&lt;p&gt;This page explains how to configure the full distribution for Tomcat Application Server.&lt;/p&gt;&#xA;&lt;h2 id=&#34;ldap&#34;&gt;LDAP&lt;/h2&gt;&#xA;&lt;p&gt;In order to setup LDAP for the Tomcat distribution, you have to perform the following steps:&lt;/p&gt;&#xA;&lt;h3 id=&#34;add-the-ldap-library&#34;&gt;Add the LDAP Library&lt;/h3&gt;&#xA;&lt;p&gt;Make sure the &lt;code&gt;camunda-identity-ldap-$PLATFORM_VERSION.jar&lt;/code&gt; is present in the&#xA;&lt;code&gt;$TOMCAT_DISTRIBUTION/lib/&lt;/code&gt; folder.&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;note bg-info docs-info&#34;&gt;&#xA;  &lt;h3&gt;Pre packaged distribution&lt;/h3&gt;&#xA;  &lt;p&gt;Note: If you use the pre-packaged distribution, the ldap plugin is already present and you can skip this step.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h3 id=&#34;adjust-the-process-engine-configuration&#34;&gt;Adjust the Process Engine Configuration&lt;/h3&gt;&#xA;&lt;p&gt;Edit the file &lt;code&gt;bpm-platform.xml&lt;/code&gt; located inside the folder &lt;code&gt;$TOMCAT_HOME/conf&lt;/code&gt; and add the &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/identity-service/#the-ldap-identity-service&#34;&gt;LDAP Identity Provider Plugin&lt;/a&gt; and the &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/authorization-service/#the-administrator-authorization-plugin&#34;&gt;Administrator Authorization Plugin&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Date Inputs</title>
      <link>/manual/1.0/reference/forms/embedded-forms/controls/date-inputs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/forms/embedded-forms/controls/date-inputs/</guid>
      <description>&lt;p&gt;Date input is supported using an &lt;code&gt;&amp;lt;input type=&amp;quot;text&amp;quot;&amp;gt;&lt;/code&gt; control.&lt;/p&gt;&#xA;&lt;h1 id=&#34;binding-to-a-process-variable&#34;&gt;Binding to a Process Variable&lt;/h1&gt;&#xA;&lt;p&gt;To bind the input field to a Java &lt;code&gt;Date&lt;/code&gt; variable, the directive&#xA;&lt;code&gt;cam-variable-type=&amp;quot;Date&amp;quot;&lt;/code&gt; must be used.&lt;/p&gt;&#xA;&lt;p&gt;Example:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;text&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       &lt;span class=&#34;na&#34;&gt;cam-variable-name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;CONTRACT_START_DATE&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       &lt;span class=&#34;na&#34;&gt;cam-variable-type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Date&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;date-format&#34;&gt;Date Format&lt;/h1&gt;&#xA;&lt;p&gt;Currently only the ISO Date Format &lt;code&gt;yyyy-MM-dd&#39;T&#39;HH:mm:ss&lt;/code&gt; is supported.&#xA;Example value: &lt;code&gt;2013-01-23T13:42:42&lt;/code&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;using-a-date-picker&#34;&gt;Using a Date Picker&lt;/h1&gt;&#xA;&lt;p&gt;The Form SDK itself does not provide any custom components or widgets. As such it also does not provide a date picker. However, you can integrate third party libraries providing such widgets or write one yourself (see &lt;a href=&#34;/manual/1.0/manual/1.0/reference/forms/embedded-forms/javascript/&#34;&gt;Custom JavaScript&lt;/a&gt;).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Decision Service in the Process Engine</title>
      <link>/manual/1.0/user-guide/process-engine/decisions/decision-service/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/process-engine/decisions/decision-service/</guid>
      <description>&lt;p&gt;The decision service is a part of the process engine&amp;rsquo;s &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/process-engine-api/#services-api&#34;&gt;Services API&lt;/a&gt;. It allows&#xA;to evaluate a deployed decision definition independently from BPMN and CMMN.&lt;/p&gt;&#xA;&lt;h1 id=&#34;evaluating-a-decision&#34;&gt;Evaluating a Decision&lt;/h1&gt;&#xA;&lt;p&gt;To evaluate a deployed decision, reference it by id or a combination of key and version. If&#xA;a key is used but no version is specified then the latest version of decision&#xA;definition with the given key is evaluated.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;DecisionService&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decisionService&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;processEngine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getDecisionService&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;VariableMap&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;variables&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Variables&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;createVariables&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;putValue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;status&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;bronze&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;putValue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;sum&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DmnDecisionResult&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decisionResult&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decisionService&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;evaluateDecisionByKey&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;decision-key&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;variables&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;variables&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;evaluate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// alternatively for decision tables only&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DmnDecisionTableResult&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decisionResult&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decisionService&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;evaluateDecisionTableByKey&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;decision-key&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;variables&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;variables&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;evaluate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;the-decision-key&#34;&gt;The Decision Key&lt;/h2&gt;&#xA;&lt;p&gt;The key of a decision definition is specified by the &lt;code&gt;id&lt;/code&gt; attribute of the&#xA;&lt;code&gt;decision&lt;/code&gt; element in the DMN XML. The different naming is related to the&#xA;&lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/decisions/repository/#versioning-of-decisions&#34;&gt;Versioning of Decisions&lt;/a&gt;. Since a key can reference multiple versions of a&#xA;decision definition, the id specifies exactly one version.&lt;/p&gt;</description>
    </item>
    <item>
      <title>DMN Decision Table Rule</title>
      <link>/manual/1.0/reference/dmn/decision-table/rule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/dmn/decision-table/rule/</guid>
      <description>&lt;figure class=&#34;image no-lightbox&#34;&gt;&#xA;  &lt;span&gt;&lt;img&#xA;      src=&#34;../img/rule.png&#34;&#xA;      &#xA;          title=&#34;Rule&#34;&#xA;       /&gt;&lt;/span&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;A decision table can have one or more rules. Each rule contains input and&#xA;output entries. The input entries are the condition and the output entries the&#xA;conclusion of the rule. If each input entry (condition) is satisfied, then the&#xA;rule is satisfied and the decision result contains the output entries&#xA;(conclusion) of this rule.&lt;/p&gt;&#xA;&lt;p&gt;A rule is represented by a &lt;code&gt;rule&lt;/code&gt; element inside a &lt;code&gt;decisionTable&lt;/code&gt; XML element.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Embed the API</title>
      <link>/manual/1.0/reference/rest/overview/embeddability/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/rest/overview/embeddability/</guid>
      <description>&lt;p&gt;The REST API is an artifact of its own, which means that it can be embedded in any other JAX-RS application independently of the engine.&lt;/p&gt;&#xA;&lt;h1 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h1&gt;&#xA;&lt;p&gt;The REST API classes are tested with &lt;a href=&#34;http://www.jboss.org/resteasy/&#34;&gt;RESTEasy&lt;/a&gt; and &lt;a href=&#34;http://jersey.java.net/&#34;&gt;Jersey&lt;/a&gt; as the JAX-RS implementation.&#xA;Furthermore, the engine classes and Jackson&amp;rsquo;s &lt;code&gt;com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider&lt;/code&gt; artifact (as well as transitive Jackson dependencies) have to be on the classpath.&lt;/p&gt;&#xA;&lt;h1 id=&#34;required-steps&#34;&gt;Required Steps&lt;/h1&gt;&#xA;&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; Add the REST API to your project as a Maven dependency.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Entry and Exit Criteria</title>
      <link>/manual/1.0/reference/cmmn11/concepts/entry-exit-criteria/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/cmmn11/concepts/entry-exit-criteria/</guid>
      <description>&lt;p&gt;Transitions in a CMMN case can happen in two ways: Either by external interaction or by events occurring and conditions being fulfilled. The former refers to any explicit interaction with a case that is triggered from the outside. For example, a human worker completing a human task would be such an interaction. Completing a task means that the corresponding plan item is completed, depending on the actual case model, the case instance may complete.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Event Subprocess</title>
      <link>/manual/1.0/reference/bpmn20/subprocesses/event-subprocess/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/bpmn20/subprocesses/event-subprocess/</guid>
      <description>&lt;p&gt;The event subprocess is a subprocess that is triggered by an event. An event subprocess can be added at the process level or at any subprocess level. The event used to trigger an event subprocess is configured using a start event. Therefore, none start events are not supported for event subprocesses. An event subprocess might be triggered using events like message events, error events, signal events, timer events, or compensation events. The subscription to the start event is created when the scope (process instance or subprocess) hosting the event subprocess is created. The subscription is removed when the scope is ended.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Expression Resolving</title>
      <link>/manual/1.0/user-guide/cdi-java-ee-integration/expression-resolving/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/cdi-java-ee-integration/expression-resolving/</guid>
      <description>&lt;p&gt;The &lt;code&gt;camunda-engine-cdi&lt;/code&gt; and &lt;code&gt;camunda-engine-cdi-jakarta&lt;/code&gt; libraries expose CDI beans via Expression Language,&#xA;using a custom resolver. This makes it possible to reference beans from the process:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;userTask&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;authorizeBusinessTrip&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Authorize Business Trip&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                        &lt;span class=&#34;na&#34;&gt;camunda:assignee=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;#{authorizingManager.account.username}&amp;#34;&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Where &amp;ldquo;authorizingManager&amp;rdquo; could be a bean provided by a producer method:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@Inject&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nd&#34;&gt;@ProcessVariable&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;businessTripRequesterUsername&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nd&#34;&gt;@Produces&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nd&#34;&gt;@Named&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Employee&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;authorizingManager&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;TypedQuery&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;entityManager&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;createQuery&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;SELECT e FROM Employee e WHERE e.account.username=&amp;#39;&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;businessTripRequesterUsername&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#39;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Employee&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Employee&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getSingleResult&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getManager&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can use the same feature to call a business method of an EJB in a service task, using the &lt;code&gt;camunda:expression=&amp;quot;${myEjb.method()}&amp;quot;&lt;/code&gt;-extension.&#xA;Note that this requires a &lt;code&gt;@Named&lt;/code&gt;-annotation on the MyEjb-class.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Expressions in the DMN Engine</title>
      <link>/manual/1.0/user-guide/dmn-engine/expressions-and-scripts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/dmn-engine/expressions-and-scripts/</guid>
      <description>&lt;p&gt;Decision tables and decision literal expressions allow specifying different types of expressions.&#xA;This section describes which types of expressions exist.&#xA;It lists which expression languages are supported and demonstrates how to change the used expression language for an expression.&lt;/p&gt;&#xA;&lt;h1 id=&#34;expressions-in-dmn&#34;&gt;Expressions in DMN&lt;/h1&gt;&#xA;&lt;p&gt;As shown in the &lt;a href=&#34;/manual/1.0/manual/1.0/reference/dmn/decision-table/&#34;&gt;decision table&lt;/a&gt; and &lt;a href=&#34;/manual/1.0/manual/1.0/reference/dmn/decision-literal-expression/&#34;&gt;decision literal expression&lt;/a&gt; reference, four types of expressions are supported:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;em&gt;Input Expression&lt;/em&gt;: sets the input value for an input column&#xA;of the decision table&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;Input Entry&lt;/em&gt;: used to determine if a rule of the decision&#xA;table is applicable&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;Output Entry&lt;/em&gt;: returns a value which is added to the output of a matched rule&#xA;of the decision table&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;Literal Expression&lt;/em&gt;: used to determine the value of a decision literal expression&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;You can read more on this in the &lt;a href=&#34;/manual/1.0/manual/1.0/reference/dmn/decision-table/&#34;&gt;DMN 1.3 reference&lt;/a&gt;. In&#xA;the DMN 1.3 XML, expressions can be found in the XML&#xA;elements &lt;code&gt;inputExpression&lt;/code&gt;, &lt;code&gt;inputEntry&lt;/code&gt;, &lt;code&gt;outputEntry&lt;/code&gt; and &lt;code&gt;literalExpression&lt;/code&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Extending Connect</title>
      <link>/manual/1.0/reference/connect/extending-connect/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/connect/extending-connect/</guid>
      <description>&lt;h1 id=&#34;configuring-connectors&#34;&gt;Configuring Connectors&lt;/h1&gt;&#xA;&lt;p&gt;The connectors available to Connect may not always suit your needs. Sometimes,&#xA;it is necessary to provide configuration.&lt;/p&gt;&#xA;&lt;p&gt;To configure a connector detected by Spin, the SPI&#xA;&lt;code&gt;org.camunda.connect.spi.ConnectorConfigurator&lt;/code&gt; can be implemented.  A&#xA;configurator specifies which classes it can configure. Connect discovers a&#xA;configurator by employing Java&amp;rsquo;s service loader mechanism and will then provide&#xA;it with all connectors that match the specified class (or are a subclass&#xA;thereof). The concrete configuration options depend on the actual connector.&#xA;For example, the HTTP based connector can modify the Apache HTTP client&#xA;that the connector uses.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Extending Spin</title>
      <link>/manual/1.0/reference/spin/extending-spin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/spin/extending-spin/</guid>
      <description>&lt;h1 id=&#34;configuring-data-formats&#34;&gt;Configuring Data Formats&lt;/h1&gt;&#xA;&lt;p&gt;The data formats available to Spin may not always suit your needs. Sometimes, it is necessary to provide configuration. For example, when using Spin to map Java objects to JSON, a format for how dates are serialized has to specified. While the Spin data formats use reasonable default values, they can also be changed.&lt;/p&gt;&#xA;&lt;p&gt;To configure a data format detected by Spin, the SPI &lt;code&gt;org.camunda.spin.spi.DataFormatConfigurator&lt;/code&gt; can be implemented. A configurator specifies which classes it can configure. Spin discovers a configurator by employing Java&amp;rsquo;s service loader mechanism and will then provide it with all data formats that match the specified class (or are a subclass thereof). The concrete configuration options depend on the actual data format. For example, a Jackson-based JSON data format can modify the &lt;code&gt;ObjectMapper&lt;/code&gt; that the data format uses.&lt;/p&gt;</description>
    </item>
    <item>
      <title>FEEL Engine Spin Integration</title>
      <link>/manual/1.0/user-guide/dmn-engine/feel/spin-integration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/dmn-engine/feel/spin-integration/</guid>
      <description>&lt;p&gt;This page documents how Camunda Spin can be used together with the Scala FEEL Engine. Furthermore,&#xA;it is shown how Spin data types are mapped to FEEL data types, as well as some rules when the&#xA;former data structures are transformed into the latter.&lt;/p&gt;&#xA;&lt;h2 id=&#34;where-can-the-spin-integration-be-found&#34;&gt;Where can the Spin integration be found&lt;/h2&gt;&#xA;&lt;p&gt;The Spin integration for the FEEL Engine is implemented into the&#xA;&lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/data-formats/configuring-spin-integration/#camunda-engine-plugin-spin&#34;&gt;Spin Process Engine Plugin&lt;/a&gt; since it is expected that the Process Engine should be&#xA;capable of using Spin, if another component of CIB seven (here, the FEEL Engine)&#xA;supports its usage.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Filters</title>
      <link>/manual/1.0/webapps/tasklist/filters/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/webapps/tasklist/filters/</guid>
      <description>&lt;figure class=&#34;image&#34;&gt;&#xA;  &lt;span&gt;&lt;img&#xA;      src=&#34;../img/tasklist-create-filter.png&#34;&#xA;      &#xA;          title=&#34;Create Filter&#34;&#xA;       /&gt;&lt;/span&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;In Tasklist, you can create and select filters. You can use these filters to create lists of tasks, sorted by specified criteria. To create a filter, select &lt;em&gt;Create a Filter&lt;/em&gt;. You will then see a screen as depicted in the above image. You have several options to configure your filter:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;General&lt;/strong&gt; - Specify the name and description of the filter as well as assigning a color. Assign a priority to determine the order in which the filters are displayed on the dashboard. You can choose to have the filter automatically refresh the filter results by selecting the checkbox &lt;em&gt;Auto-Refresh&lt;/em&gt;.The default refresh interval is 10 seconds.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Permissions&lt;/strong&gt; - Specify which users or groups can see the filter. You can set the filter as globally accessible by selecting the checkbox &lt;em&gt;Accessible by all users&lt;/em&gt;. A permission that is set here is equivalent to a &lt;em&gt;READ&lt;/em&gt; permission which can also be set in &lt;a href=&#34;/manual/1.0/manual/1.0/webapps/admin/&#34;&gt;Camunda Admin&lt;/a&gt;. In case you want to assign other permissions, you can do so in the &lt;a href=&#34;/manual/1.0/manual/1.0/webapps/admin/authorization-management/&#34;&gt;Authorizations&lt;/a&gt; tab in Camunda Admin.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Criteria&lt;/strong&gt; - Specify which tasks will be displayed when selecting the filter. A key and a value must be inserted. There are various keys which can be selected from the categories &lt;em&gt;Process Instance (ID, Business Key)&lt;/em&gt;, &lt;em&gt;Process Definition (ID, Key, Name)&lt;/em&gt;, &lt;em&gt;Case Instance (ID, Business Key)&lt;/em&gt;, &lt;em&gt;Case Definition (ID, Key, Name)&lt;/em&gt;, &lt;em&gt;Other (Process Instance state, Activity instance ID, Execution ID)&lt;/em&gt;, &lt;em&gt;User/Group (Assignee, Owner, Candidate User or Group, Involved user, Unassigned, Delegation State)&lt;/em&gt;, &lt;em&gt;Task (Definition Key, Name, Description, Priority)&lt;/em&gt; and &lt;em&gt;Dates (Created date, Due date, Follow up date)&lt;/em&gt;. Keys marked with a * accept expressions as value.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Variables&lt;/strong&gt; - Specify which variables are displayed in the &lt;a href=&#34;/manual/1.0/manual/1.0/webapps/tasklist/dashboard/#filter-results&#34;&gt;filter results&lt;/a&gt; section of the &lt;a href=&#34;/manual/1.0/manual/1.0/webapps/tasklist/dashboard/&#34;&gt;dashboard&lt;/a&gt;. Setting variables here has no influence on which tasks are displayed. To set the variables, you need to insert a &lt;em&gt;Name&lt;/em&gt;, which is the coded name of the variable, and a &lt;em&gt;Label&lt;/em&gt;, which defines what the variable will be named in the &lt;a href=&#34;/manual/1.0/manual/1.0/webapps/tasklist/dashboard/#filter-results&#34;&gt;filter results&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;expressions-in-filters&#34;&gt;Expressions in Filters&lt;/h1&gt;&#xA;&lt;p&gt;Several of the filter criteria accept expressions as values. These expressions are written in &lt;a href=&#34;http://juel.sourceforge.net/&#34;&gt;JUEL&lt;/a&gt;. In filters which are related to times and dates, you can use the dateTime class, which returns a &lt;a href=&#34;http://www.joda.org/joda-time/&#34;&gt;Joda-Time&lt;/a&gt; DateTime object.&lt;/p&gt;</description>
    </item>
    <item>
      <title>History cleanup</title>
      <link>/manual/1.0/user-guide/process-engine/history/history-cleanup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/process-engine/history/history-cleanup/</guid>
      <description>&lt;p&gt;When used intensively, the process engine can produce a huge amount of historic data. &lt;em&gt;History Cleanup&lt;/em&gt; is a feature that removes this data based on configurable time-to-live settings.&lt;/p&gt;&#xA;&lt;p&gt;It deletes:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Historic process instances plus all related historic data (e.g., historic variable instances, historic task instances, historic instance permissions, all comments and attachments related to them, etc.)&lt;/li&gt;&#xA;&lt;li&gt;Historic decision instances plus all related historic data (i.e., historic decision input and output instances)&lt;/li&gt;&#xA;&lt;li&gt;Historic case instances plus all related historic data (e.g., historic variable instances, historic task instances, etc.)&lt;/li&gt;&#xA;&lt;li&gt;Historic batches plus all related historic data (historic incidents and job logs)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;History cleanup can be triggered manually or scheduled on a regular basis. Only &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/authorization-service/#the-camunda-admin-group&#34;&gt;camunda-admins&lt;/a&gt; have permissions to execute history cleanup manually.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Job Executor Configuration</title>
      <link>/manual/1.0/reference/deployment-descriptors/tags/job-executor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/deployment-descriptors/tags/job-executor/</guid>
      <description>&lt;p&gt;The job executor tag is used to configure the job executor and can be placed in the &lt;a href=&#34;/manual/1.0/manual/1.0/reference/deployment-descriptors/descriptors/bpm-platform-xml/&#34;&gt;bpm-platform.xml&lt;/a&gt; file.&lt;/p&gt;&#xA;&lt;h1 id=&#34;example&#34;&gt;Example&lt;/h1&gt;&#xA;&lt;p&gt;The following example shows a job executor XML snippet:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;job-executor&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;job-acquisition&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;default&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;properties&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;maxJobsPerAcquisition&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;5&lt;span class=&#34;nt&#34;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;waitTimeInMillis&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;8000&lt;span class=&#34;nt&#34;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;lockTimeInMillis&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;400000&lt;span class=&#34;nt&#34;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/properties&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;/job-acquisition&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;properties&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c&#34;&gt;&amp;lt;!-- Note: the following properties only take effect in a Tomcat environment --&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;queueSize&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;3&lt;span class=&#34;nt&#34;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;corePoolSize&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;5&lt;span class=&#34;nt&#34;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;maxPoolSize&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;10&lt;span class=&#34;nt&#34;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;keepAliveTime&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;0&lt;span class=&#34;nt&#34;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;/properties&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/job-executor&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;syntax-reference&#34;&gt;Syntax Reference&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Tag name &lt;/th&gt;&#xA;    &lt;th&gt;Parent tag name&lt;/th&gt;&#xA;    &lt;th&gt;Required?&lt;/th&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;job-executor&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;bpm-platform&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;true&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;        Container element for the configuration of a job executor.&#xA;      &lt;p&gt;&#xA;        &lt;strong&gt;Attributes:&lt;/strong&gt;&#xA;        None.&#xA;      &lt;/p&gt;</description>
    </item>
    <item>
      <title>Lifecycle and Events</title>
      <link>/manual/1.0/reference/forms/embedded-forms/lifecycle/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/forms/embedded-forms/lifecycle/</guid>
      <description>&lt;h1 id=&#34;events&#34;&gt;Events&lt;/h1&gt;&#xA;&lt;ol&gt;&#xA;  &lt;li&gt;&#xA;    The form is parsed, and variable names are collected from the markup. This means that directives&#xA;    like &lt;code&gt;cam-variable-name&lt;/code&gt; are evaluated and the resulting variables are declared in the&#xA;    &lt;code&gt;variableManager&lt;/code&gt;.&lt;br/&gt;&#xA;    &lt;em&gt;Events:&lt;/em&gt;&#xA;    &lt;ul&gt;&#xA;      &lt;li&gt;&lt;code&gt;form-loaded&lt;/code&gt; is fired &lt;strong&gt;after&lt;/strong&gt; the form has been parsed, and all form directives have been&#xA;    evaluated.&lt;/li&gt;&#xA;    &lt;/ul&gt;&#xA;  &lt;/li&gt;&#xA;  &lt;br/&gt;&#xA;  &lt;li&gt;&#xA;    In the second phase, a request is made to the server to gather the values of the&#xA;    variables declared in the variable manager.&lt;br/&gt;&#xA;    &lt;em&gt;Events:&lt;/em&gt;&#xA;    &lt;ul&gt;&#xA;      &lt;li&gt;&lt;code&gt;variables-fetched&lt;/code&gt; is fired &lt;strong&gt;after&lt;/strong&gt; the request returns and the values of the variables have&#xA;     been merged into the variableManager.&lt;/li&gt;&#xA;    &lt;/ul&gt;&#xA;  &lt;/li&gt;&#xA;  &lt;br/&gt;&#xA;  &lt;li&gt;&#xA;    If a saved state of the form exists, the variable values are replaced with the saved state.&lt;br/&gt;&#xA;    &lt;em&gt;Events:&lt;/em&gt;&#xA;    &lt;ul&gt;&#xA;      &lt;li&gt;&lt;code&gt;variables-restored&lt;/code&gt; is fired &lt;strong&gt;after&lt;/strong&gt; the saved values of the variables have been merged with&#xA;     the values in the variableManager.&lt;/li&gt;&#xA;    &lt;/ul&gt;&#xA;  &lt;/li&gt;&#xA;  &lt;br/&gt;&#xA;  &lt;li&gt;&#xA;    Next, the variables are applied to the form controls. This means that HTML input fields and&#xA;    select boxes are populated with the variable values present in the variableManager.&lt;br/&gt;&#xA;    &lt;em&gt;Events:&lt;/em&gt;&#xA;    &lt;ul&gt;&#xA;      &lt;li&gt;&lt;code&gt;variables-applied&lt;/code&gt; is fired &lt;strong&gt;after&lt;/strong&gt; the values of the variables have been applied to the&#xA;     form controls.&lt;/li&gt;&#xA;    &lt;/ul&gt;&#xA;  &lt;/li&gt;&#xA;  &lt;br/&gt;&#xA;  &lt;li&gt;&#xA;    The user interacts with the form. In this phase no events are fired.&#xA;  &lt;/li&gt;&#xA;  &lt;br/&gt;&#xA;  &lt;li&gt;&#xA;    The user can save the form, which causes the current values of the variables to be stored in the&#xA;    localStorage. If the user comes back to the form later, the values are restored.&lt;br/&gt;&#xA;    &lt;em&gt;Events:&lt;/em&gt;&#xA;    &lt;ul&gt;&#xA;      &lt;li&gt;&lt;code&gt;store&lt;/code&gt; is fired &lt;strong&gt;before&lt;/strong&gt; the values of the variables are written to the localStorage. An&#xA;      event handler may prevent the values from being stored.&lt;/li&gt;&#xA;      &lt;li&gt;&lt;code&gt;variables-stored&lt;/code&gt; is fired &lt;strong&gt;after&lt;/strong&gt; the values are written to the localStorage.&lt;/li&gt;&#xA;    &lt;/ul&gt;&#xA;  &lt;/li&gt;&#xA;  &lt;br/&gt;&#xA;  &lt;li&gt;&#xA;    Finally, the form is completed. Triggering an [BPMN error or escalation event](/manual/1.0/reference/bpmn20/tasks/user-task/#reporting-bpmn-error) will submit the form .&lt;br/&gt;&#xA;    &lt;em&gt;Events:&lt;/em&gt;&#xA;    &lt;ul&gt;&#xA;      &lt;li&gt;&lt;code&gt;submit&lt;/code&gt;, &lt;code&gt;error&lt;/code&gt; or &lt;code&gt;escalation&lt;/code&gt; is fired &lt;strong&gt;before&lt;/strong&gt; the submit request is sent to the server. An event handler may&#xA;      prevent the form from being submitted by setting the property `submitPrevented`, `errorPrevented` or `escalationPrevented` to true.&lt;/li&gt;&#xA;      &lt;li&gt;&lt;code&gt;submit-success&lt;/code&gt;, &lt;code&gt;error-success&lt;/code&gt; or &lt;code&gt;escalation-success&lt;/code&gt; is fired &lt;strong&gt;after&lt;/strong&gt; the server successfully treated the submission.&lt;/li&gt;&#xA;      &lt;li&gt;&lt;code&gt;submit-failed&lt;/code&gt;, &lt;code&gt;error-failed&lt;/code&gt; or &lt;code&gt;escalation-failed&lt;/code&gt; is fired &lt;strong&gt;after&lt;/strong&gt; the server failed at treating the submission&#xA;      or when a network error happened.&lt;/li&gt;&#xA;    &lt;/ul&gt;&#xA;  &lt;/li&gt;&#xA;  &lt;br/&gt;&#xA;&lt;h1 id=&#34;event-listeners&#34;&gt;Event Listeners&lt;/h1&gt;&#xA;&lt;p&gt;Event listeners can be registered from &lt;a href=&#34;/manual/1.0/manual/1.0/reference/forms/embedded-forms/javascript/&#34;&gt;custom JavaScript&lt;/a&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Message Events</title>
      <link>/manual/1.0/reference/bpmn20/events/message-events/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/bpmn20/events/message-events/</guid>
      <description>&lt;p&gt;Message events are events which reference a named message. A message has a name and a payload. Unlike a signal, a message event is always directed at a single recipient.&lt;/p&gt;&#xA;&lt;h1 id=&#34;defining-a-message&#34;&gt;Defining a Message&lt;/h1&gt;&#xA;&lt;p&gt;A message event definition is declared by using the &lt;code&gt;messageEventDefinition&lt;/code&gt; element. The attribute &lt;code&gt;messageRef&lt;/code&gt; references a message element declared as a child element of the definitions root element. The following is an excerpt of a process in which two message events are declared and referenced by a start event and an intermediate catching message event.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Microsoft SQL Server and Azure SQL Database Configuration</title>
      <link>/manual/1.0/user-guide/process-engine/database/mssql-configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/process-engine/database/mssql-configuration/</guid>
      <description>&lt;p&gt;This section documents the additional database configuration changes necessary to correctly use&#xA;Microsoft SQL Server or Microsoft Azure SQL databases with CIB seven. It provides guides&#xA;on:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;How to set the correct database transaction isolation level.&lt;/li&gt;&#xA;&lt;li&gt;How different Microsoft SQL Server versions are supported in Azure SQL.&lt;/li&gt;&#xA;&lt;li&gt;How Camunda supports Azure SQL.&lt;/li&gt;&#xA;&lt;li&gt;How to configure a database on Azure SQL to be supported by Camunda.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;To use these guides, you should have a basic understanding of (Microsoft&amp;rsquo;s) T-SQL syntax. You should&#xA;also have access to a database administration tool that can interact with your Microsoft database.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Parallel Gateway</title>
      <link>/manual/1.0/reference/bpmn20/gateways/parallel-gateway/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/bpmn20/gateways/parallel-gateway/</guid>
      <description>&lt;p&gt;Gateways can also be used to model concurrency in a process. The most straightforward gateway to introduce concurrency in a process model is the Parallel Gateway, which allows forking into multiple paths of execution or joining multiple incoming paths of execution.&lt;/p&gt;&#xA;&lt;div data-bpmn-diagram=&#34;../bpmn/parallel-gateway&#34;&gt;&lt;/div&gt;&#xA;&lt;p&gt;The functionality of the parallel gateway is based on the incoming and outgoing sequence flow(s):&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;fork: all outgoing sequence flows are followed in parallel, creating one concurrent execution for each sequence flow.&lt;/li&gt;&#xA;&lt;li&gt;join: all concurrent executions arriving at the parallel gateway wait at the gateway until an execution has arrived for each of the incoming sequence flows. Then the process continues past the joining gateway.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;div class=&#34;note bg-warning docs-warning&#34;&gt;&#xA;  &lt;h3&gt;Limitation&lt;/h3&gt;&#xA;  &lt;p&gt;Note that in Camunda&amp;rsquo;s implementation of the parallel gateway, the gateway triggers as soon as the following holds: The number of arrived tokens is equal to the number of incoming sequence flows. It is not required that a token arrives on &lt;em&gt;every&lt;/em&gt; incoming flow.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Participating in the Form Lifecycle</title>
      <link>/manual/1.0/reference/forms/embedded-forms/javascript/lifecycle/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/forms/embedded-forms/javascript/lifecycle/</guid>
      <description>&lt;p&gt;It is possible to participate in the lifecycle of the form. See &lt;a href=&#34;/manual/1.0/manual/1.0/reference/forms/embedded-forms/lifecycle/&#34;&gt;Form Lifecycle and&#xA;Events&lt;/a&gt; for more details.&lt;/p&gt;&#xA;&lt;h1 id=&#34;fetching-additional-variables&#34;&gt;Fetching Additional Variables&lt;/h1&gt;&#xA;&lt;p&gt;When loading the form, the values of all variables used in the form are fetched from the&#xA;backend. This means that the form SDK only fetches those variables which are actually used in the&#xA;form. The most convenient way to use a variable is the &lt;code&gt;cam-variable-name&lt;/code&gt; directive. However,&#xA;there are some situations where directive-based usage is inconvenient. In such situations it is&#xA;useful to declare additional variables programmatically:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Process Application Event Listeners</title>
      <link>/manual/1.0/user-guide/process-applications/process-application-event-listeners/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/process-applications/process-application-event-listeners/</guid>
      <description>&lt;p&gt;The process engine supports defining two types of event listeners: &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/delegation-code/#execution-listener&#34;&gt;Task Event Listeners and Execution Event Listeners&lt;/a&gt;.&#xA;Task Event listeners allow to react to Task Events (Tasks are Created, Assigned, Completed). Execution Listeners allow to react to events fired as execution progresses through the diagram: Activities are Started, Ended and Transitions are being taken.&lt;/p&gt;&#xA;&lt;p&gt;When using the process application API, the process engine makes sure that Events are delegated to the right process application. For example, assume there is a process application deployed as &amp;ldquo;invoice.war&amp;rdquo; which deploys a process definition named &amp;ldquo;invoice&amp;rdquo;. The invoice process has a task named &amp;ldquo;archive invoice&amp;rdquo;. The application &amp;ldquo;invoice.war&amp;rdquo; further provides a Java Class implementing the &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/delegation-code/#execution-listener&#34;&gt;ExecutionListener&lt;/a&gt; interface and is configured to be invoked whenever the END event is fired on the &amp;ldquo;archive invoice&amp;rdquo; activity. The process engine makes sure that the event is delegated to the listener class located inside the process application:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Process Engine Concepts</title>
      <link>/manual/1.0/user-guide/process-engine/process-engine-concepts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/process-engine/process-engine-concepts/</guid>
      <description>&lt;p&gt;This section explains some core process engine concepts that are used in both the process engine API and the internal process engine implementation. Understanding these fundamentals makes it easier to use the process engine API.&lt;/p&gt;&#xA;&lt;h1 id=&#34;process-definitions&#34;&gt;Process Definitions&lt;/h1&gt;&#xA;&lt;p&gt;A process definition defines the structure of a process. You could say that the process definition &lt;em&gt;is&lt;/em&gt; the process. CIB seven uses &lt;a href=&#34;http://camunda.org/bpmn/tutorial.html&#34;&gt;BPMN 2.0&lt;/a&gt; as its primary modeling language for modeling process definitions.&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;note bg-info docs-info&#34;&gt;&#xA;  &lt;h3&gt;BPMN 2.0 Reference&lt;/h3&gt;&#xA;  &lt;p&gt;&lt;p&gt;CIB seven comes with two BPMN 2.0 References:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Process Instance View</title>
      <link>/manual/1.0/webapps/cockpit/bpmn/process-instance-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/webapps/cockpit/bpmn/process-instance-view/</guid>
      <description>&lt;figure class=&#34;image&#34;&gt;&#xA;  &lt;span&gt;&lt;img&#xA;      src=&#34;../../img/cockpit-process-instances-view.png&#34;&#xA;      &#xA;          title=&#34;Process Instance View&#34;&#xA;       /&gt;&lt;/span&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;Open the process instance view by selecting a process instance from the &lt;a href=&#34;/manual/1.0/manual/1.0/webapps/cockpit/bpmn/process-definition-view/&#34;&gt;process definition view&lt;/a&gt; instance list. This view allows you to drill down into a single process instance and explore its running activities as well as the variables, tasks, jobs, etc.&#xA;Beside the diagram view the process will be displayed as an &lt;a href=&#34;#activity-instance-tree&#34;&gt;activity instance tree view&lt;/a&gt;. Variables that belong to the instance will be listed in a variables table of the &lt;a href=&#34;#detailed-information-panel&#34;&gt;detailed information panel&lt;/a&gt;. Now you can select single or multiple (&amp;lsquo;ctrl + click&amp;rsquo;) flow nodes in the interactive BPMN 2.0 diagram or you can select an activity instance within the activity tree view. As diagram, tree view and variables table correspond with each other, the selected flow node will also be selected in the tree and the associated variables will be shown and vice versa.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Querying JSON</title>
      <link>/manual/1.0/reference/spin/json/03-querying-json/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/spin/json/03-querying-json/</guid>
      <description>&lt;p&gt;The JSON datatype supports querying with the &lt;a href=&#34;http://goessner.net/articles/JsonPath/&#34;&gt;JSONPath&lt;/a&gt; query language.&lt;/p&gt;&#xA;&lt;h1 id=&#34;querying-an-element&#34;&gt;Querying an Element&lt;/h1&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import static&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;org.camunda.spin.Spin.JSON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;json&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;{\&amp;#34;child\&amp;#34;: [{\&amp;#34;id\&amp;#34;: 1,\&amp;#34;name\&amp;#34;: \&amp;#34;Lucy\&amp;#34;,\&amp;#34;sex\&amp;#34;: \&amp;#34;female\&amp;#34;},{\&amp;#34;id\&amp;#34;: 2,\&amp;#34;name\&amp;#34;: \&amp;#34;Tracy\&amp;#34;,\&amp;#34;sex\&amp;#34;: \&amp;#34;female\&amp;#34;}],\&amp;#34;number\&amp;#34;: 1,\&amp;#34;boolean\&amp;#34;: true}&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SpinJsonNode&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;child&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;JSON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;json&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;jsonPath&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;$.child[0]&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;element&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;querying-an-element-list&#34;&gt;Querying an Element List&lt;/h1&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import static&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;org.camunda.spin.Spin.JSON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;json&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;{\&amp;#34;child\&amp;#34;: [{\&amp;#34;id\&amp;#34;: 1,\&amp;#34;name\&amp;#34;: \&amp;#34;Lucy\&amp;#34;,\&amp;#34;sex\&amp;#34;: \&amp;#34;female\&amp;#34;},{\&amp;#34;id\&amp;#34;: 2,\&amp;#34;name\&amp;#34;: \&amp;#34;Tracy\&amp;#34;,\&amp;#34;sex\&amp;#34;: \&amp;#34;female\&amp;#34;}],\&amp;#34;number\&amp;#34;: 1,\&amp;#34;boolean\&amp;#34;: true}&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SpinList&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SpinJsonNode&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;childs&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;JSON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;json&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;jsonPath&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;$.child&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;elementList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;querying-a-string&#34;&gt;Querying a String&lt;/h1&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import static&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;org.camunda.spin.Spin.JSON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;json&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;{\&amp;#34;child\&amp;#34;: [{\&amp;#34;id\&amp;#34;: 1,\&amp;#34;name\&amp;#34;: \&amp;#34;Lucy\&amp;#34;,\&amp;#34;sex\&amp;#34;: \&amp;#34;female\&amp;#34;},{\&amp;#34;id\&amp;#34;: 2,\&amp;#34;name\&amp;#34;: \&amp;#34;Tracy\&amp;#34;,\&amp;#34;sex\&amp;#34;: \&amp;#34;female\&amp;#34;}],\&amp;#34;number\&amp;#34;: 1,\&amp;#34;boolean\&amp;#34;: true}&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;JSON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;json&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;jsonPath&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;$.child[0].name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;stringValue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;querying-a-number&#34;&gt;Querying a Number&lt;/h1&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import static&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;org.camunda.spin.Spin.JSON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;json&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;{\&amp;#34;child\&amp;#34;: [{\&amp;#34;id\&amp;#34;: 1,\&amp;#34;name\&amp;#34;: \&amp;#34;Lucy\&amp;#34;,\&amp;#34;sex\&amp;#34;: \&amp;#34;female\&amp;#34;},{\&amp;#34;id\&amp;#34;: 2,\&amp;#34;name\&amp;#34;: \&amp;#34;Tracy\&amp;#34;,\&amp;#34;sex\&amp;#34;: \&amp;#34;female\&amp;#34;}],\&amp;#34;number\&amp;#34;: 1,\&amp;#34;boolean\&amp;#34;: true}&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Double&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;JSON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;json&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;jsonPath&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;$.number&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;numberValue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;querying-a-boolean&#34;&gt;Querying a Boolean&lt;/h1&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import static&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;org.camunda.spin.Spin.JSON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;json&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;{\&amp;#34;child\&amp;#34;: [{\&amp;#34;id\&amp;#34;: 1,\&amp;#34;name\&amp;#34;: \&amp;#34;Lucy\&amp;#34;,\&amp;#34;sex\&amp;#34;: \&amp;#34;female\&amp;#34;},{\&amp;#34;id\&amp;#34;: 2,\&amp;#34;name\&amp;#34;: \&amp;#34;Tracy\&amp;#34;,\&amp;#34;sex\&amp;#34;: \&amp;#34;female\&amp;#34;}],\&amp;#34;number\&amp;#34;: 1,\&amp;#34;boolean\&amp;#34;: true}&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Boolean&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;exists&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;JSON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;json&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;jsonPath&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;$.boolean&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;boolValue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;filtering-a-query&#34;&gt;Filtering a Query&lt;/h1&gt;&#xA;&lt;p&gt;Be aware that a filtering expression - the expression in the &lt;code&gt;()&lt;/code&gt; - is not allowed to contain double quotes!&lt;/p&gt;</description>
    </item>
    <item>
      <title>REST API</title>
      <link>/manual/1.0/user-guide/spring-boot-integration/rest-api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/spring-boot-integration/rest-api/</guid>
      <description>&lt;p&gt;To enable the &lt;a href=&#34;/manual/1.0/manual/1.0/reference/rest/&#34;&gt;REST API&lt;/a&gt; you can use the following starter in your &lt;code&gt;pom.xml&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.camunda.bpm.springboot&lt;span class=&#34;nt&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;camunda-bpm-spring-boot-starter-rest&lt;span class=&#34;nt&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;7.22.0-cibseven&lt;span class=&#34;nt&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Do not forget, that extra repository should be added to &lt;code&gt;settings.xml&lt;/code&gt; or to the POM file, since CIB seven is available yet only at &lt;a href=&#34;https://artifacts.cibseven.de/&#34;&gt;artifacts.cibseven.de&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;repositories&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;repository&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;id&amp;gt;&lt;/span&gt;mvn-cibseven-public&lt;span class=&#34;nt&#34;&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;CIB seven Public Repository&lt;span class=&#34;nt&#34;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;url&amp;gt;&lt;/span&gt;https://artifacts.cibseven.de/repository/public/&lt;span class=&#34;nt&#34;&gt;&amp;lt;/url&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/repository&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;/repositories&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;By default the application path is &lt;code&gt;engine-rest&lt;/code&gt;, so without any further configuration you can access the api at &lt;code&gt;http://localhost:8080/engine-rest&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>User Task</title>
      <link>/manual/1.0/reference/bpmn20/tasks/user-task/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/bpmn20/tasks/user-task/</guid>
      <description>&lt;p&gt;A User Task is used to model work that needs to be done by a human actor. When the process execution arrives at such a User Task, a new task is created in the task list of the user(s) or group(s) assigned to that task.&lt;/p&gt;&#xA;&lt;div class=&#34;bpmn-symbol&#34;&gt;&lt;img src=&#34;/manual/1.0/manual/1.0//img/short-codes/bpmn-user-task.png&#34; /&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;A User Task is defined in XML as follows. The id attribute is required, while the name attribute is optional.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;userTask&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;theTask&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Important task&amp;#34;&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;description&#34;&gt;Description&lt;/h1&gt;&#xA;&lt;p&gt;A User Task can also have a description. In fact, any BPMN 2.0 element can have a description. A description is defined by adding the documentation element.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Writing XML</title>
      <link>/manual/1.0/reference/spin/xml/03-writing-xml/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/spin/xml/03-writing-xml/</guid>
      <description>&lt;p&gt;The XML datatype supports writing XML to Strings, output streams or writers.&lt;/p&gt;&#xA;&lt;h1 id=&#34;writing-to-a-string&#34;&gt;Writing to a String:&lt;/h1&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import static&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;org.camunda.spin.Spin.XML&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;org.camunda.spin.xml.SpinXmlElement&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// Create XML element&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SpinXmlElement&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;element&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;XML&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;lt;root id=\&amp;#34;test\&amp;#34;/&amp;gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xml&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;element&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;toString&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;element&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;attr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;writing-to-an-output-stream&#34;&gt;Writing to an Output Stream:&lt;/h1&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import static&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;org.camunda.spin.Spin.XML&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;org.camunda.spin.xml.SpinXmlElement&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;org.camunda.spin.xml.SpinXmlAttribute&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// Create XML element&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SpinXmlElement&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;element&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;XML&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;lt;root id=\&amp;#34;test\&amp;#34;/&amp;gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// Define Output Stream&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;OutputStream&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;outputStream&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// Wrap Output Stream in Writer&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;OutputStreamWriter&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;outputStreamWriter&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;OutputStreamWriter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;outputStream&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// Write element to stream writer&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;element&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;writeToWriter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;outputStreamWriter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// Get attribute from element&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SpinXmlAttribute&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;attr&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;element&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;attr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// Write attribute value to stream writer&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;attr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;writeToWriter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;outputStreamWriter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// End Output Stream&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;outputStreamWriter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// Close Output Stream and Writer&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;outputStreamWriter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;catch&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;IOException&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// Handle exception if needed&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;write-to-writer&#34;&gt;Write to Writer&lt;/h1&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import static&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;org.camunda.spin.Spin.XML&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;org.camunda.spin.xml.SpinXmlElement&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;org.camunda.spin.xml.SpinXmlAttribute&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// Create XML element&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SpinXmlElement&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;element&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;XML&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;lt;root id=\&amp;#34;test\&amp;#34;/&amp;gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// Create String Writer&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;StringWriter&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;writer&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;StringWriter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// Write element to Writer&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;element&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;writeToWriter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;writer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// Get attribute from element&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SpinXmlAttribute&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;attr&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;element&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;attr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// Write attribute value to Writer&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;attr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;writeToWriter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;writer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>XML</title>
      <link>/manual/1.0/user-guide/data-formats/xml/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/data-formats/xml/</guid>
      <description>&lt;p&gt;For working with XML, the Spin functions &lt;code&gt;org.camunda.spin.Spin.S&lt;/code&gt; and &lt;code&gt;org.camunda.spin.Spin.XML&lt;/code&gt; can be used as entry points. The latter offers strongly-typed access to Spin&amp;rsquo;s XML API and is preferable when writing Java code. In scripting environments, only the &lt;code&gt;S&lt;/code&gt; function is available. The returned Spin wrapper offers methods for manipulating and writing XML as well as mapping XML to Java. Furthermore, the entry functions can be provided with Java objects that get implicitly converted to Spin&amp;rsquo;s intermediary XML format.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Process Application Resource Access</title>
      <link>/manual/1.0/user-guide/process-applications/process-application-resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/process-applications/process-application-resources/</guid>
      <description>&lt;p&gt;Process applications provide and logically group resources specific to the processes they contain. There are resources that are part of the application itself, like a classloader and its classes and resources, as well as resources managed by the process engine at runtime, like a set of &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/scripting/&#34;&gt;scripting engines&lt;/a&gt; or &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/data-formats/&#34;&gt;Spin data formats&lt;/a&gt;. This section describes under which conditions the process engine looks up resources on process application level and how that lookup can be enforced.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Run CIB seven using Karaf / OSGi</title>
      <link>/manual/1.0/installation/karaf-osgi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/installation/karaf-osgi/</guid>
      <description>&lt;h1 id=&#34;community-edition&#34;&gt;Community Edition&lt;/h1&gt;&#xA;&lt;p&gt;If you want to run Camunda with Karaf / OSGi, you can find the corresponding distributions on &lt;a href=&#34;https://github.com/camunda/camunda-bpm-platform-osgi/releases&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Boolean Inputs</title>
      <link>/manual/1.0/reference/forms/embedded-forms/controls/boolean-inputs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/forms/embedded-forms/controls/boolean-inputs/</guid>
      <description>&lt;h1 id=&#34;checkbox&#34;&gt;Checkbox&lt;/h1&gt;&#xA;&lt;p&gt;Checkboxes are HTML &lt;code&gt;&amp;lt;input type=&amp;quot;checkbox&amp;quot;&amp;gt;&lt;/code&gt; controls. Checkbox controls can be used for boolean&#xA;variable types.&lt;/p&gt;&#xA;&lt;h2 id=&#34;binding-a-checkbox-to-a-process-variable&#34;&gt;Binding a Checkbox to a Process Variable&lt;/h2&gt;&#xA;&lt;p&gt;A checkbox input can be bound to a process variable using the &lt;code&gt;cam-variable-type&lt;/code&gt; and &lt;code&gt;cam-variable-name&lt;/code&gt; directives:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;checkbox&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       &lt;span class=&#34;na&#34;&gt;cam-variable-name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;IS_VIP_CUSTOMER&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       &lt;span class=&#34;na&#34;&gt;cam-variable-type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Boolean&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In the example above, the checkbox is bound to the variable named &lt;code&gt;IS_VIP_CUSTOMER&lt;/code&gt; of type&#xA;&lt;code&gt;Boolean&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;supported-variable-types-for-checkboxes&#34;&gt;Supported Variable Types for Checkboxes&lt;/h2&gt;&#xA;&lt;p&gt;The checkbox input field only supports boolean variable types. A checked checkbox corresponds to&#xA;the value &lt;code&gt;true&lt;/code&gt;, an unchecked checkbox corresponds to the value &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Business Rule Task</title>
      <link>/manual/1.0/reference/bpmn20/tasks/business-rule-task/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/bpmn20/tasks/business-rule-task/</guid>
      <description>&lt;p&gt;A Business Rule Task is used to synchronously execute one or more rules. It is also possible to call Java code or providing a work item for an external worker to complete asynchronously or invoking a logic which is implemented in form of webservices.&lt;/p&gt;&#xA;&lt;div class=&#34;bpmn-symbol&#34;&gt;&lt;img src=&#34;/manual/1.0/manual/1.0//img/short-codes/bpmn-business-rule-task.png&#34; /&gt;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;using-camunda-dmn-engine&#34;&gt;Using Camunda DMN Engine&lt;/h1&gt;&#xA;&lt;p&gt;You can use the Camunda DMN engine integration to evaluate a DMN decision. You have&#xA;to specify the decision key to evaluate as the &lt;code&gt;camunda:decisionRef&lt;/code&gt; attribute. Additionally,&#xA;the &lt;code&gt;camunda:decisionRefBinding&lt;/code&gt; specifies which version of the decision should be evaluated.&#xA;Valid values are:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Contextual Programming Model</title>
      <link>/manual/1.0/user-guide/cdi-java-ee-integration/contextual-programming-model/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/cdi-java-ee-integration/contextual-programming-model/</guid>
      <description>&lt;p&gt;In this section we briefly look at the contextual process execution model used by the Camunda CDI extension.&lt;/p&gt;&#xA;&lt;p&gt;A BPMN business process is typically a long-running interaction, comprised of both user and system tasks.&#xA;At runtime, a process is split-up into a set of individual units of work, performed by users and/or application logic.&lt;/p&gt;&#xA;&lt;p&gt;In Camunda CDI, a process instance can be associated with a CDI scope, the association representing a unit of work.&#xA;This is particularly useful if a unit of work is complex, for instance if the implementation of a user task is a complex sequence&#xA;of different forms and &amp;ldquo;non-process-scoped&amp;rdquo; state needs to be kept during this interaction. In the default configuration,&#xA;process instances are associated with the &amp;ldquo;broadest&amp;rdquo; active scope, starting with the conversation and falling back to the request&#xA;if the conversation context is not active.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Custom implementation</title>
      <link>/manual/1.0/user-guide/process-engine/history/custom-implementation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/process-engine/history/custom-implementation/</guid>
      <description>&lt;h2 id=&#34;provide-a-custom-history-backend&#34;&gt;Provide a custom history backend&lt;/h2&gt;&#xA;&lt;p&gt;In order to understand how to provide a custom history backend, it is useful to first look at a more detailed view of the history architecture:&lt;/p&gt;&#xA;&lt;figure class=&#34;image&#34;&gt;&#xA;  &lt;span&gt;&lt;img&#xA;      src=&#34;../../img/process-engine-history-architecture.png&#34;&#xA;      &#xA;          title=&#34;History Architecture&#34;&#xA;       /&gt;&lt;/span&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;Whenever the state of a runtime entity is changed, the core execution component of the process engine fires History Events. In order to make this flexible, the actual creation of the History Events as well as populating the history events with data from the runtime structures is delegated to the History Event Producer. The producer is handed in the runtime data structures (such as an ExecutionEntity or a TaskEntity), creates a new History Event and populates it with data extracted from the runtime structures.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Data Types in the DMN Engine</title>
      <link>/manual/1.0/user-guide/dmn-engine/data-types/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/dmn-engine/data-types/</guid>
      <description>&lt;p&gt;A decision table allows to specify the types of inputs and outputs. When the&#xA;DMN engine evaluates an input or an output, it checks if the type of the&#xA;value matches the specified type. If the types do not match, the engine&#xA;tries to transform the value into the specified type or throws an exception.&lt;/p&gt;&#xA;&lt;p&gt;The DMN engine supports basic types which can be extended by custom types.&lt;/p&gt;&#xA;&lt;h1 id=&#34;supported-data-types&#34;&gt;Supported Data Types&lt;/h1&gt;&#xA;&lt;p&gt;The following types are supported by the DMN engine:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Debugging Scripts</title>
      <link>/manual/1.0/reference/forms/embedded-forms/javascript/debugging/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/forms/embedded-forms/javascript/debugging/</guid>
      <description>&lt;p&gt;If a form script is loaded using an XHR from a web server, it is executed using &lt;code&gt;eval()&lt;/code&gt;.&#xA;To debug it, you need to use browser-specific debugger extensions.&lt;/p&gt;&#xA;&lt;h1 id=&#34;debugging-form-scripts-in-google-chrome&#34;&gt;Debugging Form Scripts in Google Chrome&lt;/h1&gt;&#xA;&lt;p&gt;If you are using the Google Chrome debugger, you can add the &lt;code&gt;debugger;&lt;/code&gt; directive to the source&#xA;code of the script:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;form&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;role&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;form&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;cam-script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;text/form-script&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kr&#34;&gt;debugger&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;form&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Decision Task</title>
      <link>/manual/1.0/reference/cmmn11/tasks/decision-task/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/cmmn11/tasks/decision-task/</guid>
      <description>&lt;p&gt;A &lt;em&gt;decision task&lt;/em&gt; can be used to invoke a &lt;a href=&#34;/manual/1.0/manual/1.0/reference/dmn/&#34;&gt;DMN 1.3&lt;/a&gt; decision from a case.&lt;/p&gt;&#xA;&lt;div class=&#34;cmmn-symbol&#34;&gt;&lt;img src=&#34;/manual/1.0/manual/1.0//img/short-codes/cmmn-decision-task.png&#34; /&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;A decision task is a regular task that requires a &lt;code&gt;decisionRef&lt;/code&gt; attribute that references a&#xA;decision definition by its key. Such a decision task can be defined as follows:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;decisionTask&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;checkCreditDecision&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Check credit&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;na&#34;&gt;decisionRef=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;checkCreditDecision&amp;#34;&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Instead of the &lt;code&gt;decisionRef&lt;/code&gt; attribute it is also possible to use an expression which must evaluate&#xA;to a key of a decision definition at runtime.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Deployment View</title>
      <link>/manual/1.0/webapps/cockpit/deployment-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/webapps/cockpit/deployment-view/</guid>
      <description>&lt;figure class=&#34;image&#34;&gt;&#xA;  &lt;span&gt;&lt;img&#xA;      src=&#34;../img/cockpit-deployments-page.png&#34;&#xA;      &#xA;          title=&#34;Cockpit Deployment View&#34;&#xA;       /&gt;&lt;/span&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;The deployment view of Cockpit shows an overview of all deployments, their resources and the content of these resources. It allows the deletion of existing deployments as well as redeployment of old resources and the creation of new deployments. The content of resources within deployments can be displayed. It is also possible to download single resources from this view.&lt;/p&gt;&#xA;&lt;h1 id=&#34;search&#34;&gt;Search&lt;/h1&gt;&#xA;&lt;p&gt;Use the search field at the top of the list of deployments to find specific deployments. Similar to the search on the &lt;a href=&#34;/manual/1.0/manual/1.0/webapps/cockpit/dashboard/#search&#34;&gt;cockpit dashboard&lt;/a&gt; and in &lt;a href=&#34;/manual/1.0/manual/1.0/webapps/tasklist/dashboard/#search-for-tasks&#34;&gt;tasklist&lt;/a&gt;, it is possible to search deployments using an array of available criteria.&lt;/p&gt;</description>
    </item>
    <item>
      <title>DMN Hit Policy</title>
      <link>/manual/1.0/reference/dmn/decision-table/hit-policy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/dmn/decision-table/hit-policy/</guid>
      <description>&lt;figure class=&#34;image no-lightbox&#34;&gt;&#xA;  &lt;span&gt;&lt;img&#xA;      src=&#34;../img/hit-policy.png&#34;&#xA;      &#xA;          title=&#34;Hit Policy&#34;&#xA;       /&gt;&lt;/span&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;A decision table has a hit policy that specifies what the&#xA;results of the evaluation of a decision table consist of.&lt;/p&gt;&#xA;&lt;p&gt;The hit policy is set in the &lt;code&gt;hitPolicy&lt;/code&gt; attribute on the &lt;code&gt;decisionTable&lt;/code&gt; XML&#xA;element. If no hit policy is set, then the default hit policy &lt;code&gt;UNIQUE&lt;/code&gt; is used.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;definitions&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xmlns=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;https://www.omg.org/spec/DMN/20191111/MODEL/&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;definitions&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;definitions&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;namespace=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://camunda.org/schema/1.0/dmn&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;decision&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;dish&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Dish&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;decisionTable&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;decisionTable&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;hitPolicy=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;RULE ORDER&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;c&#34;&gt;&amp;lt;!-- .. --&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/decisionTable&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;/decision&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/definitions&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The following hit policies are&#xA;supported by the Camunda DMN engine:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Fluent Builder API</title>
      <link>/manual/1.0/user-guide/model-api/bpmn-model-api/fluent-builder-api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/model-api/bpmn-model-api/fluent-builder-api/</guid>
      <description>&lt;p&gt;To create simple BPMN processes we provide a fluent builder API. With this API you can easily create basic&#xA;processes in a few lines of code. In the &lt;a href=&#34;https://github.com/camunda/camunda-bpm-examples/tree/master/bpmn-model-api/generate-process-fluent-api&#34;&gt;generate process fluent api&lt;/a&gt; quickstart we&#xA;demonstrate how to create a rather complex process with 5 tasks and 2 gateways within less than 50 lines of code.&lt;/p&gt;&#xA;&lt;p&gt;The fluent builder API is not nearly complete but provides you with the following basic elements:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Full Example</title>
      <link>/manual/1.0/reference/forms/embedded-forms/integrate/full-examples/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/forms/embedded-forms/integrate/full-examples/</guid>
      <description>&lt;p&gt;Full examples of how to integrate the Forms SDK in a custom application can be found in the &lt;a href=&#34;https://github.com/camunda/camunda-bpm-examples&#34;&gt;CIB seven Examples Repository&lt;/a&gt; in Github.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/camunda/camunda-bpm-examples/tree/master/sdk-js/browser-forms&#34;&gt;Example for standalone usage of the SDK&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/camunda/camunda-bpm-examples/tree/master/sdk-js/browser-forms-angular&#34;&gt;Example for standalone usage of the SDK with AngularJS Integration&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Hypertext Application Language (HAL)</title>
      <link>/manual/1.0/reference/rest/overview/hal/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/rest/overview/hal/</guid>
      <description>&lt;p&gt;The REST API provides some resources in an additional media type. The&#xA;&lt;a href=&#34;http://stateless.co/hal_specification.html&#34;&gt;HAL&lt;/a&gt; media type &lt;code&gt;application/hal+json&lt;/code&gt; describes a format which contains&#xA;links and information about other resources. This allows us to embed the&#xA;process definition or assignee of a task directly into the response, which in turn&#xA;reduces the number of necessary requests to gather all information about a&#xA;single task or a list of tasks.&lt;/p&gt;&#xA;&lt;p&gt;To interact with &lt;code&gt;HAL&lt;/code&gt;, you have to set &lt;code&gt;application/hal+json&lt;/code&gt; as Accept header. The&#xA;response of a &lt;code&gt;HAL&lt;/code&gt; request always has the following structure:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Inclusive Gateway</title>
      <link>/manual/1.0/reference/bpmn20/gateways/inclusive-gateway/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/bpmn20/gateways/inclusive-gateway/</guid>
      <description>&lt;p&gt;The Inclusive Gateway can be seen as a combination of an exclusive and a parallel gateway. Like an exclusive gateway, you can define conditions on outgoing sequence flows and the inclusive gateway will evaluate them. However, the main difference is that the inclusive gateway can receive more than one sequence flow, like a parallel gateway.&lt;/p&gt;&#xA;&lt;p&gt;The functionality of the inclusive gateway is based on the incoming and outgoing sequence flows:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Invoke Decisions from Processes and Cases</title>
      <link>/manual/1.0/user-guide/process-engine/decisions/bpmn-cmmn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/process-engine/decisions/bpmn-cmmn/</guid>
      <description>&lt;h1 id=&#34;bpmn--cmmn-integration&#34;&gt;BPMN &amp;amp; CMMN Integration&lt;/h1&gt;&#xA;&lt;p&gt;This section explains how to invoke DMN decision from BPMN and CMMN.&lt;/p&gt;&#xA;&lt;h2 id=&#34;bpmn-business-rule-task&#34;&gt;BPMN Business Rule Task&lt;/h2&gt;&#xA;&lt;p&gt;The BPMN business rule task can reference a &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/decisions/repository/&#34;&gt;deployed&lt;/a&gt; decision&#xA;definition. The decision definition is evaluated when the task is executed.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;definitions&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;taskAssigneeExample&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;na&#34;&gt;xmlns=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://www.omg.org/spec/BPMN/20100524/MODEL&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;na&#34;&gt;xmlns:camunda=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://camunda.org/schema/1.0/bpmn&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;na&#34;&gt;targetNamespace=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Examples&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;process&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;process&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c&#34;&gt;&amp;lt;!-- ... --&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;businessRuleTask&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;businessRuleTask&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                      &lt;span class=&#34;na&#34;&gt;camunda:decisionRef=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;myDecision&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                      &lt;span class=&#34;na&#34;&gt;camunda:mapDecisionResult=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;singleEntry&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                      &lt;span class=&#34;na&#34;&gt;camunda:resultVariable=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;result&amp;#34;&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c&#34;&gt;&amp;lt;!-- ... --&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;/process&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/definitions&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For more information on how to reference a decision definition from a business&#xA;rule task, please refer to the &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/business-rule-task/&#34;&gt;BPMN 2.0 reference&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>JSON</title>
      <link>/manual/1.0/user-guide/data-formats/json/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/data-formats/json/</guid>
      <description>&lt;p&gt;For working with JSON, the Spin functions &lt;code&gt;org.camunda.spin.Spin.S&lt;/code&gt; and &lt;code&gt;org.camunda.spin.Spin.JSON&lt;/code&gt; can be used as entry points. The latter offers strongly-typed access to Spin&amp;rsquo;s JSON API and is preferable when writing Java code. In scripting environments, only the &lt;code&gt;S&lt;/code&gt; function is available. The returned Spin wrapper offers methods for manipulating and writing JSON as well as mapping JSON to Java. Furthermore, the entry functions can be provided with Java objects that get implicitly converted to Spin&amp;rsquo;s intermediary JSON format.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mapping JSON</title>
      <link>/manual/1.0/reference/spin/json/04-mapping-json/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/spin/json/04-mapping-json/</guid>
      <description>&lt;p&gt;Spin can deserialize JSON to Java objects and serialize Java objects to JSON by integrating Jackson&amp;rsquo;s mapping features into its fluent API.&lt;/p&gt;&#xA;&lt;h1 id=&#34;mapping-between-representations&#34;&gt;Mapping between Representations:&lt;/h1&gt;&#xA;&lt;p&gt;Assume we have a class &lt;code&gt;Customer&lt;/code&gt; defined as follows:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Customer&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;setName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;mapping-json-to-java&#34;&gt;Mapping JSON to Java:&lt;/h2&gt;&#xA;&lt;p&gt;We can map a JSON object &lt;code&gt;{&amp;quot;name&amp;quot; : &amp;quot;Kermit&amp;quot;}&lt;/code&gt; to an instance of &lt;code&gt;Customer&lt;/code&gt; as follows:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Maven Project Templates (Archetypes)</title>
      <link>/manual/1.0/user-guide/process-applications/maven-archetypes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/process-applications/maven-archetypes/</guid>
      <description>&lt;p&gt;We provide several project templates for Maven, which are also called Archetypes.&#xA;They enable a quickstart for developing production-ready process applications using CIB seven.&#xA;We incorporated best practices for different application types into the templates to help you start off with a solid base.&lt;/p&gt;&#xA;&lt;p&gt;The Archetypes can be used to generate projects as detailed in the different usage sections.&#xA;In case generating a project from an Archetype on your own is not feasible, we also provide a template GitHub repository for every Archetype.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Process Archive Configuration</title>
      <link>/manual/1.0/reference/deployment-descriptors/tags/process-archive/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/deployment-descriptors/tags/process-archive/</guid>
      <description>&lt;p&gt;The process archive tag allows configuration of a process engine deployment and can be used in the &lt;a href=&#34;/manual/1.0/manual/1.0/reference/deployment-descriptors/descriptors/processes-xml/&#34;&gt;processes.xml&lt;/a&gt; file.&lt;/p&gt;&#xA;&lt;p&gt;See the &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-applications/the-processes-xml-deployment-descriptor/&#34;&gt;processes.xml&lt;/a&gt; section of the &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/&#34;&gt;User Guide&lt;/a&gt; for more details.&lt;/p&gt;&#xA;&lt;h1 id=&#34;example&#34;&gt;Example&lt;/h1&gt;&#xA;&lt;p&gt;The following example shows a process-archive XML snippet:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;process-archive&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;loan-approval&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;process-engine&amp;gt;&lt;/span&gt;my-engine&lt;span class=&#34;nt&#34;&gt;&amp;lt;/process-engine&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;resource&amp;gt;&lt;/span&gt;bpmn/invoice.bpmn&lt;span class=&#34;nt&#34;&gt;&amp;lt;/resource&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;resource&amp;gt;&lt;/span&gt;bpmn/order-resource.bpmn&lt;span class=&#34;nt&#34;&gt;&amp;lt;/resource&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;properties&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;isDeleteUponUndeploy&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;false&lt;span class=&#34;nt&#34;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;isScanForProcessDefinitions&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;true&lt;span class=&#34;nt&#34;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;additionalResourceSuffixes&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;groovy,py&lt;span class=&#34;nt&#34;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;/properties&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/process-archive&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;syntax-reference&#34;&gt;Syntax Reference&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Tag name &lt;/th&gt;&#xA;    &lt;th&gt;Parent tag name&lt;/th&gt;&#xA;    &lt;th&gt;Required?&lt;/th&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;process-archive&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;process-application&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;true&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;        Container element for the configuration of a process archive (deployment).&#xA;      &lt;p&gt;&#xA;        &lt;strong&gt;Attributes:&lt;/strong&gt;&#xA;        &lt;ul&gt;&#xA;          &lt;li&gt;&lt;code&gt;name&lt;/code&gt;: Allows you to define the name of the process archive. The name will be used for the&#xA;            process engine deployment.&lt;/li&gt;&#xA;          &lt;li&gt;&lt;code&gt;tenantId&lt;/code&gt;: Allows you to define the tenant-id of the process archive. If a tenant-id is set then all containing resources will be deployed for the given tenant-id. See the User Guide for details about &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/multi-tenancy/#single-process-engine-with-tenant-identifiers&#34;&gt;Multi-Tenancy&lt;/a&gt;.&lt;/li&gt;&#xA;        &lt;/ul&gt;&#xA;      &lt;/p&gt;</description>
    </item>
    <item>
      <title>Process Variables</title>
      <link>/manual/1.0/user-guide/process-engine/variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/process-engine/variables/</guid>
      <description>&lt;p&gt;This section describes the concepts of variables in processes. Variables can be used to add data to process runtime state or, more particular, variable scopes. Various API methods that change the state of these entities allow updating of the attached variables. In general, a variable consists of a name and a value. The name is used for identification across process constructs. For example, if one activity sets a variable named &lt;em&gt;var&lt;/em&gt;, a follow-up activity can access it by using this name. The value of a variable is a Java object.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Querying XML</title>
      <link>/manual/1.0/reference/spin/xml/04-querying-xml/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/spin/xml/04-querying-xml/</guid>
      <description>&lt;p&gt;The XML datatype supports querying with the XPath 1.0 query language.&lt;/p&gt;&#xA;&lt;h1 id=&#34;querying-an-element&#34;&gt;Querying an Element&lt;/h1&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import static&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;org.camunda.spin.Spin.XML&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xml&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;lt;root&amp;gt;&amp;lt;child id=\&amp;#34;child\&amp;#34;&amp;gt;&amp;lt;a id=\&amp;#34;a\&amp;#34;/&amp;gt;&amp;lt;a id=\&amp;#34;b\&amp;#34;/&amp;gt;&amp;lt;/child&amp;gt;&amp;lt;/root&amp;gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SpinXmlTreeElement&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;child&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;XML&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xml&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;xPath&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;/root/child&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;element&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;querying-an-element-list&#34;&gt;Querying an Element List&lt;/h1&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import static&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;org.camunda.spin.Spin.XML&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xml&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;lt;root&amp;gt;&amp;lt;child id=\&amp;#34;child\&amp;#34;&amp;gt;&amp;lt;a id=\&amp;#34;a\&amp;#34;/&amp;gt;&amp;lt;a id=\&amp;#34;b\&amp;#34;/&amp;gt;&amp;lt;/child&amp;gt;&amp;lt;/root&amp;gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SpinList&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SpinXmlTreeElement&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;childs&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;XML&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xml&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;xPath&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;/root/child/a&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;elementList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;querying-an-attribute&#34;&gt;Querying an Attribute&lt;/h1&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import static&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;org.camunda.spin.Spin.XML&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xml&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;lt;root&amp;gt;&amp;lt;child id=\&amp;#34;child\&amp;#34;&amp;gt;&amp;lt;a id=\&amp;#34;a\&amp;#34;/&amp;gt;&amp;lt;a id=\&amp;#34;b\&amp;#34;/&amp;gt;&amp;lt;/child&amp;gt;&amp;lt;/root&amp;gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SpinXmlTreeAttribute&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;attribute&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;XML&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xml&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;xPath&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;/root/child/@id&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;attribute&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;querying-an-attribute-list&#34;&gt;Querying an Attribute List&lt;/h1&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import static&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;org.camunda.spin.Spin.XML&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xml&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;lt;root&amp;gt;&amp;lt;child id=\&amp;#34;child\&amp;#34;&amp;gt;&amp;lt;a id=\&amp;#34;a\&amp;#34;/&amp;gt;&amp;lt;a id=\&amp;#34;b\&amp;#34;/&amp;gt;&amp;lt;/child&amp;gt;&amp;lt;/root&amp;gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SpinList&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SpinXmlTreeAttribute&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;attributes&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;XML&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xml&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;xPath&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;/root/child/a/@id&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;attributeList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;querying-a-string&#34;&gt;Querying a String&lt;/h1&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import static&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;org.camunda.spin.Spin.XML&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xml&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;lt;root&amp;gt;&amp;lt;child id=\&amp;#34;child\&amp;#34;&amp;gt;&amp;lt;a id=\&amp;#34;a\&amp;#34;/&amp;gt;&amp;lt;a id=\&amp;#34;b\&amp;#34;/&amp;gt;&amp;lt;/child&amp;gt;&amp;lt;/root&amp;gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;XML&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xml&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;xPath&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;string(/root/child/@id)&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;querying-a-number&#34;&gt;Querying a Number&lt;/h1&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import static&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;org.camunda.spin.Spin.XML&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xml&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;lt;root&amp;gt;&amp;lt;child id=\&amp;#34;child\&amp;#34;&amp;gt;&amp;lt;a id=\&amp;#34;a\&amp;#34;/&amp;gt;&amp;lt;a id=\&amp;#34;b\&amp;#34;/&amp;gt;&amp;lt;/child&amp;gt;&amp;lt;/root&amp;gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Double&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;XML&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xml&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;xPath&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;count(/root/child/a)&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;number&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;querying-a-boolean&#34;&gt;Querying a Boolean&lt;/h1&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import static&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;org.camunda.spin.Spin.XML&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xml&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;lt;root&amp;gt;&amp;lt;child id=\&amp;#34;child\&amp;#34;&amp;gt;&amp;lt;a id=\&amp;#34;a\&amp;#34;/&amp;gt;&amp;lt;a id=\&amp;#34;b\&amp;#34;/&amp;gt;&amp;lt;/child&amp;gt;&amp;lt;/root&amp;gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Boolean&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;exists&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;XML&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xml&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;xPath&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;boolean(/root/child)&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;bool&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;querying-with-namespaces&#34;&gt;Querying with Namespaces&lt;/h1&gt;&#xA;&lt;p&gt;To use namespaces in spin with XML, you can choose one of the following methods or combine both of them.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Repetition Rule</title>
      <link>/manual/1.0/reference/cmmn11/markers/repetition-rule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/cmmn11/markers/repetition-rule/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Can be used with&lt;/strong&gt;: &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/tasks/&#34;&gt;Task&lt;/a&gt;, &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/grouping-tasks/stage/&#34;&gt;Stage&lt;/a&gt;, &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/milestone/&#34;&gt;Milestone&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;cmmn-symbol&#34;&gt;&lt;img src=&#34;/manual/1.0/manual/1.0//img/short-codes/cmmn-marker-repetition.png&#34; /&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Under which conditions a plan item is &lt;em&gt;repeatable&lt;/em&gt; can be specified by a &lt;em&gt;repetition rule&lt;/em&gt;.&lt;/p&gt;&#xA;&lt;p&gt;In XML, a repetition rule can be specified for an individual plan item or for a plan item definition. For a plan item it looks as follows:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;planItem&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;PlanItem_HumanTask&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;definitionRef=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;HumanTask&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;itemControl&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;repetitionRule&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;condition&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;![CDATA[${var &amp;lt; 100}]]&amp;gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/condition&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/repetitionRule&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;/itemControl&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/planItem&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;humanTask&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;HumanTask&amp;#34;&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For a plan item definition, the following XML can be used:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;planItem&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;PlanItem_HumanTask&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;definitionRef=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;HumanTask&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;humanTask&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;HumanTask_1&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;defaultControl&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;repetitionRule&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;condition&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;![CDATA[${var &amp;lt; 100}]]&amp;gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/condition&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/repetitionRule&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;/defaultControl&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/humanTask&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The rule specified in the &lt;code&gt;humanTask&lt;/code&gt; element is valid for all plan items that reference it, here &lt;code&gt;PlanItem_HumanTask_1&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Spring Beans in Processes</title>
      <link>/manual/1.0/user-guide/spring-framework-integration/expressions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/spring-framework-integration/expressions/</guid>
      <description>&lt;h1 id=&#34;limit-the-exposed-spring-beans&#34;&gt;Limit the exposed Spring Beans&lt;/h1&gt;&#xA;&lt;p&gt;When using the &lt;code&gt;ProcessEngineFactoryBean&lt;/code&gt;, by default, all expressions and scripts in the BPMN processes will also &amp;ldquo;see&amp;rdquo; all the Spring beans. It&amp;rsquo;s possible to limit the beans you want to expose or even expose no beans at all using a map that you can configure. The example below exposes a single bean (printer), available to use under the key &lt;code&gt;printer&lt;/code&gt;. To expose NO beans at all, pass an empty map as &lt;code&gt;beans&lt;/code&gt; property on the &lt;code&gt;SpringProcessEngineConfiguration&lt;/code&gt;. When no &lt;code&gt;beans&lt;/code&gt; property is set, all Spring beans in the context will be available.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Supported Environments</title>
      <link>/manual/1.0/introduction/supported-environments/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/introduction/supported-environments/</guid>
      <description>&lt;p&gt;Run Camunda in every Java-runnable environment. CIB seven is supported with our QA infrastructure in the following environments.&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;note bg-info docs-info&#34;&gt;&#xA;  &lt;h3&gt;Supported Environments&lt;/h3&gt;&#xA;  &lt;p&gt;Please note that the environments listed in this section depend on the version of CIB seven. Please select the corresponding version of this documentation to see the environment that fits to your version of CIB seven. e.g., &lt;a href=&#34;https://docs.cibseven.de/manual/1.0/introduction/supported-environments/#introduction-supported-environments&#34;&gt;supported environments for version 1.0&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;containerapplication-server-for-runtime-components&#34;&gt;Container/Application Server for Runtime Components&lt;/h1&gt;&#xA;&lt;h2 id=&#34;application-embedded-process-engine&#34;&gt;Application-Embedded Process Engine&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;All Java application servers&lt;/li&gt;&#xA;&lt;li&gt;Camunda Spring Boot Starter: Embedded Tomcat&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/spring-boot-integration/version-compatibility/&#34;&gt;Supported versions&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/spring-boot-integration/#supported-deployment-scenarios&#34;&gt;Deployment scenarios&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;CIB seven engine Quarkus Extension&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/quarkus-integration/version-compatibility/&#34;&gt;Supported versions&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/quarkus-integration/#supported-deployment-scenarios&#34;&gt;Deployment scenarios&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;container-managed-process-engine-and-camunda-cockpit-tasklist-admin&#34;&gt;Container-Managed Process Engine and Camunda Cockpit, Tasklist, Admin&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Apache Tomcat 9.0 / 10.1&lt;/li&gt;&#xA;&lt;li&gt;JBoss EAP 7.4 / 8.0&lt;/li&gt;&#xA;&lt;li&gt;WildFly Application Server 23.0 / 26.0 / 33.0&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;databases&#34;&gt;Databases&lt;/h1&gt;&#xA;&lt;h2 id=&#34;supported-database-products&#34;&gt;Supported Database Products&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;MySQL  8.0&lt;/li&gt;&#xA;&lt;li&gt;Oracle 19c / 23ai&lt;/li&gt;&#xA;&lt;li&gt;IBM DB2 11.5 (excluding IBM z/OS for all versions)&lt;/li&gt;&#xA;&lt;li&gt;PostgreSQL 14 / 15 / 16&lt;/li&gt;&#xA;&lt;li&gt;Amazon Aurora PostgreSQL compatible with PostgreSQL 14 / 15&lt;/li&gt;&#xA;&lt;li&gt;Microsoft SQL Server 2017 / 2019 / 2022 (see &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/database/mssql-configuration/&#34;&gt;Configuration Note&lt;/a&gt;)&lt;/li&gt;&#xA;&lt;li&gt;Microsoft Azure SQL with Camunda-supported SQL Server compatibility levels&#xA;(see &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/database/mssql-configuration/#azure-sql-compatibility-levels-supported-by-camunda&#34;&gt;Configuration Note&lt;/a&gt;):&#xA;&lt;ul&gt;&#xA;&lt;li&gt;SQL Server on Azure Virtual Machines&lt;/li&gt;&#xA;&lt;li&gt;Azure SQL Managed Instance&lt;/li&gt;&#xA;&lt;li&gt;Azure SQL Database&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;H2 2.3 (not recommended for &lt;a href=&#34;/manual/1.0/manual/1.0/introduction/architecture/#clustering-model&#34;&gt;Cluster Mode&lt;/a&gt; - see &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/deployments/&#34;&gt;Deployment Note&lt;/a&gt;)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;database-clustering--replication&#34;&gt;Database Clustering &amp;amp; Replication&lt;/h2&gt;&#xA;&lt;p&gt;Clustered or replicated databases are supported given the following conditions. The communication between Camunda and the database cluster has to match with the corresponding non-clustered / non-replicated configuration. It is especially important that the configuration of the database cluster guarantees the equivalent behavior of READ-COMMITTED isolation level.&lt;/p&gt;</description>
    </item>
    <item>
      <title>System Management</title>
      <link>/manual/1.0/webapps/admin/system-management/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/webapps/admin/system-management/</guid>
      <description>&lt;figure class=&#34;image&#34;&gt;&#xA;  &lt;span&gt;&lt;img&#xA;      src=&#34;../img/admin-system-management.png&#34;&#xA;      &#xA;          title=&#34;System Management&#34;&#xA;       /&gt;&lt;/span&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;The System Settings menu gives you general information about the process engine. It enables users with system permissions to access certain system information, including diagnostics, metrics.&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;note bg-info docs-info&#34;&gt;&#xA;  &lt;h3&gt;Accessing the System Settings menu&lt;/h3&gt;&#xA;  &lt;p&gt;The System Settings menu is only usable by users which are granted with &lt;em&gt;All&lt;/em&gt; permission for authorizations.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;diagnostics&#34;&gt;Diagnostics&lt;/h1&gt;&#xA;&lt;figure class=&#34;image&#34;&gt;&#xA;  &lt;span&gt;&lt;img&#xA;      src=&#34;../img/admin-diagnostics.png&#34;&#xA;      &#xA;          title=&#34;Diagnostics&#34;&#xA;       /&gt;&lt;/span&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;The &lt;strong&gt;Diagnostics&lt;/strong&gt; menu allows you to view and copy diagnostics data about your environment or distribution of Camunda. The main purpose of the &lt;strong&gt;Diagnostics&lt;/strong&gt; menu is to increase transparency by giving you easy access to important system diagnostics information. In the event of an issue, this should also improve problem diagnosis by enabling you to quickly understand and share the Camunda environment you are running.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Timer Events</title>
      <link>/manual/1.0/reference/bpmn20/events/timer-events/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/bpmn20/events/timer-events/</guid>
      <description>&lt;p&gt;Timer events are events which are triggered by a defined timer. They can be used as start event, intermediate event or boundary event. Boundary events can be interrupting or not.&lt;/p&gt;&#xA;&lt;div data-bpmn-diagram=&#34;../bpmn/event-timer&#34; &gt;&lt;/div&gt;&#xA;&lt;h1 id=&#34;configuration&#34;&gt;Configuration&lt;/h1&gt;&#xA;&lt;p&gt;Timers are only fired when the &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/the-job-executor/&#34;&gt;Job Executor&lt;/a&gt; is enabled.&lt;/p&gt;&#xA;&lt;h1 id=&#34;defining-a-timer&#34;&gt;Defining a Timer&lt;/h1&gt;&#xA;&lt;p&gt;Timers are configured using an &lt;a href=&#34;https://en.wikipedia.org/wiki/ISO_8601&#34;&gt;ISO 8601&lt;/a&gt; time format. A timer definition must have exactly one of the following elements.&lt;/p&gt;&#xA;&lt;h2 id=&#34;time-date&#34;&gt;Time Date&lt;/h2&gt;&#xA;&lt;p&gt;This format specifies a fixed time and date in adhering to the &lt;a href=&#34;https://en.wikipedia.org/wiki/ISO_8601&#34;&gt;ISO 8601&lt;/a&gt; format, when the trigger will be fired.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Transaction Subprocess</title>
      <link>/manual/1.0/reference/bpmn20/subprocesses/transaction-subprocess/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/bpmn20/subprocesses/transaction-subprocess/</guid>
      <description>&lt;p&gt;A transaction subprocess is an embedded subprocess which can be used to group multiple activities to a transaction. A transaction is a logical unit of work which allows grouping of a set of individual activities, so that they either succeed or fail collectively.&lt;/p&gt;&#xA;&lt;p&gt;A transaction can have three possible outcomes:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;A transaction is successful if it is neither canceled nor terminated by a hazard. If a transaction subprocess is successful, it is left using the outgoing sequenceflow(s). A successful transaction might be compensated if a compensation event is thrown later in the process.&lt;br/&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>User Assignment</title>
      <link>/manual/1.0/webapps/tasklist/user-assignment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/webapps/tasklist/user-assignment/</guid>
      <description>&lt;p&gt;For users to be able to work on the tasks they should work on, they must be able to find these tasks. Enabling users to find &lt;em&gt;&amp;ldquo;their&amp;rdquo;&lt;/em&gt; tasks requires the correct interaction between the initial assignment of the task and the filters configured in Tasklist.&lt;/p&gt;&#xA;&lt;p&gt;This works as follows:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Initial Assignment: when a task is created, it is initially assigned to a user or group according to the configuration in the BPMN process (or the CMMN case).&lt;/li&gt;&#xA;&lt;li&gt;Building Filters: &lt;a href=&#34;/manual/1.0/manual/1.0/webapps/tasklist/filters/&#34;&gt;filters&lt;/a&gt; then allow users to find tasks which are assigned to them or to the groups they belong to.&lt;/li&gt;&#xA;&lt;li&gt;Claiming group tasks: if a task is not directly assigned to a given user, the user must claim the task before working on it.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h1 id=&#34;implementing-initial-assignment&#34;&gt;Implementing Initial Assignment&lt;/h1&gt;&#xA;&lt;figure class=&#34;image&#34;&gt;&#xA;  &lt;span&gt;&lt;img&#xA;      src=&#34;../img/tasklist-task-form-modeler.png&#34;&#xA;      &#xA;          title=&#34;User Task Assignment&#34;&#xA;       /&gt;&lt;/span&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;You can read up on how to implement the inital user assignment for BPMN User Tasks and CMMN Human Tasks in the corresponding reference sections:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Web applications</title>
      <link>/manual/1.0/user-guide/spring-boot-integration/webapps/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/spring-boot-integration/webapps/</guid>
      <description>&lt;p&gt;To enable the &lt;a href=&#34;/manual/1.0/manual/1.0/webapps/&#34;&gt;Web Applications&lt;/a&gt; you can use the following starter in your &lt;code&gt;pom.xml&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.camunda.bpm.springboot&lt;span class=&#34;nt&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;camunda-bpm-spring-boot-starter-webapp&lt;span class=&#34;nt&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;7.22.0-cibseven&lt;span class=&#34;nt&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Do not forget, that extra repository should be added to &lt;code&gt;settings.xml&lt;/code&gt; or to the POM file, since CIB seven is available yet only at &lt;a href=&#34;https://artifacts.cibseven.de/&#34;&gt;artifacts.cibseven.de&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;repositories&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;repository&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;id&amp;gt;&lt;/span&gt;mvn-cibseven-public&lt;span class=&#34;nt&#34;&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;CIB seven Public Repository&lt;span class=&#34;nt&#34;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;url&amp;gt;&lt;/span&gt;https://artifacts.cibseven.de/repository/public/&lt;span class=&#34;nt&#34;&gt;&amp;lt;/url&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/repository&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;/repositories&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;By default the application path is &lt;code&gt;/camunda&lt;/code&gt;, so without any further configuration you can access&#xA;the Webapps under &lt;a href=&#34;http://localhost:8080/camunda/app/&#34;&gt;http://localhost:8080/camunda/app/&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Working with Json Data</title>
      <link>/manual/1.0/reference/forms/embedded-forms/json-data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/forms/embedded-forms/json-data/</guid>
      <description>&lt;h1 id=&#34;fetching-an-existing-json-variable&#34;&gt;Fetching an existing JSON Variable&lt;/h1&gt;&#xA;&lt;p&gt;The Form SDK will only fetch those variables which are actually used in a form. Since a JSON object is usually not bound to a single input field, we cannot use the &lt;code&gt;cam-variable-name&lt;/code&gt; directive.&#xA;We thus need to fetch the variable programatically:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;cam-script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;text/form-script&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;camForm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;form-loaded&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// tell the form SDK to fetch the variable named &amp;#39;customer&amp;#39;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;camForm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;variableManager&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;fetchVariable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;customer&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;camForm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;variables-fetched&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// work with the variable (bind it to the current AngularJS $scope)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;$scope&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;customer&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;camForm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;variableManager&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;variableValue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;customer&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;After that, you can work with the JSON object in your form, e.g., use it in input fields:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Admin Plugins</title>
      <link>/manual/1.0/webapps/admin/plugins/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/webapps/admin/plugins/</guid>
      <description>&lt;div class=&#34;note bg-info docs-info&#34;&gt;&#xA;  &lt;h3&gt;Plugin Compatibility&lt;/h3&gt;&#xA;  &lt;p&gt;Please note that the code of Admin plugins might need to be migrated when updating CIB seven to a higher version (e.g. CSS styles).&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Admin uses the concept of plugins to add own functionality without having to extend or hack the Admin web application.&lt;/p&gt;&#xA;&lt;p&gt;For further details about the concepts behind plugins, please read the &lt;a href=&#34;/manual/1.0/manual/1.0/webapps/cockpit/extend/plugins/&#34;&gt;Cockpit plugins section&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;note bg-warning docs-warning&#34;&gt;&#xA;  &lt;h3&gt;Difference between Cockpit and Admin plugins:&lt;/h3&gt;&#xA;  &lt;p&gt;&lt;ul&gt;&#xA;&lt;li&gt;To publish the plugin with Admin, its class name must be put into a file called &lt;code&gt;org.camunda.bpm.admin.plugin.spi.AdminPlugin&lt;/code&gt; that resides in the directory &lt;code&gt;META-INF/services&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;The plugin mechanism of Admin does not allow to provide additional SQL queries by using &lt;a href=&#34;http://www.mybatis.org/&#34;&gt;MyBatis&lt;/a&gt; mappings.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Built-In Beans</title>
      <link>/manual/1.0/user-guide/cdi-java-ee-integration/built-in-beans/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/cdi-java-ee-integration/built-in-beans/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;The &lt;code&gt;ProcessEngine&lt;/code&gt; as well as the services are available for injection via &lt;code&gt;@Inject ProcessEngine&lt;/code&gt;, &lt;code&gt;@Inject RepositoryService&lt;/code&gt;, and so on.&lt;/li&gt;&#xA;&lt;li&gt;A specific named &lt;code&gt;ProcessEngine&lt;/code&gt; and its services can be injected by adding the qualifier &lt;code&gt;@ProcessEngineName(&#39;someEngine&#39;)&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;The current process instance and task can be injected via &lt;code&gt;@Inject ProcessInstance&lt;/code&gt; or &lt;code&gt;@Inject Task&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;The current business key can be injected via &lt;code&gt;@Inject @BusinessKey String businessKey&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;The current process instance id be injected via &lt;code&gt;@Inject @ProcessInstanceId String pid&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Process variables are available for injection. Camunda CDI supports&lt;/p&gt;</description>
    </item>
    <item>
      <title>CIB seven Run</title>
      <link>/manual/1.0/user-guide/cibseven-run/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/cibseven-run/</guid>
      <description>&lt;p&gt;This guide gives an introduction to CIB seven Run, a pre-packaged, lightweight distribution of CIB seven. CIB seven Run is easy to configure and does not require Java knowledge.&lt;/p&gt;&#xA;&lt;h1 id=&#34;prerequisites-and-audience&#34;&gt;Prerequisites and audience&lt;/h1&gt;&#xA;&lt;p&gt;To use this guide, you should at least know what CIB seven is and what it does. Check out the &lt;a href=&#34;/manual/1.0/get-started/quick-start/&#34;&gt;Get Started guides&lt;/a&gt; if you have never used CIB seven before. The &lt;a href=&#34;/manual/1.0/manual/1.0/installation/cibseven-run/&#34;&gt;Installation guide&lt;/a&gt; is also worth looking at if you are completely new to CIB seven.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Configuration</title>
      <link>/manual/1.0/webapps/admin/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/webapps/admin/configuration/</guid>
      <description>&lt;p&gt;You can override the default configuration of admin using a central configuration file&#xA;located in &lt;code&gt;app/admin/scripts/config.js&lt;/code&gt;. The following configuration options are&#xA;available:&lt;/p&gt;&#xA;&lt;h1 id=&#34;ldap&#34;&gt;LDAP&lt;/h1&gt;&#xA;&lt;p&gt;If you connect CIB seven with the LDAP identity service, you have read-only access to the users and groups. Create new users and groups via the LDAP system, but not in the admin application. Find more information about how to configure the process engine in order to use the LDAP identity service &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/identity-service/#the-ldap-identity-service&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Configuring JSON Handling</title>
      <link>/manual/1.0/reference/spin/json/05-configuring-json/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/spin/json/05-configuring-json/</guid>
      <description>&lt;p&gt;Spin can be configured to change JSON parsing, writing and mapping settings, for example to tolerate documents that are not strictly compliant to the standard. Spin uses &lt;a href=&#34;http://wiki.fasterxml.com/JacksonHome&#34;&gt;Jackson&lt;/a&gt; to handle JSON. The JSON data format therefore uses an instance of &lt;code&gt;com.fasterxml.jackson.databind.ObjectMapper&lt;/code&gt; that can be configured using Spin&amp;rsquo;s &lt;a href=&#34;/manual/1.0/manual/1.0/reference/spin/extending-spin/#configuring-data-formats&#34;&gt;configuration mechanism&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;The data format class to register a configurator for is &lt;code&gt;org.camunda.spin.impl.json.jackson.format.JacksonJsonDataFormat&lt;/code&gt;. An instance of this class provides a setter for an &lt;code&gt;ObjectMapper&lt;/code&gt; that can be used to replace the default object mapper. This logic goes into a configurator class that implements the interface &lt;code&gt;org.camunda.spin.spi.DataFormatConfigurator&lt;/code&gt;. Please refer to the &lt;a href=&#34;https://fasterxml.github.io/jackson-databind/javadoc/2.4/&#34;&gt;Jackson&amp;rsquo;s documentation&lt;/a&gt; on what configuration options are available.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Error Events</title>
      <link>/manual/1.0/reference/bpmn20/events/error-events/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/bpmn20/events/error-events/</guid>
      <description>&lt;p&gt;Error events are events which are triggered by a defined error.&lt;/p&gt;&#xA;&lt;div data-bpmn-diagram=&#34;../bpmn/event-error&#34;&gt;&lt;/div&gt;&#xA;&lt;h1 id=&#34;business-errors-vs-technical-errors&#34;&gt;Business Errors vs. Technical Errors&lt;/h1&gt;&#xA;&lt;p&gt;A BPMN error is meant for business errors - which are different than technical exceptions. So, this is different than Java exceptions - which are, by default, handled in their own way.&lt;/p&gt;&#xA;&lt;p&gt;You might also want to check out the basics of &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/transactions-in-processes/#transaction-boundaries&#34;&gt;Threading and Transactions&lt;/a&gt; in the &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/&#34;&gt;User Guide&lt;/a&gt; first.&lt;/p&gt;&#xA;&lt;h1 id=&#34;defining-an-error&#34;&gt;Defining an Error&lt;/h1&gt;&#xA;&lt;p&gt;An error event definition references an error element. The following is an example of an error end event, referencing an error declaration:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Event-based Gateway</title>
      <link>/manual/1.0/reference/bpmn20/gateways/event-based-gateway/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/bpmn20/gateways/event-based-gateway/</guid>
      <description>&lt;p&gt;The event-based Gateway allows you to make a decision based on events. Each outgoing sequence flow of the gateway needs to be connected to an intermediate catching event. When process execution reaches an event-based Gateway, the gateway acts like a wait state: execution is suspended. In addition, an event subscription is created for each outgoing sequence flow.&lt;/p&gt;&#xA;&lt;p&gt;Note that the sequence flows running out of an event-based Gateway are different than ordinary sequence flows. These sequence flows are never actually &amp;ldquo;executed&amp;rdquo;. On the contrary, they allow the process engine to determine which events an execution arriving at an event-based Gateway needs to subscribe to. The following restrictions apply:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Extensions</title>
      <link>/manual/1.0/introduction/extensions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/introduction/extensions/</guid>
      <description>&lt;p&gt;CIB seven is developed by CIB software and Camunda as an open source project in collaboration with the community.&lt;/p&gt;&#xA;&lt;h1 id=&#34;community-extensions&#34;&gt;Community Extensions&lt;/h1&gt;&#xA;&lt;p&gt;CIB seven supports the community in its effort to build additional community extensions under the CIB seven umbrella. Such community extensions are maintained by the community and are not part of the CIB seven product.&lt;/p&gt;&#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/camunda-community-hub&#34;&gt;Camunda Community Hub&lt;/a&gt; is a GitHub organization that serves as the home of Camunda open source, community-contributed extensions. You can migrate an extension you&amp;rsquo;ve built to the Hub, search for existing extensions, or get started with open source by helping community extension maintainers with open issue or pull request triage.&lt;/p&gt;</description>
    </item>
    <item>
      <title>FEEL Engine Legacy Behavior</title>
      <link>/manual/1.0/user-guide/dmn-engine/feel/legacy-behavior/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/dmn-engine/feel/legacy-behavior/</guid>
      <description>&lt;p&gt;If you come from a Camunda version &amp;lt;= 7.12.x and already use FEEL, it might be that you need to&#xA;migrate your DMN models. Refer Camunda docs on how to do this.&lt;/p&gt;&#xA;&lt;p&gt;If you don&amp;rsquo;t want to migrate your DMN models right now, you can also restore the legacy FEEL&#xA;behavior by flipping a config flag:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;To see how this legacy behavior can be enabled again in CIB seven, please see the&#xA;&lt;a href=&#34;/manual/1.0/manual/1.0/reference/deployment-descriptors/tags/process-engine/#dmnFeelEnableLegacyBehavior&#34;&gt;dmnFeelEnableLegacyBehavior&lt;/a&gt; engine configuration property.&lt;/li&gt;&#xA;&lt;li&gt;To enable this behavior in a standalone DMN Engine setup, please refer to the &lt;code&gt;DefaultDmnEngineConfiguration&lt;/code&gt;&#xA;&lt;a href=&#34;/manual/1.0/manual/1.0/reference/javadoc/org/camunda/bpm/dmn/engine/impl/DefaultDmnEngineConfiguration.html#enableFeelLegacyBehavior&#34;&gt;enableFeelLegacyBehavior&lt;/a&gt; and &lt;a href=&#34;/manual/1.0/manual/1.0/reference/javadoc/org/camunda/bpm/dmn/engine/impl/DefaultDmnEngineConfiguration.html#setEnableFeelLegacyBehavior&#34;&gt;setEnableFeelLegacyBehavior&lt;/a&gt;&#xA;methods&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;div class=&#34;note bg-info docs-info&#34;&gt;&#xA;  &lt;h3&gt;Heads Up!&lt;/h3&gt;&#xA;  &lt;p&gt;By using the legacy FEEL Engine, the Camunda DMN Engine &lt;strong&gt;only&lt;/strong&gt; supports &lt;code&gt;FEEL&lt;/code&gt; for&#xA;&lt;a href=&#34;/manual/1.0/manual/1.0/reference/dmn/decision-table/rule/#input-entry-condition&#34;&gt;Input Entries&lt;/a&gt; of a decision table – this corresponds to FEEL&#xA;simple unary tests.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Generating a Business Key</title>
      <link>/manual/1.0/reference/forms/embedded-forms/javascript/generating-businesskey/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/forms/embedded-forms/javascript/generating-businesskey/</guid>
      <description>&lt;p&gt;The following example shows how you can generate a business key using Javascript:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;form&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;role&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;form&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;cam-script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;text/form-script&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;camForm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;submit&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;camForm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;businessKey&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;some-generated-value&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;form&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;As you can see, you can set the &lt;code&gt;businessKey&lt;/code&gt; variable on the &lt;code&gt;camForm&lt;/code&gt; object. The value you set&#xA;will be submitted in the start process instance request.&lt;/p&gt;&#xA;&lt;p&gt;Note that the business key can only be set when a process instance is started, not when completing a&#xA;task.&lt;/p&gt;</description>
    </item>
    <item>
      <title>History for DMN Decisions</title>
      <link>/manual/1.0/user-guide/process-engine/decisions/history/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/process-engine/decisions/history/</guid>
      <description>&lt;p&gt;After a decision definition has been evaluated either from a BPMN process, CMMN&#xA;case or through the Decision Service, the inputs and outputs are saved in the&#xA;History of the platform. The history entity is of type&#xA;&lt;code&gt;HistoricDecisionInstance&lt;/code&gt; and has the event type &lt;code&gt;evaluate&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;For details about the history mechanism as such, refer to the &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/history/history-configuration/&#34;&gt;History and Audit&#xA;Event Log&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;note bg-info docs-info&#34;&gt;&#xA;  &lt;h3&gt;History Level&lt;/h3&gt;&#xA;  &lt;p&gt;History level &lt;strong&gt;FULL&lt;/strong&gt; is required. Otherwise, no history&#xA;for decisions is created.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mapping XML</title>
      <link>/manual/1.0/reference/spin/xml/05-mapping-xml/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/spin/xml/05-mapping-xml/</guid>
      <description>&lt;p&gt;Spin can deserialize XML to Java objects and serialize the annotated Java objects to XML by integrating mapping features into its fluent API. JAXB annotations can be added to the involved Java classes to configure the (de-)serialization process but are not required.&lt;/p&gt;&#xA;&lt;h1 id=&#34;mapping-between-representations&#34;&gt;Mapping between Representations:&lt;/h1&gt;&#xA;&lt;p&gt;Assume we have a class &lt;code&gt;Customer&lt;/code&gt; defined as follows:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@XmlRootElement&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;customer&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://camunda.org/test&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Customer&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nd&#34;&gt;@XmlElement&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://camunda.org/test&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;setName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;mapping-xml-to-java&#34;&gt;Mapping XML to Java:&lt;/h2&gt;&#xA;&lt;p&gt;We can map the following XML object&lt;/p&gt;</description>
    </item>
    <item>
      <title>Milestones</title>
      <link>/manual/1.0/reference/cmmn11/milestone/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/cmmn11/milestone/</guid>
      <description>&lt;p&gt;A &lt;em&gt;milestone&lt;/em&gt; is used to represent achievable targets within the case. It is not associated with any work but rather marks that certain conditions have been reached within the case. As a milestone is a regular plan item definition, a milestone&amp;rsquo;s completion may be used as entry criteria for other tasks and stages. This way, a milestone can be used to bring logical stages within a case into order.&lt;/p&gt;&#xA;&lt;div class=&#34;cmmn-symbol&#34;&gt;&lt;img src=&#34;/manual/1.0/manual/1.0//img/short-codes/cmmn-milestone.png&#34; /&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;In XML, a milestone is defined as follows:&lt;/p&gt;</description>
    </item>
    <item>
      <title>MySQL Database Configuration</title>
      <link>/manual/1.0/user-guide/process-engine/database/mysql-configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/process-engine/database/mysql-configuration/</guid>
      <description>&lt;p&gt;This section documents the supported MySQL configuration.&lt;/p&gt;&#xA;&lt;h2 id=&#34;database-schema&#34;&gt;Database Schema&lt;/h2&gt;&#xA;&lt;p&gt;The engine&amp;rsquo;s MySQL database schema does not support milliseconds precision for the column types &lt;code&gt;TIMESTAMP&lt;/code&gt; and &lt;code&gt;DATETIME&lt;/code&gt;:&#xA;I.e., a to be stored value is rounded to the next or previous second, e.g., &lt;code&gt;2021-01-01 15:00:46.731&lt;/code&gt; is rounded to &lt;code&gt;2021-01-01 15:00:47&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;note bg-info docs-info&#34;&gt;&#xA;  &lt;h3&gt;Heads Up!&lt;/h3&gt;&#xA;  &lt;p&gt;The missing millisecond’s precision for date/time values impacts the process engine&amp;rsquo;s behavior.&#xA;Please read &lt;a href=&#34;#jdbc-driver-configuration&#34;&gt;how to configure the MySQL JDBC Driver&lt;/a&gt;&#xA;to ensure that date/time values are handled correctly.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Process applications</title>
      <link>/manual/1.0/user-guide/spring-boot-integration/process-applications/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/spring-boot-integration/process-applications/</guid>
      <description>&lt;p&gt;By default, the camunda-spring-boot-starter is configured to use the &lt;code&gt;SpringProcessEngineConfiguration&lt;/code&gt; auto deployment feature.&#xA;Since 1.2.0 you also have the possibility to do so via &lt;code&gt;SpringBootProcessApplication&lt;/code&gt;. This disables the &lt;code&gt;SpringProcessEngineConfiguration&lt;/code&gt;&#xA;auto-deploy feature and instead uses the required &lt;code&gt;META-INF/processes.xml&lt;/code&gt; as an indicator for resource scanning.&#xA;This also allows all &lt;code&gt;processes.xml&lt;/code&gt; configuration features described [here] (/manual/1.0/user-guide/process-applications/the-processes-xml-deployment-descriptor/).&lt;/p&gt;&#xA;&lt;p&gt;To use it, just add the &lt;code&gt;@EnableProcessApplication&lt;/code&gt; annotation to your Spring Boot application class:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@SpringBootApplication&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nd&#34;&gt;@EnableProcessApplication&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;myProcessApplicationName&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;MyApplication&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Some configuration can be done via Spring Boot configuration parameters. Check &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/spring-boot-integration/configuration/#camunda-bpm-application&#34;&gt;the list of currently available parameters&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Process Engine Configuration</title>
      <link>/manual/1.0/reference/deployment-descriptors/tags/process-engine/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/deployment-descriptors/tags/process-engine/</guid>
      <description>&lt;p&gt;The process engine configuration can be placed in both &lt;a href=&#34;/manual/1.0/manual/1.0/reference/deployment-descriptors/descriptors/processes-xml/&#34;&gt;processes.xml&lt;/a&gt; and the &lt;a href=&#34;/manual/1.0/manual/1.0/reference/deployment-descriptors/descriptors/bpm-platform-xml/&#34;&gt;bpm-platform.xml&lt;/a&gt; files. If the process engine is configured in either or both of those files, it will be bootstrapped by the CIB seven infrastructure and be made available through &lt;code&gt;BpmPlatform.getProcessEngineService().getProcessEngine(&amp;quot;name of process engine&amp;quot;)&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;h1 id=&#34;example&#34;&gt;Example&lt;/h1&gt;&#xA;&lt;p&gt;The following example shows an XML snippet which can be placed in both &lt;a href=&#34;/manual/1.0/manual/1.0/reference/deployment-descriptors/descriptors/processes-xml/&#34;&gt;processes.xml&lt;/a&gt; and/or &lt;a href=&#34;/manual/1.0/manual/1.0/reference/deployment-descriptors/descriptors/bpm-platform-xml/&#34;&gt;bpm-platform.xml&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;process-engine&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;default&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;job-acquisition&amp;gt;&lt;/span&gt;default&lt;span class=&#34;nt&#34;&gt;&amp;lt;/job-acquisition&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;org.camunda.bpm.engine.impl.cfg.StandaloneProcessEngineConfiguration&lt;span class=&#34;nt&#34;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;datasource&amp;gt;&lt;/span&gt;java:jdbc/ProcessEngine&lt;span class=&#34;nt&#34;&gt;&amp;lt;/datasource&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;properties&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;history&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;full&lt;span class=&#34;nt&#34;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;databaseSchemaUpdate&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;true&lt;span class=&#34;nt&#34;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;authorizationEnabled&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;true&lt;span class=&#34;nt&#34;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;/properties&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/process-engine&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;syntax-reference&#34;&gt;Syntax Reference&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Tag name &lt;/th&gt;&#xA;    &lt;th&gt;Parent tag name&lt;/th&gt;&#xA;    &lt;th&gt;Required?&lt;/th&gt;&#xA;    &lt;th&gt;Description&lt;/th&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;process-engine&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;process-application&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;bpm-platform&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;    &lt;td&gt;true&lt;/td&gt;&#xA;    &lt;td&gt;&#xA;        Container element for the configuration of a process engine.&#xA;      &lt;p&gt;&#xA;        &lt;strong&gt;Attributes:&lt;/strong&gt;&#xA;        &lt;ul&gt;&#xA;          &lt;li&gt;&lt;code&gt;name&lt;/code&gt;: allows you to define the name of the process engine (Required).&lt;/li&gt;&#xA;        &lt;/ul&gt;&#xA;      &lt;/p&gt;</description>
    </item>
    <item>
      <title>Process Instance Modification</title>
      <link>/manual/1.0/user-guide/process-engine/process-instance-modification/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/process-engine/process-instance-modification/</guid>
      <description>&lt;p&gt;While the process model contains sequence flows that define in which order activities must be executed, sometimes it is desired to flexibly start an activity again or cancel a running activity. For example, this can be useful when the process model contains an error, such as a wrong sequence flow condition, and running process instances need to be corrected. Use cases for this API may be&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Repairing process instances in which some steps have to be repeated or skipped&lt;/li&gt;&#xA;&lt;li&gt;Migrating process instances from one version of a process definition to another&lt;/li&gt;&#xA;&lt;li&gt;Testing: Activities can be skipped or repeated for isolated testing of individual process segments&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;To perform such an operation, the process engine offers the &lt;em&gt;process instance modification API&lt;/em&gt; that is entered via &lt;code&gt;RuntimeService.createProcessInstanceModification(...)&lt;/code&gt; or&#xA;&lt;code&gt;RuntimeService.createModification(...)&lt;/code&gt;. This API allows to specify multiple &lt;em&gt;modification instructions&lt;/em&gt; in one call by using a fluent builder. In particular, it is possible to:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Process Instance Restart</title>
      <link>/manual/1.0/user-guide/process-engine/process-instance-restart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/process-engine/process-instance-restart/</guid>
      <description>&lt;p&gt;After a process instance termination, its historic data still exists and can be accessed to restore a process instance, provided that the history level is set to FULL.&#xA;This can, for example, be useful when termination did not proceed in a desired way. Use cases for this API may be:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Restoring the last state of process instances that have been erroneously canceled&lt;/li&gt;&#xA;&lt;li&gt;Restarting process instances after a termination caused by a wrong decision&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;To perform such an operation the process engine offers &lt;em&gt;the process instance restart API&lt;/em&gt;, that is entered via &lt;code&gt;RuntimeService.restartProcessInstances(...)&lt;/code&gt;. This API allows to specify multiple instantiation instructions in one call by using a fluent builder.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Repository Service</title>
      <link>/manual/1.0/user-guide/model-api/bpmn-model-api/respository-service/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/model-api/bpmn-model-api/respository-service/</guid>
      <description>&lt;p&gt;It is also possible to access the BPMN model instance by the process definition id using the &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/process-engine-api/#services-api&#34;&gt;Repository Service&lt;/a&gt;, as the following incomplete test sample code shows. Please see the &lt;a href=&#34;https://github.com/camunda/camunda-bpm-examples/tree/master/bpmn-model-api/generate-jsf-form&#34;&gt;generate-jsf-form&lt;/a&gt; quickstart for a complete example.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;testRepositoryService&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;runtimeService&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;startProcessInstanceByKey&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PROCESS_KEY&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;processDefinitionId&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;repositoryService&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;createProcessDefinitionQuery&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;processDefinitionKey&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PROCESS_KEY&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;singleResult&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BpmnModelInstance&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;modelInstance&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;repositoryService&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getBpmnModelInstance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;processDefinitionId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Repository Service</title>
      <link>/manual/1.0/user-guide/model-api/cmmn-model-api/repository-service/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/model-api/cmmn-model-api/repository-service/</guid>
      <description>&lt;p&gt;It is also possible to access the CMMN model instance by the case definition id using the &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/process-engine-api/#services-api&#34;&gt;Repository Service&lt;/a&gt;, as the following incomplete test sample code shows.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;testRepositoryService&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;caseDefinitionId&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;repositoryService&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;createCaseDefinitionQuery&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;caseDefinitionKey&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;CASE_KEY&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;singleResult&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;CmmnModelInstance&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;modelInstance&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;repositoryService&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getCmmnModelInstance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;caseDefinitionId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Repository Service</title>
      <link>/manual/1.0/user-guide/model-api/dmn-model-api/repository-service/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/model-api/dmn-model-api/repository-service/</guid>
      <description>&lt;p&gt;It is also possible to access the DMN model instance by the decision definition id using the &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/process-engine-api/#services-api&#34;&gt;Repository Service&lt;/a&gt;, as the following incomplete test sample code shows:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;testRepositoryService&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decisionDefinitionId&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;repositoryService&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;createDecisionDefinitionQuery&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;decisionDefinitionKey&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DECISION_KEY&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;singleResult&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DmnModelInstance&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;modelInstance&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;repositoryService&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getDmnModelInstance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decisionDefinitionId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Script Task</title>
      <link>/manual/1.0/reference/bpmn20/tasks/script-task/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/bpmn20/tasks/script-task/</guid>
      <description>&lt;p&gt;A Script Task is an automated activity. When a process execution arrives at the Script Task, the corresponding script is executed.&lt;/p&gt;&#xA;&lt;div class=&#34;bpmn-symbol&#34;&gt;&lt;img src=&#34;/manual/1.0/manual/1.0//img/short-codes/bpmn-script-task.png&#34; /&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;A Script Task is defined by specifying the script and the scriptFormat.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;scriptTask&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;theScriptTask&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Execute script&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;scriptFormat=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;groovy&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    sum = 0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    for ( i in inputArray ) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      sum += i&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/scriptTask&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The value of the scriptFormat attribute must be a name that is compatible with JSR-223 (Scripting&#xA;for the Java Platform). If you want to use a (JSR-223 compatible) scripting engine, you need to to&#xA;add the corresponding jar to the classpath and use the appropriate name.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Selects</title>
      <link>/manual/1.0/reference/forms/embedded-forms/controls/select/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/forms/embedded-forms/controls/select/</guid>
      <description>&lt;p&gt;Select boxes are HTML controls of the form of&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;binding-to-a-process-variable&#34;&gt;Binding to a Process Variable&lt;/h1&gt;&#xA;&lt;p&gt;A select box can be bound to a process variable using the &lt;code&gt;cam-variable-name&lt;/code&gt; directive:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;cam-variable-name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;foo&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;na&#34;&gt;cam-variable-type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;String&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;option&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;bar&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;option&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;option&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;zar&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;option&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;supported-variable-types&#34;&gt;Supported Variable Types&lt;/h1&gt;&#xA;&lt;p&gt;The select box supports the same value types as &lt;code&gt;&amp;lt;input type=&amp;quot;text&amp;quot;&amp;gt;&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;h1 id=&#34;populating-the-options-from-a-variable&#34;&gt;Populating the Options from a Variable&lt;/h1&gt;&#xA;&lt;p&gt;The &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; entries can be populated using a variable. The name of the variable can be provided using the &lt;code&gt;cam-choices&lt;/code&gt; directive:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Spring-Based Testing</title>
      <link>/manual/1.0/user-guide/spring-framework-integration/testing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/spring-framework-integration/testing/</guid>
      <description>&lt;p&gt;When integrating with Spring, business processes can be tested very easily (in scope 2, see &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/testing/#scoping-tests&#34;&gt;Testing Scopes&lt;/a&gt;) using the standard Camunda testing facilities. The following example shows how a business process is tested in a typical Spring-based unit test:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@RunWith&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SpringJUnit4ClassRunner&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nd&#34;&gt;@ContextConfiguration&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;classpath:org/camunda/bpm/engine/spring/test/junit4/springTypicalUsageTest-context.xml&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;MyBusinessProcessTest&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nd&#34;&gt;@Autowired&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;RuntimeService&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;runtimeService&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nd&#34;&gt;@Autowired&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;TaskService&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;taskService&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nd&#34;&gt;@Autowired&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nd&#34;&gt;@Rule&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ProcessEngineRule&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;processEngineRule&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nd&#34;&gt;@Test&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nd&#34;&gt;@Deployment&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;simpleProcessTest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;runtimeService&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;startProcessInstanceByKey&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;simpleProcess&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Task&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;task&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;taskService&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;createTaskQuery&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;singleResult&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;assertEquals&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;My Task&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;task&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;taskService&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;complete&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;task&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;assertEquals&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;runtimeService&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;createProcessInstanceQuery&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note that for this to work, you need to define a &lt;a href=&#34;/manual/1.0/javadoc/cibseven/1.0/org/camunda/bpm/engine/test/ProcessEngineRule.html&#34;&gt;ProcessEngineRule&lt;/a&gt;&#xA; bean in the Spring configuration (which is injected by auto-wiring in the example above).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Task Lifecycle</title>
      <link>/manual/1.0/webapps/tasklist/task-lifecycle/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/webapps/tasklist/task-lifecycle/</guid>
      <description>&lt;p&gt;The diagram below shows the task lifecycle and supported transitions supported by Camunda. To get to know how to programmatically work with the lifecycle in your application, refer to the &lt;a href=&#34;/manual/1.0/javadoc/cibseven/1.0/org/camunda/bpm/engine/impl/TaskServiceImpl.html&#34;&gt;Java-API Reference&lt;/a&gt;&#xA;.&lt;/p&gt;&#xA;&lt;figure class=&#34;image&#34;&gt;&#xA;  &lt;span&gt;&lt;img&#xA;      src=&#34;../img/tasklist-user-task-state-complete.png&#34;&#xA;      &#xA;          title=&#34;User Task States&#34;&#xA;       /&gt;&lt;/span&gt;&#xA;&lt;/figure&gt;</description>
    </item>
    <item>
      <title>Testing Decisions with the DMN Engine</title>
      <link>/manual/1.0/user-guide/dmn-engine/testing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/dmn-engine/testing/</guid>
      <description>&lt;p&gt;To easily test DMN decisions in a JUnit test, the DMN engine provides a&#xA;JUnit Rule. The &lt;a href=&#34;/manual/1.0/javadoc/cibseven/1.0/org/camunda/bpm/dmn/engine/test/DmnEngineRule.html&#34;&gt;DmnEngineRule&lt;/a&gt;&#xA; creates a new default DMN engine. The DMN engine can be used in test cases to parse and evaluate decisions.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;DecisionTest&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nd&#34;&gt;@Rule&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DmnEngineRule&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dmnEngineRule&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DmnEngineRule&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nd&#34;&gt;@Test&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DmnEngine&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dmnEngine&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dmnEngineRule&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getDmnEngine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// load DMN file&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;InputStream&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;inputStream&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//create and add variables&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;VariableMap&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;variables&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Variables&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;createVariables&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DmnDecision&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decision&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dmnEngine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;parseDecision&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;decision&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;inputStream&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DmnDecisionResult&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dmnEngine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;evaluateDecision&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decision&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;variables&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// assert the result&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// ...&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you want to create a DMN engine with a custom configuration, you can pass&#xA;this to the DMN engine rule.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Camunda WildFly Subsystem</title>
      <link>/manual/1.0/user-guide/runtime-container-integration/jboss/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/runtime-container-integration/jboss/</guid>
      <description>&lt;div class=&#34;note bg-info docs-info&#34;&gt;&#xA;  &lt;h3&gt;Installation Guide&lt;/h3&gt;&#xA;  &lt;p&gt;&lt;p&gt;If you &lt;a href=&#34;http://camunda.org/download/&#34;&gt;download a full distribution&lt;/a&gt;, the Camunda Wildfly subsystem is readily installed into the application server.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;/manual/1.0/manual/1.0/installation/full/jboss/&#34;&gt;Read the installation guide&lt;/a&gt; to learn how to install the Camunda Wildfly subsystem into your Wildfly Server.&lt;/p&gt;&#xA;&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;CIB seven provides advanced integration for Wildfly in the form of a custom &lt;a href=&#34;https://docs.wildfly.org/23/Extending_WildFly.html&#34;&gt;Wildfly Subsystem&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;The most prominent features are:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Deploy the process engine as shared Wildfly module.&lt;/li&gt;&#xA;&lt;li&gt;Configure the process engine in &lt;code&gt;standalone.xml&lt;/code&gt; / &lt;code&gt;domain.xml&lt;/code&gt; and administer it though the JBoss Management System.&lt;/li&gt;&#xA;&lt;li&gt;Process Engines are native JBoss Services with service lifecycles and dependencies.&lt;/li&gt;&#xA;&lt;li&gt;Automatic deployment of BPMN 2.0 processes (through the Process Application API).&lt;/li&gt;&#xA;&lt;li&gt;Use a managed Thread Pool for the Job Executor configured through the CIB seven Subsystem.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;configure-the-job-executor-in-standalonexmldomainxml&#34;&gt;Configure the Job Executor in standalone.xml/domain.xml&lt;/h1&gt;&#xA;&lt;p&gt;Since CIB seven.5, the configuration of the thread pool used by the Job Executor is done in the Camunda subsystem, not in the JBoss Threads subsystem, as it was done before 7.5.&lt;br&gt;&#xA;The thread pool creation and shutdown is now controlled through the Camunda subsystem.&lt;br&gt;&#xA;You are able to configure it through the following new configuration elements below the &lt;code&gt;job-executor&lt;/code&gt; element of the subsystem XML configuration.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Variables in the REST API</title>
      <link>/manual/1.0/reference/rest/overview/variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/rest/overview/variables/</guid>
      <description>&lt;p&gt;In the REST API, &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/variables/&#34;&gt;process variables&lt;/a&gt; are represented by JSON objects of the following&#xA;form:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-JSON&#34; data-lang=&#34;JSON&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;String&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Some value&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;valueInfo&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The REST API supports the &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/variables/#supported-variable-values&#34;&gt;Value Types&lt;/a&gt; supported by the process engine.&lt;/p&gt;&#xA;&lt;h1 id=&#34;capitalization-of-type-names&#34;&gt;Capitalization of Type Names&lt;/h1&gt;&#xA;&lt;p&gt;In the REST API, the type names start with a capital letter, i.e., &lt;code&gt;String&lt;/code&gt; instead of &lt;code&gt;string&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;h1 id=&#34;serialized-and-deserialized-object-values&#34;&gt;Serialized and Deserialized Object Values&lt;/h1&gt;&#xA;&lt;p&gt;Object Values are instances of (non primitive) Java types. When working with the REST API, it is&#xA;generally advisable to work with the serialized value of a variable. In that case the value is&#xA;retrieved from the database and directly returned in the http response. If the client you are&#xA;building is not a Java Applications by itself, make sure you use a text-based&#xA;&lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/variables/#object-value-serialization&#34;&gt;serialization dataformat&lt;/a&gt; (such as XML or JSON).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Working with Java Objects</title>
      <link>/manual/1.0/reference/forms/embedded-forms/java-objects/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/forms/embedded-forms/java-objects/</guid>
      <description>&lt;p&gt;This section explains how to work with serialized Java Objects in embedded task forms.&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;note &#34;&gt;&#xA;  &lt;h3&gt;&lt;/h3&gt;&#xA;  &lt;p&gt;Out of the box, you can only work with Java Objects which are serialized in &lt;em&gt;JSON format&lt;/em&gt;&#xA;If Java Classes are serialized using JAX-B, you need to add custom XML parsing and writing logic&#xA;to the embedded form. Java Objects serialized using Java Serialization cannot be used in forms.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;fetching-an-existing-serialized-java-object-variable&#34;&gt;Fetching an existing Serialized Java Object Variable&lt;/h1&gt;&#xA;&lt;p&gt;The Form SDK will only fetch those variables which are actually used in a form. Since a Complex Java&#xA;Object is usually not bound to a single input field, we cannot use the &lt;code&gt;cam-variable-name&lt;/code&gt; directive.&#xA;We thus need to fetch the variable programatically:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Escalation Events</title>
      <link>/manual/1.0/reference/bpmn20/events/escalation-events/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/bpmn20/events/escalation-events/</guid>
      <description>&lt;p&gt;Escalation events are events which reference a named escalation. They are mostly used to communicate from a subprocess to an upper process. Unlike an error, an escalation event is non critical and execution continues at the location of throwing.&lt;/p&gt;&#xA;&lt;div data-bpmn-diagram=&#34;../bpmn/escalation-example&#34;&gt;&lt;/div&gt;&#xA;&lt;h1 id=&#34;defining-escalation&#34;&gt;Defining Escalation&lt;/h1&gt;&#xA;&lt;p&gt;An escalation event definition is declared by using the &lt;code&gt;escalationEventDefinition&lt;/code&gt; element. The attribute &lt;code&gt;escalationRef&lt;/code&gt; references an &lt;code&gt;escalation&lt;/code&gt; element declared as a child element of the definitions root element. The following is an excerpt of a process in which an escalation event is declared and referenced by an escalation intermediate throw event.&lt;/p&gt;</description>
    </item>
    <item>
      <title>CDI Event Bridge</title>
      <link>/manual/1.0/user-guide/cdi-java-ee-integration/the-cdi-event-bridge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/cdi-java-ee-integration/the-cdi-event-bridge/</guid>
      <description>&lt;p&gt;The process engine can be hooked-up to the CDI event bus. We call this the &amp;ldquo;CDI Event Bridge&amp;rdquo;. This allows us to be&#xA;notified of process events using standard CDI event mechanisms. In order to enable CDI event support for an embedded&#xA;process engine, enable the corresponding parse listener in the configuration:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;postParseListeners&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;list&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;bean&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;org.camunda.bpm.engine.cdi.impl.event.CdiEventSupportBpmnParseListener&amp;#34;&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;/list&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now the engine is configured for publishing events using the CDI event bus.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Configuring XML Handling</title>
      <link>/manual/1.0/reference/spin/xml/06-configuring-xml/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/spin/xml/06-configuring-xml/</guid>
      <description>&lt;p&gt;Spin can be configured to change XML parsing, writing, and mapping settings. Spin uses JAXB and DOM to handle XML.&#xA;Therefore, the XML data format uses instances of &lt;code&gt;javax.xml.parsers.DocumentBuilderFactory&lt;/code&gt;,&#xA;&lt;code&gt;javax.xml.transform.TransformerFactory&lt;/code&gt;, and &lt;code&gt;javax.xml.bind.JAXBContext&lt;/code&gt; that can be configured using Spin&amp;rsquo;s&#xA;&lt;a href=&#34;/manual/1.0/manual/1.0/reference/spin/extending-spin/#configuring-data-formats&#34;&gt;configuration mechanism&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;For example, a custom application may provide an implementation of &lt;code&gt;org.camunda.spin.spi.DataFormatConfigurator&lt;/code&gt; that exchanges&#xA;the &lt;code&gt;JAXBContext&lt;/code&gt;. Spin uses and caches the context to improve performance.&lt;/p&gt;&#xA;&lt;p&gt;The data format class to register a configurator for is &lt;code&gt;org.camunda.spin.impl.xml.dom.format.DomXmlDataFormat&lt;/code&gt;.&#xA;An instance of this class provides setter methods (for the entities mentioned above) that can be used to replace the&#xA;default object mapper. Refer to the &lt;a href=&#34;http://docs.oracle.com/javase/8/docs/api/&#34;&gt;JDK documentation&lt;/a&gt; on what&#xA;configuration can be applied.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Date Format</title>
      <link>/manual/1.0/reference/rest/overview/date-format/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/rest/overview/date-format/</guid>
      <description>&lt;p&gt;The REST API uses the default date format &lt;code&gt;yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSSZ&lt;/code&gt;, which&#xA;represents a date with milliseconds and timezone information, e.g.,&#xA;&lt;code&gt;2016-01-25T13:33:42.165+0100&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;If you add a date as a GET request parameter, remember the URL encoding, e.g. &lt;code&gt;2016-01-25T13:33:42.165%2b0100&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;h1 id=&#34;custom-date-format&#34;&gt;Custom Date Format&lt;/h1&gt;&#xA;&lt;p&gt;A custom date format can be configured in the &lt;code&gt;web.xml&lt;/code&gt;&#xA;file of the REST API. To do so, the ServletContextListener&#xA;&lt;code&gt;CustomJacksonDateFormatListener&lt;/code&gt; has to be added. The custom date format&#xA;can be specified by the context parameter&#xA;&lt;code&gt;org.camunda.bpm.engine.rest.jackson.dateFormat&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Delegation Code</title>
      <link>/manual/1.0/user-guide/process-engine/delegation-code/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/process-engine/delegation-code/</guid>
      <description>&lt;p&gt;Delegation Code allows you to execute external Java code, scripts or evaluate expressions when&#xA;certain events occur during process execution.&lt;/p&gt;&#xA;&lt;p&gt;There are different types of Delegation Code:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Java Delegates&lt;/strong&gt; can be attached to a &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/tasks/service-task/&#34;&gt;BPMN Service Task&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Delegate Variable Mapping&lt;/strong&gt; can be attached to a &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/subprocesses/call-activity/&#34;&gt;Call Activity&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Execution Listeners&lt;/strong&gt; can be attached to any event within the normal token flow, e.g., starting a process instance or entering an activity.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Task Listeners&lt;/strong&gt; can be attached to events within the user task lifecycle, e.g., creation or completion of a user task.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;You can create generic Delegation Code and configure this via the BPMN 2.0 XML using so called Field Injection.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Examples</title>
      <link>/manual/1.0/reference/forms/embedded-forms/javascript/examples/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/forms/embedded-forms/javascript/examples/</guid>
      <description>&lt;p&gt;The following examples show example scenarios of custom JavaScript in embedded forms.&lt;/p&gt;&#xA;&lt;h1 id=&#34;user-name-from-a-cam-script&#34;&gt;User name from a cam-script&lt;/h1&gt;&#xA;&lt;p&gt;This example demonstrates how to retrieve the user name and display it in an embedded form:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;form&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;role&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;form&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;cam-script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;text/form-script&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;inject&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;$rootScope&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$rootScope&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;$scope&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;userName&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;$rootScope&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;authentication&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}]);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;h1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;Greetings {{ userName }}&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;h1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;form&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;load-additional-resources&#34;&gt;Load Additional Resources&lt;/h1&gt;&#xA;&lt;p&gt;This example includes an image, which is located in the contextPath of the form (i.e., in the same directory). The URL of the image is retrieved via the &lt;em&gt;task form key&lt;/em&gt; method of the REST API:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Extension Attributes</title>
      <link>/manual/1.0/user-guide/model-api/dmn-model-api/extension-attributes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/model-api/dmn-model-api/extension-attributes/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;/manual/1.0/manual/1.0/reference/dmn/custom-extensions/&#34;&gt;Custom extensions&lt;/a&gt; are a standardized way to extend the DMN model.&#xA;The &lt;a href=&#34;/manual/1.0/manual/1.0/reference/dmn/custom-extensions/camunda-attributes/&#34;&gt;Camunda extension attributes&lt;/a&gt; are fully implemented in the DMN model API.&lt;/p&gt;&#xA;&lt;p&gt;Every DMN &lt;code&gt;Decision&lt;/code&gt; element can have the attributes &lt;code&gt;historyTimeToLive&lt;/code&gt; and &lt;code&gt;versionTag&lt;/code&gt;.&#xA;To access the extension attributes, you have to call the &lt;code&gt;Decision#getCamundaHistoryTimeToLiveString()&lt;/code&gt; and&#xA;&lt;code&gt;Decision#getVersionTag()&lt;/code&gt; methods.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;historyTimeToLive&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decision&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getCamundaHistoryTimeToLiveString&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;versionTag&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decision&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getVersionTag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To set attributes, use &lt;code&gt;Decision#setCamundaHistoryTimeToLiveString()&lt;/code&gt; and &lt;code&gt;Decision#setVersionTag()&lt;/code&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;decision&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setCamundaHistoryTimeToLiveString&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;1000&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decision&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setVersionTag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;1.0.0&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Every &lt;code&gt;Input&lt;/code&gt; element can have an &lt;code&gt;inputVariable&lt;/code&gt; attribute.&#xA;This attribute specifies the variable name which can be used to access the result of the input expression in an input entry expression.&#xA;It can be set and fetched similarly, calling &lt;code&gt;Input#setCamundaInputVariable()&lt;/code&gt; and &lt;code&gt;Input#getCamundaInputVariable()&lt;/code&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Extension Elements</title>
      <link>/manual/1.0/user-guide/model-api/bpmn-model-api/extension-elements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/model-api/bpmn-model-api/extension-elements/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/&#34;&gt;Custom extension elements&lt;/a&gt; are a standardized way to extend the BPMN model.&#xA;The &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/&#34;&gt;Camunda extension elements&lt;/a&gt; are fully implemented in the BPMN model API, but unknown extension elements can also easily be accessed and added.&lt;/p&gt;&#xA;&lt;p&gt;Every BPMN &lt;code&gt;BaseElement&lt;/code&gt; can have a child element of the type &lt;code&gt;extensionElements&lt;/code&gt;.&#xA;This element can contain all sorts of extension elements. To access the&#xA;extension elements you have to call the &lt;code&gt;getExtensionElements()&lt;/code&gt; method and,&#xA;if no such child element exists, you must create one first.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Extension Elements</title>
      <link>/manual/1.0/user-guide/model-api/cmmn-model-api/extension-elements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/model-api/cmmn-model-api/extension-elements/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/custom-extensions/&#34;&gt;Custom extension elements&lt;/a&gt; are a standardized way to extend the CMMN model.&#xA;The &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/custom-extensions/camunda-elements/&#34;&gt;Camunda extension elements&lt;/a&gt; are fully implemented in the CMMN model API but unknown extension elements can also easily be accessed and added.&lt;/p&gt;&#xA;&lt;p&gt;Every CMMN &lt;code&gt;CmmnElement&lt;/code&gt; can have a child element of the type &lt;code&gt;extensionElements&lt;/code&gt;.&#xA;This element can contain all sorts of extension elements. To access the&#xA;extension elements you have to call the &lt;code&gt;getExtensionElements()&lt;/code&gt; method and,&#xA;if no such child element exists, you must create one first.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Failed Jobs</title>
      <link>/manual/1.0/webapps/cockpit/bpmn/failed-jobs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/webapps/cockpit/bpmn/failed-jobs/</guid>
      <description>&lt;figure class=&#34;image&#34;&gt;&#xA;  &lt;span&gt;&lt;img&#xA;      src=&#34;../../img/cockpit-failed-job-drill-down.png&#34;&#xA;      &#xA;          title=&#34;Failed Job Drill Down&#34;&#xA;       /&gt;&lt;/span&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;Unresolved incidents of a process instance or a sub process instance are indicated by Cockpit as failed jobs. To localize which instance of a process failed, Cockpit allows you to drill down to the unresolved incident by using the process status dots. Hit a red status dot of the affected instance in the Process Definition View to get an overview of all incidents. The &lt;em&gt;Incidents&lt;/em&gt; tab in the &lt;a href=&#34;/manual/1.0/manual/1.0/webapps/cockpit/bpmn/process-instance-view/#detailed-information-panel&#34;&gt;Detailed Information Panel&lt;/a&gt; lists the failed activities with additional information. Furthermore, you have the possibility of going down to the failing instance of a sub process.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hidden Input Fields</title>
      <link>/manual/1.0/reference/forms/embedded-forms/controls/hidden/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/forms/embedded-forms/controls/hidden/</guid>
      <description>&lt;p&gt;Hidden input elements are HTML controls in the form of&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;hidden&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;They are not displayed in the form, but can be used to retrieve values to be used in the context of the form (e.g., using Angular bindings).&lt;/p&gt;&#xA;&lt;h1 id=&#34;binding-a-hidden-element-to-a-process-variable&#34;&gt;Binding a Hidden Element to a Process Variable&lt;/h1&gt;&#xA;&lt;p&gt;A hidden input can be bound to a process variable using the &lt;code&gt;cam-variable-type&lt;/code&gt; and &lt;code&gt;cam-variable-name&lt;/code&gt; directives:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;hidden&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       &lt;span class=&#34;na&#34;&gt;cam-variable-name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;CUSTOMER_ID&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       &lt;span class=&#34;na&#34;&gt;cam-variable-type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;String&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       &lt;span class=&#34;na&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;testuser&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In the example above, the hidden input field is bound to the variable named &lt;code&gt;CUSTOMER_ID&lt;/code&gt; of type &lt;code&gt;String&lt;/code&gt; and contains the value &lt;code&gt;testuser&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Job Execution with Managed Resources</title>
      <link>/manual/1.0/user-guide/runtime-container-integration/job-execution-with-managed-resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/runtime-container-integration/job-execution-with-managed-resources/</guid>
      <description>&lt;p&gt;For &lt;a href=&#34;/manual/1.0/manual/1.0/introduction/supported-environments/#container-managed-process-engine-and-camunda-cockpit-tasklist-admin&#34;&gt;supported environments&lt;/a&gt;, CIB seven provides server modules that integrate the Job Execution with the application server&amp;rsquo;s managed threadpools. If you are using one of those environments, it is recommended to use the integration provided with it.&lt;/p&gt;&#xA;&lt;p&gt;The descriptions on this page apply to the use case where there is &lt;em&gt;no&lt;/em&gt; existing resource-aware implementation provided. In those cases, using managed resources provided by the application server is recommended over using unmanaged resources. In order for the integration to work, a JEE 7+ compliant application server is required.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Performance</title>
      <link>/manual/1.0/user-guide/process-engine/database/performance/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/process-engine/database/performance/</guid>
      <description>&lt;p&gt;This page explains specific performance-related topics of database queries. It does not attempt to provide tools and guidance for general performance analysis and optimization of CIB seven installations.&lt;/p&gt;&#xA;&lt;p&gt;As the impact of the settings discussed here largely depends on the setup and workload of CIB seven, the recommendations may or may not help in your case. Performance improvements are not guaranteed.&lt;/p&gt;&#xA;&lt;h1 id=&#34;task-query&#34;&gt;Task Query&lt;/h1&gt;&#xA;&lt;p&gt;The task query is one of the heaviest used and most powerful queries of the process engine API. Due to its rich feature set, it can also become complex in SQL and may perform badly.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Plugins</title>
      <link>/manual/1.0/webapps/tasklist/tasklist-plugins/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/webapps/tasklist/tasklist-plugins/</guid>
      <description>&lt;div class=&#34;note bg-info docs-info&#34;&gt;&#xA;  &lt;h3&gt;Plugin Compatibility&lt;/h3&gt;&#xA;  &lt;p&gt;Please note that the code of Tasklist plugins might need to be migrated when updating CIB seven to a higher version (e.g. CSS styles).&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Tasklist uses the concept of plugins to add own functionality without having to extend or hack the Tasklist web application.&lt;/p&gt;&#xA;&lt;p&gt;For further details about the concepts behind plugins, please read the &lt;a href=&#34;/manual/1.0/manual/1.0/webapps/cockpit/extend/plugins/&#34;&gt;Cockpit plugins section&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;note bg-warning docs-warning&#34;&gt;&#xA;  &lt;h3&gt;Difference between Cockpit and Tasklist plugins:&lt;/h3&gt;&#xA;  &lt;p&gt;&lt;ul&gt;&#xA;&lt;li&gt;To publish the plugin with Tasklist, its class name must be put into a file called &lt;code&gt;org.camunda.bpm.tasklist.plugin.spi.TasklistPlugin&lt;/code&gt; that resides in the directory &lt;code&gt;META-INF/services&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;The plugin mechanism of Tasklist does not allow to provide additional SQL queries by using &lt;a href=&#34;http://www.mybatis.org/&#34;&gt;MyBatis&lt;/a&gt; mappings.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Plugins</title>
      <link>/manual/1.0/webapps/welcome/welcome-plugins/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/webapps/welcome/welcome-plugins/</guid>
      <description>&lt;p&gt;In addition to the &lt;a href=&#34;/manual/1.0/manual/1.0/webapps/welcome/configuration/&#34;&gt;configurable custom links&lt;/a&gt;, plugins can be used to add functionality to the Welcome application. For further details about the concepts behind plugins, please read the &lt;a href=&#34;/manual/1.0/manual/1.0/webapps/cockpit/extend/plugins/&#34;&gt;Cockpit plugins section&lt;/a&gt;. Please note that the Welcome application just offers &lt;em&gt;frontend only&lt;/em&gt; plugins.&lt;/p&gt;&#xA;&lt;h1 id=&#34;plugin-point&#34;&gt;Plugin point&lt;/h1&gt;&#xA;&lt;p&gt;&lt;strong&gt;Name:&lt;/strong&gt; &lt;code&gt;welcome.dashboard&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;figure class=&#34;image&#34;&gt;&#xA;  &lt;span&gt;&lt;img&#xA;      src=&#34;../img/welcome-dashboard-plugin.png&#34;&#xA;      &#xA;          title=&#34;Plugin Point&#34;&#xA;       /&gt;&lt;/span&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Name:&lt;/strong&gt; &lt;code&gt;welcome.profile&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;figure class=&#34;image&#34;&gt;&#xA;  &lt;span&gt;&lt;img&#xA;      src=&#34;../img/welcome-profile-plugin.png&#34;&#xA;      &#xA;          title=&#34;Plugin Point&#34;&#xA;       /&gt;&lt;/span&gt;&#xA;&lt;/figure&gt;</description>
    </item>
    <item>
      <title>Receive Task</title>
      <link>/manual/1.0/reference/bpmn20/tasks/receive-task/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/bpmn20/tasks/receive-task/</guid>
      <description>&lt;p&gt;A Receive Task is a simple task that waits for the arrival of a certain message. When the process execution arrives at a Receive Task, the process state is committed to the persistence storage. This means that the process will stay in this wait state until a specific message is received by the engine, which triggers continuation of the process beyond the Receive Task.&lt;/p&gt;&#xA;&lt;div class=&#34;bpmn-symbol&#34;&gt;&lt;img src=&#34;/manual/1.0/manual/1.0//img/short-codes/bpmn-receive-task.png&#34; /&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;A Receive Task with a message reference can be triggered like an ordinary event:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Sentries</title>
      <link>/manual/1.0/reference/cmmn11/sentry/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/cmmn11/sentry/</guid>
      <description>&lt;p&gt;A &lt;em&gt;sentry&lt;/em&gt; captures the occurrence of a certain event occurring or a condition being fulfilled within a case. Sentries are used as &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/concepts/entry-exit-criteria/&#34;&gt;entry and exit criteria&lt;/a&gt;. Note that the black and white diamonds represent the criteria. A sentry itself has no graphical representation.&lt;/p&gt;&#xA;&lt;div class=&#34;cmmn-symbol&#34;&gt;&lt;img src=&#34;/manual/1.0/manual/1.0//img/short-codes/cmmn-marker-entry-criterion.png&#34; /&gt;&lt;/div&gt;&#xA;&#xA;&lt;div class=&#34;cmmn-symbol&#34;&gt;&lt;img src=&#34;/manual/1.0/manual/1.0//img/short-codes/cmmn-marker-exit-criterion.png&#34; /&gt;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;In XML, a sentry can be specified as follows:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;planItem&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;PlanItem_HumanTask_1&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;definitionRef=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;HumanTask_1&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;planItem&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;PlanItem_HumanTask_2&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;definitionRef=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;HumanTask_1&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;entryCriterion&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;sentryRef=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Sentry_1&amp;#34;&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/planItem&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;sentry&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Sentry_1&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;planItemOnPart&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;sourceRef=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;PlanItem_HumanTask_1&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;standardEvent&amp;gt;&lt;/span&gt;complete&lt;span class=&#34;nt&#34;&gt;&amp;lt;/standardEvent&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;/planItemOnPart&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;ifPart&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;condition&amp;gt;&lt;/span&gt;${myVar &amp;gt; 100}&lt;span class=&#34;nt&#34;&gt;&amp;lt;/condition&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;/ifPart&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/sentry&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;humanTask&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;HumanTask_1&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The above example defines a sentry that is fulfilled when the plan item &lt;code&gt;PlanItem_HumanTask_1&lt;/code&gt; performs the state transition &lt;code&gt;complete&lt;/code&gt; (note the &lt;code&gt;planItemOnPart&lt;/code&gt; element) and a variable named &lt;code&gt;myVar&lt;/code&gt; has a value greater than 100 (note the &lt;code&gt;ifPart&lt;/code&gt; element). Furthermore, it serves as an &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/concepts/entry-exit-criteria/&#34;&gt;entry criterion&lt;/a&gt; for the plan item &lt;code&gt;PlanItem_HumanTask_2&lt;/code&gt; that becomes &lt;code&gt;ENABLED&lt;/code&gt; as soon as the sentry is fulfilled (note the &lt;code&gt;entryCriterion&lt;/code&gt; child element of the element &lt;code&gt;PlanItem_HumanTask_2&lt;/code&gt;).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Signal Events</title>
      <link>/manual/1.0/reference/bpmn20/events/signal-events/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/bpmn20/events/signal-events/</guid>
      <description>&lt;p&gt;Signal events are events which reference a named signal. A signal is an event of global scope (broadcast semantics) and is delivered to all active handlers.&lt;/p&gt;&#xA;&lt;p&gt;The following is an example of two separate processes communicating using signals. The first process is started if an insurance policy is updated or changed. After the changes have been reviewed by a human participant, a signal event is thrown, signaling that a policy has changed:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Spring Eventing Bridge</title>
      <link>/manual/1.0/user-guide/spring-boot-integration/the-spring-event-bridge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/spring-boot-integration/the-spring-event-bridge/</guid>
      <description>&lt;p&gt;The process engine can be hooked-up to the Spring event bus. We call this the &amp;ldquo;Spring Eventing Bridge&amp;rdquo;. This allows us to be notified of process events using standard Spring eventing mechanisms. By default, the Spring eventing is enabled by a engine plugin. The eventing is controlled by four &lt;code&gt;camunda.bpm.eventing&lt;/code&gt; properties. These are:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;camunda.bpm.eventing.execution=true&#xA;camunda.bpm.eventing.history=true&#xA;camunda.bpm.eventing.task=true&#xA;camunda.bpm.eventing.skippable=true&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The first three properties control three event streams for execution, task and history events respectively. The last property &lt;code&gt;camunda.bpm.eventing.skippable&lt;/code&gt; is responsible&#xA;for the registration of the event listeners. If its value is &lt;code&gt;true&lt;/code&gt;, the execution of the listners can be skipped via API or in Camunda Cockpit by activating &amp;ldquo;skip listners&amp;rdquo; flag. Otherwise, the listeners are registered as built-in listeners and are executed unconditionally.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cancel and Compensation Events</title>
      <link>/manual/1.0/reference/bpmn20/events/cancel-and-compensation-events/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/bpmn20/events/cancel-and-compensation-events/</guid>
      <description>&lt;h1 id=&#34;cancel-events&#34;&gt;Cancel Events&lt;/h1&gt;&#xA;&lt;h2 id=&#34;cancel-end-event&#34;&gt;Cancel End Event&lt;/h2&gt;&#xA;&lt;p&gt;The cancel end event can only be used in combination with a &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/subprocesses/transaction-subprocess/&#34;&gt;transaction subprocess&lt;/a&gt;. When the cancel end event is reached, a cancel event is thrown which must be caught by a cancel boundary event. The cancel boundary event then cancels the transaction and triggers compensation.&lt;/p&gt;&#xA;&lt;h2 id=&#34;cancel-boundary-event&#34;&gt;Cancel Boundary Event&lt;/h2&gt;&#xA;&lt;p&gt;An attached intermediate catching cancel event on the boundary of a transaction subprocess, or, for short, a cancel boundary event, is triggered when a transaction is canceled. When the cancel boundary event is triggered, it first interrupts all active executions in the current scope. Next, it starts compensation of all active compensation boundary events in the scope of the transaction. Compensation is performed synchronously, i.e., the boundary event waits before compensation is completed before leaving the transaction. When compensation is completed, the transaction subprocess is left using the sequence flow(s) running out of the cancel boundary event.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Conditional Events</title>
      <link>/manual/1.0/reference/bpmn20/events/conditional-events/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/bpmn20/events/conditional-events/</guid>
      <description>&lt;p&gt;The conditional event defines an event which is triggered if a given condition is evaluated to true.&#xA;It can be used as start event of an event sub process, as intermediate event and boundary event.&#xA;The start and boundary event can be interrupting and non interrupting.&lt;/p&gt;&#xA;&lt;p&gt;In Camunda, conditional events are triggered with the help of process variables.&#xA;See the &lt;a href=&#34;#trigger-conditional-events&#34;&gt;Trigger Conditional Events&lt;/a&gt; section for details.&lt;/p&gt;&#xA;&lt;p&gt;In the following BPMN model, all supported conditional events are used.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Configuration</title>
      <link>/manual/1.0/webapps/tasklist/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/webapps/tasklist/configuration/</guid>
      <description>&lt;p&gt;You can override the default configuration of Tasklist using a central configuration file&#xA;located in &lt;code&gt;app/tasklist/scripts/config.js&lt;/code&gt;. The following configuration options are&#xA;available:&lt;/p&gt;&#xA;&lt;h1 id=&#34;date-format&#34;&gt;Date Format&lt;/h1&gt;&#xA;&lt;p&gt;Dates can be configured by specifying a &lt;code&gt;dateFormat&lt;/code&gt; object. The values of the properties of this&#xA;object must be strings representing date formats in accordance with&#xA;&lt;a href=&#34;http://momentjs.com&#34;&gt;moment.js&lt;/a&gt;. Following date formats are used within Tasklist:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;monthName&lt;/code&gt; represents the name of a month (e.g., January).&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;day&lt;/code&gt; represents the number of a day in a month (1..31).&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;abbr&lt;/code&gt; represents a short format of a date including time.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;normal&lt;/code&gt; represents the standard format of a date including time.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;long&lt;/code&gt; represents a verbose format of a date including time and day of the week.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;short&lt;/code&gt; represents a short format of a date excluding time.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;example&#34;&gt;Example&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;default&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// …&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;s2&#34;&gt;&amp;#34;dateFormat&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;monthName&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;MMM&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;long&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;   &lt;span class=&#34;s2&#34;&gt;&amp;#34;LLLL&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;localization&#34;&gt;Localization&lt;/h1&gt;&#xA;&lt;p&gt;Tasklist can be localized. Camunda maintains English and German translation files.&#xA;You can find and download community maintained translation files at the &lt;a href=&#34;https://github.com/camunda/camunda-webapp-translations&#34;&gt;Camunda webapp translations repository&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Configuration</title>
      <link>/manual/1.0/webapps/welcome/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/webapps/welcome/configuration/</guid>
      <description>&lt;p&gt;You can override the default configuration of the Welcome application by using a central configuration file,&#xA;located in &lt;code&gt;app/welcome/scripts/config.js&lt;/code&gt;. The following configuration options are&#xA;available:&lt;/p&gt;&#xA;&lt;h1 id=&#34;custom-links&#34;&gt;Custom links&lt;/h1&gt;&#xA;&lt;p&gt;Can be used to add some useful links for the user, such as other applications or intranet sites.&lt;/p&gt;&#xA;&lt;h2 id=&#34;example&#34;&gt;Example&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;default&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// …&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;links&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;label&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Camunda Forum&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;https://forum.camunda.org&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;description&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Forum for Camnuda BPM users and developers&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// ...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;logo-and-header-color&#34;&gt;Logo and Header Color&lt;/h1&gt;&#xA;&lt;p&gt;You can change the visual aspects of Welcome. The user stylesheet file is located in&#xA;&lt;code&gt;app/welcome/styles/user-styles.css&lt;/code&gt;. This file contains CSS which is loaded into Welcome&#xA;and can override the standard styles.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Developing and Testing Spring Boot Applications</title>
      <link>/manual/1.0/user-guide/spring-boot-integration/develop-and-test/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/spring-boot-integration/develop-and-test/</guid>
      <description>&lt;h1 id=&#34;developing&#34;&gt;Developing&lt;/h1&gt;&#xA;&lt;p&gt;Spring Boot provides &lt;a href=&#34;https://docs.spring.io/spring-boot/docs/current/reference/html/using.html#using.devtools&#34;&gt;Developer Tools&lt;/a&gt; which feature options like automatic restart and live reload during the development of an application.&lt;/p&gt;&#xA;&lt;h2 id=&#34;spring-developer-tools-and-classloading&#34;&gt;Spring Developer Tools and Classloading&lt;/h2&gt;&#xA;&lt;p&gt;An additional process engine plugin (&lt;code&gt;ApplicationContextClassloaderSwitchPlugin&lt;/code&gt;) will be loaded in case your application is in a development mode:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Spring Developer tools (&lt;code&gt;spring-boot-devtools&lt;/code&gt; library) are on the class path and&lt;/li&gt;&#xA;&lt;li&gt;the tools are enabled, e.g., the application is started in IDE&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;The plugin ensures exchanging the application context classloader with the classloader used for the process engine to prevent issues during deserialization.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Expression Language</title>
      <link>/manual/1.0/user-guide/process-engine/expression-language/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/process-engine/expression-language/</guid>
      <description>&lt;p&gt;CIB seven supports the Unified Expression Language (EL), specified by the &lt;a href=&#34;https://jakarta.ee/specifications/expression-language/4.0/&#34;&gt;Jakarta Expression&#xA;Language 4.0 standard&lt;/a&gt;. To do so, it maintains a custom version of the open source &lt;a href=&#34;http://juel.sourceforge.net/&#34;&gt;JUEL&lt;/a&gt; implementation.&lt;/p&gt;&#xA;&lt;p&gt;Note, compared to EL 4.0 this JUEL implementation has the following limitations:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Initializing collections directly within expressions (e.g., &lt;code&gt;${[1,2,3]}&lt;/code&gt;) is NOT supported.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Lambda expressions (e.g., inline functions &lt;code&gt;${((x,y)-&amp;gt;x+y)(3,4)}&lt;/code&gt;) are NOT supported.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Referencing static fields (e.g., &lt;code&gt;${Boolean.TRUE}&lt;/code&gt;), static functions (e.g., &lt;code&gt;${Integer.parseInt(&amp;quot;123&amp;quot;)}&lt;/code&gt;), and enums (e.g., &lt;code&gt;${Thread.State.TERMINATED}&lt;/code&gt;) are NOT supported.&lt;/p&gt;</description>
    </item>
    <item>
      <title>File Upload and Download</title>
      <link>/manual/1.0/reference/forms/embedded-forms/controls/files/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/forms/embedded-forms/controls/files/</guid>
      <description>&lt;h1 id=&#34;uploading-files&#34;&gt;Uploading Files&lt;/h1&gt;&#xA;&lt;p&gt;File input elements are HTML controls in the form of&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;file&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;They allow users to upload files, which will be stored as a process instance variable of the type Bytes. Larger files will take longer to process and may crash the browser, so there is a soft file size limit of 5MB. You can overwrite this limit using the &lt;code&gt;cam-max-filesize&lt;/code&gt; directive. To upload larger files without freezing the browser, see the &lt;a href=&#34;/manual/1.0/manual/1.0/reference/forms/embedded-forms/javascript/examples/#upload-large-files&#34;&gt;custom javascript section&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Manual Task</title>
      <link>/manual/1.0/reference/bpmn20/tasks/manual-task/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/bpmn20/tasks/manual-task/</guid>
      <description>&lt;p&gt;A Manual Task defines a task that is external to the BPM engine. It is used to model work that is done by somebody who the engine does not need to know of and that has no known system or UI interface. For the engine, a manual task is handled as a pass-through activity, automatically continuing the process when the process execution arrives at it.&lt;/p&gt;&#xA;&lt;div class=&#34;bpmn-symbol&#34;&gt;&lt;img src=&#34;/manual/1.0/manual/1.0//img/short-codes/bpmn-manual-task.png&#34; /&gt;&lt;/div&gt;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;manualTask&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;myManualTask&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Manual Task&amp;#34;&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;camunda-extensions&#34;&gt;Camunda Extensions&lt;/h1&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Attributes&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-attributes/#asyncbefore&#34;&gt;camunda:asyncBefore&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-attributes/#asyncafter&#34;&gt;camunda:asyncAfter&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-attributes/#exclusive&#34;&gt;camunda:exclusive&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-attributes/#jobpriority&#34;&gt;camunda:jobPriority&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Extension Elements&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#failedjobretrytimecycle&#34;&gt;camunda:failedJobRetryTimeCycle&lt;/a&gt;,&#xA;      &lt;a href=&#34;/manual/1.0/manual/1.0/reference/bpmn20/custom-extensions/extension-elements/#inputoutput&#34;&gt;camunda:inputOutput&lt;/a&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Constraints&lt;/th&gt;&#xA;    &lt;td&gt;&#xA;      The &lt;code&gt;camunda:exclusive&lt;/code&gt; attribute is only evaluated if the attribute&#xA;      &lt;code&gt;camunda:asyncBefore&lt;/code&gt; or &lt;code&gt;camunda:asyncAfter&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;&#xA;    &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;</description>
    </item>
    <item>
      <title>Open Tasks Dashboard</title>
      <link>/manual/1.0/webapps/cockpit/tasks-dashboard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/webapps/cockpit/tasks-dashboard/</guid>
      <description>&lt;p&gt;You can use the open tasks dashboard to see how the open tasks are distributed by individual factors.&#xA;Refer to the &lt;a href=&#34;/manual/1.0/manual/1.0/webapps/cockpit/extend/plugins/&#34;&gt;Cockpit Plugins&lt;/a&gt; section for information about&#xA;adding a custom open task dashboard plugin.&lt;/p&gt;&#xA;&lt;figure class=&#34;image&#34;&gt;&#xA;  &lt;span&gt;&lt;img&#xA;      src=&#34;../img/task-dashboard.png&#34;&#xA;      &#xA;          title=&#34;Open Task Dashboard&#34;&#xA;       /&gt;&lt;/span&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;h2 id=&#34;open-tasks&#34;&gt;Open Tasks&lt;/h2&gt;&#xA;&lt;h3 id=&#34;assignments-by-type&#34;&gt;Assignments by type&lt;/h3&gt;&#xA;&lt;p&gt;In this category you can see how many open tasks exist. There is also an overview which shows how the open tasks are distributed.&lt;/p&gt;&#xA;&lt;h3 id=&#34;assignment-by-group&#34;&gt;Assignment by group&lt;/h3&gt;&#xA;&lt;p&gt;This category provides you an overview which shows how all open tasks which are assigned to a group are distributed between the individual groups.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Security Notices</title>
      <link>/manual/1.0/notices/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/notices/</guid>
      <description>&lt;p&gt;On this page, we publishhing security notices &lt;em&gt;after&lt;/em&gt; fixes are available.&#xA;Fixes are available as alpha or minor releases of CIB seven platform.&lt;/p&gt;&#xA;&lt;h1 id=&#34;notices&#34;&gt;Notices&lt;/h1&gt;&#xA;&lt;p&gt;None. Hooray!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Suspension</title>
      <link>/manual/1.0/webapps/cockpit/bpmn/suspension/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/webapps/cockpit/bpmn/suspension/</guid>
      <description>&lt;p&gt;In the process definition view and in the process instance view you can suspend the selected process definition or process instance by using the &lt;button class=&#34;btn btn-xs&#34;&gt;&#xA;  &lt;i class=&#34;glyphicon glyphicon-pause&#34; &gt;&lt;/i&gt;&#xA;&lt;/button&gt;&#xA; button on the right side.&lt;/p&gt;&#xA;&lt;h1 id=&#34;process-definition-suspension&#34;&gt;Process Definition Suspension&lt;/h1&gt;&#xA;&lt;p&gt;If you suspend the process definition, you prevent the process definition from being instantiated. No further operations can be done while the process definition is in the suspended state. You can simply re-activate the process definition by using the &lt;button class=&#34;btn btn-xs&#34;&gt;&#xA;  &lt;i class=&#34;glyphicon glyphicon-play&#34; &gt;&lt;/i&gt;&#xA;&lt;/button&gt;&#xA; button on the right side. You have the option of suspending/reactivating all process instances of the process definition as well as defining if the process definition (and process instances) should instantly be suspended/reactivated or at a specific time in a confirmation dialog. Find more information about this functionality in the &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/process-engine-concepts/#suspend-process-definitions&#34;&gt;suspending process definitions&lt;/a&gt; section of the process engine chapter.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Accessibility</title>
      <link>/manual/1.0/webapps/tasklist/accessibility/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/webapps/tasklist/accessibility/</guid>
      <description>&lt;p&gt;It is possible to use the Tasklist only with the keyboard. You can use the TAB-key to navigate to the sections of the Tasklist. To interact with an element you have focused, press ENTER.&lt;/p&gt;&#xA;&lt;h1 id=&#34;keyboard-shortcuts&#34;&gt;Keyboard Shortcuts&lt;/h1&gt;&#xA;&lt;p&gt;To make working with the Tasklist easier, you can use keyboard shortcuts to jump to certain parts of the Tasklist or perform special operations. Per default, we support the following actions via keyboard shortcuts:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Collapsed Subprocesses</title>
      <link>/manual/1.0/webapps/cockpit/bpmn/drilldown/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/webapps/cockpit/bpmn/drilldown/</guid>
      <description>&lt;p&gt;Diagrams can contain collapsed subprocesses to hide complexity on multiple levels. You can drill down into&#xA;collapsed subprocesses with the drilldown icon.&lt;/p&gt;&#xA;&lt;h2 id=&#34;process-diagram&#34;&gt;Process diagram&lt;/h2&gt;&#xA;&lt;p&gt;If you have a collapsed subprocess in your diagram, a drilldown icon will appear in the lower right of the activity.&lt;/p&gt;&#xA;&lt;figure class=&#34;image&#34;&gt;&#xA;  &lt;span&gt;&lt;img&#xA;      src=&#34;../../img/drilldown/shape.png&#34;&#xA;       /&gt;&lt;/span&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;The collapsed shape indicates if there are running child instances or if an incident occurred in a child activity.&lt;/p&gt;&#xA;&lt;p&gt;If you click on the drilldown icon, the diagram will show the contents of the collapsed subprocess. Use the breadcrumbs in the upper left corner&#xA;of the diagram to navigate back to the parent process.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Link Events</title>
      <link>/manual/1.0/reference/bpmn20/events/link-events/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/bpmn20/events/link-events/</guid>
      <description>&lt;p&gt;Link events are a special case - it has no special execution semantics but serves as a &amp;ldquo;GoTo&amp;rdquo; to another point&#xA;in the same process model (to be precise: in the same sub process). Hence you can use two matching links as an&#xA;alternative to a sequence flow as shown in the following example.&lt;/p&gt;&#xA;&lt;div data-bpmn-diagram=&#34;../bpmn/event-link&#34;&gt;&lt;/div&gt;&#xA;&lt;p&gt;Note that you might have the same event source (throwing intermediate link event with the same event definition name) multiple times, but the event target (catching intermediate link event) has to be unique according to the BPMN 2.0 specification.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Public API</title>
      <link>/manual/1.0/introduction/public-api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/introduction/public-api/</guid>
      <description>&lt;p&gt;Camunda provides a public API. This section covers the definition of the public API and backwards compatibility for version updates.&lt;/p&gt;&#xA;&lt;h1 id=&#34;definition-of-public-api&#34;&gt;Definition of Public API&lt;/h1&gt;&#xA;&lt;p&gt;The Camunda public API is limited to the following items:&lt;/p&gt;&#xA;&lt;p&gt;Java API:&lt;/p&gt;&#xA;&lt;p&gt;All non-implementation Java packages (package name does not contain &lt;code&gt;impl&lt;/code&gt;) of the following modules.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;camunda-engine&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;camunda-engine-spring&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;camunda-engine-cdi&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;camunda-engine-dmn&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;camunda-bpmn-model&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;camunda-cmmn-model&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;camunda-dmn-model&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;camunda-spin-core&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;camunda-connect-core&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;camunda-commons-typed-values&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;HTTP API (REST API):&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;camunda-engine-rest&lt;/code&gt;: HTTP interface (set of HTTP requests accepted by the REST API as documented in &lt;a href=&#34;/manual/1.0/manual/1.0/reference/rest/&#34;&gt;REST API reference&lt;/a&gt;. Java classes are not part of the public API.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;backwards-compatibility-for-public-api&#34;&gt;Backwards Compatibility for Public API&lt;/h1&gt;&#xA;&lt;p&gt;The Camunda versioning scheme follows the MAJOR.MINOR.PATCH pattern put forward by &lt;a href=&#34;http://semver.org/&#34;&gt;Semantic Versioning&lt;/a&gt;. Camunda will maintain public API backwards compatibility for MINOR version updates. Example: Update from version &lt;code&gt;7.1.x&lt;/code&gt; to &lt;code&gt;7.2.x&lt;/code&gt; will not break the public API.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Scripting</title>
      <link>/manual/1.0/user-guide/process-engine/scripting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/process-engine/scripting/</guid>
      <description>&lt;p&gt;CIB seven supports scripting with JSR-223 compatible script engine implementations. Currently we&#xA;test the integration for Groovy, JavaScript, JRuby and Jython. To use a scripting engine&#xA;it is necessary to add the corresponding jar to the classpath.&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;note bg-info docs-info&#34;&gt;&#xA;  &lt;h3&gt;&lt;/h3&gt;&#xA;  &lt;p&gt;&lt;p&gt;We include &lt;strong&gt;GraalVM JavaScript&lt;/strong&gt; in the pre-packaged Camunda distributions.&#xA;Consult &lt;a href=&#34;#javascript-considerations&#34;&gt;JavaScript Considerations&lt;/a&gt; for further information.&lt;/p&gt;&#xA;&lt;p&gt;We include &lt;strong&gt;Groovy&lt;/strong&gt; in the pre-packaged Camunda distributions.&lt;/p&gt;&#xA;&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;The following table provides an overview of the BPMN elements which support the execution of&#xA;scripts.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Spring Security OAuth2 Integration</title>
      <link>/manual/1.0/user-guide/spring-boot-integration/spring-security/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/spring-boot-integration/spring-security/</guid>
      <description>&lt;p&gt;Camunda provides Spring Security OAuth2 integration with the &lt;code&gt;camunda-bpm-spring-boot-starter-security&lt;/code&gt; library.&#xA;This library contains the Spring Security and Spring Security OAuth2 dependencies along with&#xA;configuration classes that integrate Spring Security with Camunda Webapp&amp;rsquo;s authentication.&lt;/p&gt;&#xA;&lt;p&gt;This is available both for Spring Boot and Camunda Run.&lt;/p&gt;&#xA;&lt;p&gt;Camunda&amp;rsquo;s integration comes with multiple components and configurations. In the next sections you can find more details to each of them.&lt;/p&gt;&#xA;&lt;h1 id=&#34;activate-oauth2&#34;&gt;Activate OAuth2&lt;/h1&gt;&#xA;&lt;h2 id=&#34;spring-boot&#34;&gt;Spring Boot&lt;/h2&gt;&#xA;&lt;p&gt;In order to enable the Spring Security OAuth2 integration in Spring Boot, add the following dependency to your project:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Task Markers</title>
      <link>/manual/1.0/reference/bpmn20/tasks/task-markers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/bpmn20/tasks/task-markers/</guid>
      <description>&lt;p&gt;In addition to the various types of tasks, we can mark tasks as loops, multiple instances or compensations. Markers can be combined with task types.&lt;/p&gt;&#xA;&lt;h1 id=&#34;multiple-instance&#34;&gt;Multiple Instance&lt;/h1&gt;&#xA;&lt;p&gt;A multi-instance activity is a way of defining repetition for a certain step in a business process. In programming concepts, a multi-instance matches the &lt;code&gt;for each&lt;/code&gt; construct: it allows execution of a certain step or even a complete subprocess for each item in a given collection, sequentially or in parallel.&lt;/p&gt;</description>
    </item>
    <item>
      <title>BPMN Event Buttons</title>
      <link>/manual/1.0/reference/forms/embedded-forms/controls/bpmn-buttons/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/forms/embedded-forms/controls/bpmn-buttons/</guid>
      <description>&lt;p&gt;These buttons can be used to trigger error and escalation events in user tasks. They will submit all entered values and activate the corresponding boundary event. To learn more about error and escalation events, see our section about &lt;a href=&#34;https://docs.camunda.org/manual/latest/reference/bpmn20/events/&#34;&gt;events&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;error&#34;&gt;Error&lt;/h2&gt;&#xA;&lt;p&gt;An Error Button can be bound to an error code and error message using the &lt;code&gt;cam-error-code&lt;/code&gt; and &lt;code&gt;cam-error-message&lt;/code&gt; directive.&#xA;Providing an error message is optional.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;button&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;cam-error-code&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;bpmn-error-543&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;na&#34;&gt;cam-error-message&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;anErrorMessage&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In the example above, the button is bound to the error code &lt;code&gt;bpmn-error-543&lt;/code&gt; with the message &lt;code&gt;anErrorMessage&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Templating</title>
      <link>/manual/1.0/user-guide/process-engine/templating/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/process-engine/templating/</guid>
      <description>&lt;p&gt;CIB seven supports template engines which are implemented as script engines compatible with&#xA;JSR-223. As a result, templates can be used everywhere where scripts can be used.&lt;/p&gt;&#xA;&lt;p&gt;In community distributions of CIB seven, the following template engine is provided out of the&#xA;box:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://freemarker.org/&#34;&gt;FreeMarker&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;The script engine Freemarker wrapper implementation can be found in the&#xA;&lt;a href=&#34;https://github.com/camunda/camunda-bpm-platform/tree/master/freemarker-template-engine&#34;&gt;camunda-bpmn-platform&lt;/a&gt; repository.&lt;/p&gt;&#xA;&lt;p&gt;The following template engines are provided as optional community extensions:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://velocity.apache.org/&#34;&gt;Apache Velocity&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.saxonica.com/html/documentation12/using-xquery/&#34;&gt;Saxon XQuery&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.saxonica.com/html/documentation12/using-xsl/&#34;&gt;Saxon XSLT&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;The script engine wrapper implementations can be found in the&#xA;&lt;a href=&#34;https://github.com/camunda-community-hub/camunda-7-template-engines-jsr223&#34;&gt;camunda-7-template-engines-jsr223&lt;/a&gt; community hub repository.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Terminate Events</title>
      <link>/manual/1.0/reference/bpmn20/events/terminate-event/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/reference/bpmn20/events/terminate-event/</guid>
      <description>&lt;p&gt;A terminate event ends the complete scope it is raised in and all contained inner scopes.&lt;/p&gt;&#xA;&lt;p&gt;It is useful if you have a parallel token flow in a process and you want to consume all tokens available in the same scope immediately.&lt;/p&gt;&#xA;&lt;p&gt;A terminate event on process instance level terminates the complete instance. On subprocess level the current scope and all contained processes instances will be terminated.&lt;/p&gt;&#xA;&lt;div data-bpmn-diagram=&#34;../bpmn/event-terminate&#34;&gt;&lt;/div&gt;&#xA;&lt;h1 id=&#34;terminate-event-definition&#34;&gt;Terminate Event Definition&lt;/h1&gt;&#xA;&lt;p&gt;A terminate event is modeled as an end event with an additional definition element to mark the termination:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Custom Code &amp; Security</title>
      <link>/manual/1.0/user-guide/process-engine/securing-custom-code/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/process-engine/securing-custom-code/</guid>
      <description>&lt;p&gt;The process engine offers numerous extension points for customization of process behavior by using &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/delegation-code/&#34;&gt;Java Code&lt;/a&gt;, &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/expression-language/&#34;&gt;Expression Language&lt;/a&gt;, &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/scripting/&#34;&gt;Scripts&lt;/a&gt; and &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/templating/&#34;&gt;Templates&lt;/a&gt;. While these extension points allow for great flexibility in process implementation, they open up the possibility to perform malicious actions when in the wrong hands. It is therefore advisable to restrict access to API that allows custom code submission to trusted parties only. The following concepts exist that allow submitting custom code (via Java or REST API):&lt;/p&gt;</description>
    </item>
    <item>
      <title>External Tasks</title>
      <link>/manual/1.0/user-guide/process-engine/external-tasks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/process-engine/external-tasks/</guid>
      <description>&lt;p&gt;The process engine supports two ways of executing service tasks:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Internal Service tasks: Synchronous invocation of code deployed along with a process application&lt;/li&gt;&#xA;&lt;li&gt;External tasks: Providing a unit of work in a list that can be polled by workers&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;The first option is used when code is implemented as &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/delegation-code/&#34;&gt;Delegation Code&lt;/a&gt; or as a &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/scripting/&#34;&gt;Script&lt;/a&gt;. By contrast, external (service) tasks work in a way that the process engine publishes a unit of work to a worker to fetch and complete. We refer to this as the &lt;em&gt;external task pattern&lt;/em&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Assert Examples</title>
      <link>/manual/1.0/user-guide/testing/assert-examples/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/testing/assert-examples/</guid>
      <description>&lt;h1 id=&#34;assertions&#34;&gt;Assertions&lt;/h1&gt;&#xA;&lt;h2 id=&#34;instance-isactive&#34;&gt;Instance: isActive&lt;/h2&gt;&#xA;&lt;p&gt;Assert that a process instance is currently &amp;lsquo;active&amp;rsquo;, so neither suspended nor ended:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;assertThat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;processInstance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;isActive&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;instance-isended&#34;&gt;Instance: isEnded&lt;/h2&gt;&#xA;&lt;p&gt;Assert that a process instance is already ended:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;assertThat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;processInstance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;isEnded&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;instance-isnotended&#34;&gt;Instance: isNotEnded&lt;/h2&gt;&#xA;&lt;p&gt;Assert that a process instance is not ended:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;assertThat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;processInstance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;isNotEnded&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;instance-isstarted&#34;&gt;Instance: isStarted&lt;/h2&gt;&#xA;&lt;p&gt;Assert that a process instance is started:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;assertThat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;processInstance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;isStarted&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;instance-issuspended&#34;&gt;Instance: isSuspended&lt;/h2&gt;&#xA;&lt;p&gt;Assert that a process instance is suspended:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;assertThat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;processInstance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;isSuspended&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;instance-haspassed&#34;&gt;Instance: hasPassed&lt;/h2&gt;&#xA;&lt;p&gt;Assert that a process instance has passed a specified activity:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Connectors</title>
      <link>/manual/1.0/user-guide/process-engine/connectors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/process-engine/connectors/</guid>
      <description>&lt;p&gt;With the dependency &lt;a href=&#34;https://github.com/camunda/camunda-bpm-platform/tree/master/connect&#34;&gt;camunda-connect&lt;/a&gt;, the process engine supports simple&#xA;connectors. Currently the following connector implementations exist:&lt;/p&gt;&#xA;&lt;table class=&#34;table&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;Connector&lt;/th&gt;&#xA;    &lt;th&gt;ID&lt;/th&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;REST HTTP&lt;/td&gt;&#xA;    &lt;td&gt;http-connector&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;SOAP HTTP&lt;/td&gt;&#xA;    &lt;td&gt;soap-http-connector&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;It is also possible to implement your own custom connector in camunda. For more information about extending connectors please visit the &lt;a href=&#34;/manual/1.0/manual/1.0/reference/connect/extending-connect/&#34;&gt;Connector reference&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h1 id=&#34;configure-camunda-connect&#34;&gt;Configure Camunda Connect&lt;/h1&gt;&#xA;&lt;p&gt;As Camunda Connect is available only partially when using the process engine (check the list below). With a pre-built distribution, Camunda Connect is already preconfigured.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Limitations</title>
      <link>/manual/1.0/user-guide/model-api/cmmn-model-api/limitations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/model-api/cmmn-model-api/limitations/</guid>
      <description>&lt;p&gt;The CMMN model API is able to read CMMN 1.1 as well as CMMN 1.0 models. Its primary use case is to work with models of the latest version, such that there are limitations when editing CMMN models of prior versions.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;ModelElementType#getTypeNamespace()&lt;/code&gt; returns CMMN 1.1 namespace for elements which are present in CMMN 1.0 and CMMN 1.1&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;CMMN#createEmptyModel()&lt;/code&gt; always creates a CMMN 1.1 model. CMMN 1.0 models cannot be created anymore.&lt;/li&gt;&#xA;&lt;li&gt;It is not possible to change and save an existing CMMN 1.0 model.&lt;/li&gt;&#xA;&lt;li&gt;CMMN 1.0 attributes and elements that have been removed in CMMN 1.1 cannot be added to a CMMN 1.1 model. Their accessor methods are marked &lt;code&gt;@Deprecated&lt;/code&gt;. For a list of affected elements confer the &lt;a href=&#34;/manual/1.0/manual/1.0/reference/cmmn11/migration/10-to-11/&#34;&gt;guide on migrating CMMN models between specification versions&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>JSF Task Forms</title>
      <link>/manual/1.0/user-guide/task-forms/jsf-task-forms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/task-forms/jsf-task-forms/</guid>
      <description>&lt;h1 id=&#34;adding-jsf-forms-to-your-process-application&#34;&gt;Adding JSF Forms to your Process Application&lt;/h1&gt;&#xA;&#xA;&lt;div class=&#34;note bg-info docs-info&#34;&gt;&#xA;  &lt;h3&gt;Heads-up!&lt;/h3&gt;&#xA;  &lt;p&gt;The required CDI beans for this functionality are currently not available in &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/quarkus-integration/cdi-integration/#task-form-beans&#34;&gt;Quarkus applications&lt;/a&gt; out of the box.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;If you add JSF forms as described below, you can easily use them as &lt;br/&gt;&#xA;&lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/task-forms/#external-task-forms&#34;&gt;external task forms&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;A working example can be found in the &lt;a href=&#34;https://github.com/camunda/camunda-bpm-examples/tree/master/usertask/task-form-external-jsf&#34;&gt;examples repository&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;The BPMN process used for this example is shown in the image below:&lt;/p&gt;&#xA;&lt;figure class=&#34;image&#34;&gt;&#xA;  &lt;span&gt;&lt;img&#xA;      src=&#34;../img/task-form-process.png&#34;&#xA;      &#xA;          title=&#34;Task Form Process&#34;&#xA;       /&gt;&lt;/span&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;In this process model we added so called form keys to&lt;/p&gt;</description>
    </item>
    <item>
      <title>Process Versioning</title>
      <link>/manual/1.0/user-guide/process-engine/process-versioning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/process-engine/process-versioning/</guid>
      <description>&lt;h1 id=&#34;versioning-of-process-definitions&#34;&gt;Versioning of Process Definitions&lt;/h1&gt;&#xA;&lt;p&gt;Business Processes are by nature long running. The process instances will maybe last for weeks, or months. In the meantime the state of the process instance is stored to the database. But sooner or later you might want to change the process definition even if there are still running instances.&lt;/p&gt;&#xA;&lt;p&gt;This is supported by the process engine:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;If you redeploy a changed process definition, you get a new version in the database.&lt;/li&gt;&#xA;&lt;li&gt;Running process instances will continue to run in the version they were started in.&lt;/li&gt;&#xA;&lt;li&gt;New process instances will run in the new version - unless specified explicitly.&lt;/li&gt;&#xA;&lt;li&gt;Support for migrating process instances to new a version is supported within certain limits.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;You can see different versions in the process definition table and the process instances are linked to this:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Process Instance Migration</title>
      <link>/manual/1.0/user-guide/process-engine/process-instance-migration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/process-engine/process-instance-migration/</guid>
      <description>&lt;p&gt;Whenever a new version of a process definition is deployed, existing process instances that run&#xA;on previous versions are not affected. That means, the new process definition does not apply&#xA;to them automatically. If process instances are supposed to continue execution on a different process&#xA;definition, the &lt;em&gt;process instance migration&lt;/em&gt; API can be employed.&lt;/p&gt;&#xA;&lt;p&gt;Migration consists of two parts:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Creating a &lt;em&gt;migration plan&lt;/em&gt; that describes how process instances are to be migrated from one&#xA;process definition to another&lt;/li&gt;&#xA;&lt;li&gt;Applying the migration plan to a set of process instances&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;A migration plan consists of a set of &lt;em&gt;migration instructions&lt;/em&gt; that in essence are mappings between&#xA;activities of the two process definitions. In particular, it maps an activity of the &lt;em&gt;source process definition&lt;/em&gt;,&#xA;i.e., the definition process instances are migrated from, to an activity of the &lt;em&gt;target process definition&lt;/em&gt;,&#xA;i.e., the definition process instances are migrated to. A migration instruction ensures that an instance of the source&#xA;activity is migrated into an instance of the target activity. A migration plan is complete when there are instructions for&#xA;all active source activities.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Deployment Cache</title>
      <link>/manual/1.0/user-guide/process-engine/deployment-cache/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/process-engine/deployment-cache/</guid>
      <description>&lt;hr&gt;&#xA;&lt;p&gt;All process definitions are cached (after they have been parsed) to avoid polling the database every time a process definition is needed and because process definition data doesn&amp;rsquo;t change. This reduces the latency of referencing the process definitions and thus improves the performance of the system.&lt;/p&gt;&#xA;&lt;h1 id=&#34;customize-the-maximum-capacity-of-the-cache&#34;&gt;Customize the maximum Capacity of the Cache&lt;/h1&gt;&#xA;&lt;p&gt;If one has many process definitions, the cache might occupy a large amount of memory and the capacity of the working memory may reach its limits. Therefore, after the maximum capacity is reached the least recently used process definition entry is evicted from the cache to satisfy the capacity condition. However, if one still meets out of memory issues, it can be necessary to lower the maximum capacity of the cache.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Password Hashing</title>
      <link>/manual/1.0/user-guide/process-engine/password-hashing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/process-engine/password-hashing/</guid>
      <description>&lt;p&gt;This chapter is about how cryptographic password hashing is done in CIB seven. In particular, the hashing algorithm that is being used and the salt generation. If you are not familiar with these topics, we recommend reading the articles about &lt;a href=&#34;https://en.wikipedia.org/wiki/Cryptographic_hash_function&#34;&gt;cryptographic hash function&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/Salt_(cryptography)&#34;&gt;salt&lt;/a&gt; and &lt;a href=&#34;https://crackstation.net/hashing-security.htm&#34;&gt;secure password hashing&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;The Camunda version 7.6 and earlier use the cryptographic hash function &lt;a href=&#34;https://en.wikipedia.org/wiki/SHA-1&#34;&gt;SHA-1&lt;/a&gt;. Since Camunda version 7.7 the hash function &lt;a href=&#34;https://en.wikipedia.org/wiki/SHA-2&#34;&gt;SHA-512&lt;/a&gt; is used. If there is a need for another custom hash function, it is possible to plugin a &lt;a href=&#34;#customize-the-hashing-algorithm&#34;&gt;custom password hashing algorithm&lt;/a&gt; in Camunda.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Password Policy</title>
      <link>/manual/1.0/user-guide/process-engine/password-policy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/process-engine/password-policy/</guid>
      <description>&lt;p&gt;This chapter is about configuring and using a password policy for engine-managed user accounts. A password policy makes sure that only passwords that meet certain criteria are allowed. A policy can consist of any number of rules. Violation of one of the policy&amp;rsquo;s rules results in an error and the user not being saved.&lt;/p&gt;&#xA;&lt;p&gt;Since version 7.11.0, the engine comes with a standard password policy that is disabled by default and must be configured to use.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Transactions in Processes</title>
      <link>/manual/1.0/user-guide/process-engine/transactions-in-processes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/process-engine/transactions-in-processes/</guid>
      <description>&lt;p&gt;The process engine is a piece of passive Java code which works in the Thread of the client. For instance, if you have a web application allowing users to start a new process instance and a user clicks on the corresponding button, some thread from the application server&amp;rsquo;s http-thread-pool will invoke the API method &lt;code&gt;runtimeService.startProcessInstanceByKey(...)&lt;/code&gt;, thus &lt;em&gt;entering&lt;/em&gt; the process engine and starting a new process instance. We call this &amp;ldquo;borrowing the client thread&amp;rdquo;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Job Executor</title>
      <link>/manual/1.0/user-guide/process-engine/the-job-executor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/process-engine/the-job-executor/</guid>
      <description>&lt;p&gt;A job is an explicit representation of a task to trigger process execution. A job is created when a timer event or a task marked for asynchronous execution (see &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/transactions-in-processes/&#34;&gt;transaction boundaries&lt;/a&gt;) is approached. Job processing can therefore be separated into three phases:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#job-creation&#34;&gt;Job Creation&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#job-acquisition&#34;&gt;Job Acquisition&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#job-execution&#34;&gt;Job Execution&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;While jobs are created during process execution, job acquisition and execution are the job executor&amp;rsquo;s responsibility. The following diagram illustrates these two steps:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Multi-Tenancy</title>
      <link>/manual/1.0/user-guide/process-engine/multi-tenancy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/process-engine/multi-tenancy/</guid>
      <description>&lt;p&gt;&lt;em&gt;Multi-Tenancy&lt;/em&gt; regards the case in which a single Camunda installation should serve more than one tenant. For each tenant, certain guarantees of isolation should be made. For example, one tenant&amp;rsquo;s process instances should not interfere with those of another tenant.&lt;/p&gt;&#xA;&lt;p&gt;Multi-Tenancy can be achieved in two different ways. One way is to use &lt;a href=&#34;#one-process-engine-per-tenant&#34;&gt;one process engine per tenant&lt;/a&gt;. The other way is to use just one process engine and associate the data with &lt;a href=&#34;#single-process-engine-with-tenant-identifiers&#34;&gt;tenant identifiers&lt;/a&gt;. The two ways differ from each other in the level of data isolation, the effort of maintenance and the scalability. A combination of both ways is also possible.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Id Generators</title>
      <link>/manual/1.0/user-guide/process-engine/id-generator/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/process-engine/id-generator/</guid>
      <description>&lt;p&gt;All persistent entities managed by the process engine (Process Instances, Tasks, &amp;hellip;) have unique&#xA;Ids. These Ids uniquely identify an individual task, process instance, etc. When these entities are&#xA;persisted to the database, the ids are used as primary keys in the corresponding database tables.&lt;/p&gt;&#xA;&lt;p&gt;Out of the box, the process engine provides two Id generator implementations.&lt;/p&gt;&#xA;&lt;h1 id=&#34;the-database-id-generator&#34;&gt;The Database Id Generator&lt;/h1&gt;&#xA;&lt;p&gt;The Database Id Generator is implemented using a sequence Generator on top of the &lt;code&gt;ACT_GE_PROPERTY&lt;/code&gt;&#xA;table.&lt;/p&gt;</description>
    </item>
    <item>
      <title>External Task Client Spring Boot Starter</title>
      <link>/manual/1.0/user-guide/ext-client/spring-boot-starter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/ext-client/spring-boot-starter/</guid>
      <description>&lt;p&gt;Camunda provides a Spring Boot Starter for the External Task Client. This allows you to easily add&#xA;the External Task Client to your Spring Boot application by adding the following Maven dependency to&#xA;your &lt;code&gt;pom.xml&lt;/code&gt; file:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.camunda.bpm.springboot&lt;span class=&#34;nt&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;camunda-bpm-spring-boot-starter-external-task-client&lt;span class=&#34;nt&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;7.22.0-cibseven&lt;span class=&#34;nt&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Please check Camunda &lt;a href=&#34;https://github.com/camunda/camunda-bpm-examples/tree/7.22#external-task-client-spring-boot&#34;&gt;External Task Client Spring Boot Starter Examples&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;The Client can subscribe to one or more topic names that are defined in your BPMN process model.&#xA;When the execution waits in an External Task, the Client executes your custom business logic.&#xA;For instance, the customer&amp;rsquo;s credit score is checked, and if successful, the External Task&#xA;can be marked as completed and the execution proceeds.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Logging</title>
      <link>/manual/1.0/user-guide/logging/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/logging/</guid>
      <description>&lt;p&gt;This page provides information about logging in CIB seven.&lt;/p&gt;&#xA;&lt;h1 id=&#34;slf4j&#34;&gt;SLF4J&lt;/h1&gt;&#xA;&lt;p&gt;Most Camunda modules, including the CIB seven engine, use &lt;a href=&#34;http://www.slf4j.org/&#34;&gt;slf4j&lt;/a&gt; as logging &amp;ldquo;facade&amp;rdquo;. This allows users to direct logging output to the logging &amp;ldquo;backend&amp;rdquo; of their choice, such as &lt;a href=&#34;http://logback.qos.ch/&#34;&gt;logback&lt;/a&gt; or &lt;a href=&#34;http://logging.apache.org/log4j/&#34;&gt;log4j&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;preconfigured-logging-with-a-shared-process-engine&#34;&gt;Preconfigured Logging with a Shared Process Engine&lt;/h2&gt;&#xA;&lt;p&gt;When installing Camunda as a shared process engine in an application server, Camunda logging is pre-configured.&lt;/p&gt;&#xA;&lt;p&gt;On all application servers except Wildfly, logging is pre-configured using the slf4j-jdk14 bridge.&#xA;This means that Camunda effectively re-directs all its logging to Java Util Logging.&#xA;Both SLF4J API and the slf4j-jdk14 bridge are available in a shared classpath which means that they are available in the classpath of all applications deployed on these servers.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Metrics</title>
      <link>/manual/1.0/user-guide/process-engine/metrics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/process-engine/metrics/</guid>
      <description>&lt;p&gt;The process engine reports runtime metrics to the database that can help draw conclusions about usage, load, and performance of CIB seven. Metrics are reported in the database tables &lt;code&gt;ACT_RU_METER_LOG&lt;/code&gt; and &lt;code&gt;ACT_RU_TASK_METER_LOG&lt;/code&gt;. Single metric entries in &lt;code&gt;ACT_RU_METER_LOG&lt;/code&gt; consist of a metric identifier, a value as natural number in the Java &lt;code&gt;long&lt;/code&gt; range that the metric took in a certain timespan and a name identifying the metric reporter. Task metric entries in &lt;code&gt;ACT_RU_TASK_METER_LOG&lt;/code&gt; comprise a fixed-length, pseudonymized assignee value and the point in time it was assigned at. There is a set of built-in metrics that are reported by default.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Incidents</title>
      <link>/manual/1.0/user-guide/process-engine/incidents/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/process-engine/incidents/</guid>
      <description>&lt;p&gt;Incidents are notable events that happen in the process engine. Such incidents usually indicate some kind of problem related to process execution. Examples of such incidents may be a failed job with depleted retries (retries = 0), indicating that an execution is stuck and manual administrative action is necessary to repair the process instance. If such incidents arise, the process engine fires an internal event which can be handled by a configurable incident handler.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Security Instructions</title>
      <link>/manual/1.0/user-guide/security/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/security/</guid>
      <description>&lt;p&gt;This page provides an overview of how to secure a CIB seven installation. For CIB seven&amp;rsquo;s security policy, a list of security notices and a guide how to report vulnerabilities, please visit the &lt;a href=&#34;/manual/1.0/security&#34;&gt;general security documentation&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;In order to secure a CIB seven installation, CIB seven itself must be configured correctly and it must be integrated correctly into its environment. This section also identifies areas where we consider security issues to be relevant for the specific CIB seven product and listed those in the subsequent sections. Compliance for those areas is ensured based on common industry best practices and influenced by security requirements of standards like OWASP Top 10 and others&lt;/p&gt;</description>
    </item>
    <item>
      <title>Process Engine Plugins</title>
      <link>/manual/1.0/user-guide/process-engine/process-engine-plugins/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/process-engine/process-engine-plugins/</guid>
      <description>&lt;p&gt;The process engine configuration can be extended through process engine plugins. A process engine plugin is an&#xA;extension to the &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/process-engine-bootstrapping/&#34;&gt;process engine configuration&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;A plugin must provide an implementation of the&#xA;&lt;a href=&#34;/manual/1.0/javadoc/cibseven/1.0/org/camunda/bpm/engine/impl/cfg/ProcessEnginePlugin.html&#34;&gt;ProcessEnginePlugin&lt;/a&gt;&#xA; interface.&lt;/p&gt;&#xA;&lt;h1 id=&#34;configure-process-engine-plugins&#34;&gt;Configure Process Engine Plugins&lt;/h1&gt;&#xA;&lt;p&gt;Process engine plugins can be configured&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;in the &lt;a href=&#34;/manual/1.0/manual/1.0/reference/deployment-descriptors/&#34;&gt;Camunda Deployment Descriptors&lt;/a&gt; (bpm-platform.xml/processes.xml),&lt;/li&gt;&#xA;&lt;li&gt;in the &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/runtime-container-integration/jboss/&#34;&gt;Wildfly configuration file&lt;/a&gt; (standalone.xml/domain.xml),&lt;/li&gt;&#xA;&lt;li&gt;using &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/spring-framework-integration/#configure-a-process-engine-plugin-in-spring&#34;&gt;Spring Beans XML&lt;/a&gt;,&lt;/li&gt;&#xA;&lt;li&gt;in the &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/cibseven-run/#process-engine-plugin-registration&#34;&gt;Camunda Run YAML configuration files&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;programatically.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;The following is an example of how to configure a process engine plugin in a bpm-platform.xml file:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Identity Service</title>
      <link>/manual/1.0/user-guide/process-engine/identity-service/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/process-engine/identity-service/</guid>
      <description>&lt;p&gt;The identity service is an API abstraction over various user/group repositories. The basic entities are&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;User: a user identified by a unique Id&lt;/li&gt;&#xA;&lt;li&gt;Group: a group identified by a unique Id&lt;/li&gt;&#xA;&lt;li&gt;Membership: the relationship between users and groups&lt;/li&gt;&#xA;&lt;li&gt;Tenant: a tenant identified by a unique Id&lt;/li&gt;&#xA;&lt;li&gt;Tenant Membership: the relationship between tenants and users/groups&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Example:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;User&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;demoUser&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;processEngine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getIdentityService&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;createUserQuery&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;userId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;demo&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;singleResult&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;CIB seven distinguishes between read-only and writable user repositories. A read-only user repository provides read-only access to the underlying user/group database. A writable user repository allows write access to the user database which includes creating, updating and deleting users and groups.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Authorization Service</title>
      <link>/manual/1.0/user-guide/process-engine/authorization-service/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/process-engine/authorization-service/</guid>
      <description>&lt;p&gt;Camunda allows users to authorize access to the data it manages. This makes it possible to configure which user can access which process instances, tasks, etc&amp;hellip;&lt;/p&gt;&#xA;&lt;p&gt;Authorization has a performance cost and introduces some complexity. It should only be used if required.&lt;/p&gt;&#xA;&lt;h1 id=&#34;when-is-authorization-required&#34;&gt;When is Authorization required?&lt;/h1&gt;&#xA;&lt;p&gt;Not every Camunda setup needs to enable authorization. In many scenarios, Camunda is embedded into an application and the application itself ensures that users can only access data they are authorized to access. Generally speaking, authorization is only required if untrusted parties interact with the process engine API directly. If you embed the process engine into a Java application, you usually do not need to enable authorization. The application can control how the API is accessed.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Deployments</title>
      <link>/manual/1.0/user-guide/process-engine/deployments/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/process-engine/deployments/</guid>
      <description>&lt;p&gt;Before a process (or case, or decision) can be executed by the process engine, it has to be deployed. A deployment is a logical entity that groups multiple resources that are deployed together. Deployments can be made programmatically via Java API or &lt;a href=&#34;/manual/1.0/manual/1.0/reference/rest/specification/#tag/Deployment/operation/createDeployment&#34;&gt;REST API&lt;/a&gt;, or declaratively for resources of a &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-applications/&#34;&gt;Process Application&lt;/a&gt;. This section covers advanced deployment concepts.&lt;/p&gt;&#xA;&lt;h1 id=&#34;deployments-in-a-clustered-scenario&#34;&gt;Deployments in a Clustered Scenario&lt;/h1&gt;&#xA;&lt;p&gt;Before the process engine starts to perform a deployment, it tries to acquire an exclusive lock on a row in the table &lt;code&gt;ACT_GE_PROPERTY&lt;/code&gt;. When the process engine is able to acquire the lock successfully, it starts to deploy and holds the exclusive lock as long as the execution of the deployment take place.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Process Diagram Visualization</title>
      <link>/manual/1.0/user-guide/process-engine/process-diagram-api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/process-engine/process-diagram-api/</guid>
      <description>&lt;p&gt;A BPMN process diagram is a formidable place to visualize information around your process. We recommend to use JavaScript libraries to display process diagrams and enrich them with additional information.&lt;/p&gt;&#xA;&lt;p&gt;In our web applications &lt;a href=&#34;/manual/1.0/manual/1.0/webapps/cockpit/&#34;&gt;Cockpit&lt;/a&gt; and &lt;a href=&#34;/manual/1.0/manual/1.0/webapps/tasklist/&#34;&gt;Tasklist&lt;/a&gt;, we use &lt;a href=&#34;http://bpmn.io/&#34;&gt;bpmn.io&lt;/a&gt;, a toolkit for rendering BPMN 2.0 process models directly in the browser. It allows adding additional information to the diagram and includes ways for user interaction. Although bpmn.io is still under development, its API is rather stable.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Time zones</title>
      <link>/manual/1.0/user-guide/process-engine/time-zones/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/process-engine/time-zones/</guid>
      <description>&lt;h2 id=&#34;process-engine&#34;&gt;Process engine&lt;/h2&gt;&#xA;&lt;p&gt;The CIB seven engine uses the default time zone of the JVM when operating with dates:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;When reading datetime values from BPMN XML&lt;/li&gt;&#xA;&lt;li&gt;In REST responses&lt;/li&gt;&#xA;&lt;li&gt;When reading/writing DateTime values from/to the database&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;database&#34;&gt;Database&lt;/h2&gt;&#xA;&lt;p&gt;Database time zone and database sessions time zone are out of scope of the CIB seven engine and must be configured explicitly.&lt;/p&gt;&#xA;&lt;p&gt;However, Timestamp columns in the CIB seven engine are using the &lt;code&gt;TIMESTAMP [WITHOUT TIME ZONE]&lt;/code&gt; data type (the name differs in different database servers).&#xA;For this reason, it is not recommended to change the time zone on the database side once set, since it may lead to an incorrect operation of the CIB seven engine.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Batch</title>
      <link>/manual/1.0/user-guide/process-engine/batch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/process-engine/batch/</guid>
      <description>&lt;p&gt;Batch is a concept to offload workload from the current execution to be&#xA;processed in the background. This allows to run a process engine command&#xA;asynchronously on a large set of instances without blocking. It also decouples&#xA;the separate command invocations from each other.&lt;/p&gt;&#xA;&lt;p&gt;For example the &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/process-instance-migration/&#34;&gt;process instance migration&lt;/a&gt; command can be&#xA;&lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/process-instance-migration/#asynchronous-batch-migration-execution&#34;&gt;executed using a batch&lt;/a&gt;. This allows to migrate&#xA;process instances asynchronously. In a synchronous process instance migration,&#xA;all migrations are executed in a single transaction.  First of all, this&#xA;requires all of them to succeed to commit the transaction. For a&#xA;large set of process instances, the transaction can also become too large to even be&#xA;committed to the database. With batch migration both of these traits change.&#xA;A batch executes the migration in smaller chunks, each using a single&#xA;transaction.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Batch operations</title>
      <link>/manual/1.0/user-guide/process-engine/batch-operations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/process-engine/batch-operations/</guid>
      <description>&lt;p&gt;The following operations can be executed asynchronously&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/process-instance-migration/#asynchronous-batch-migration-execution&#34;&gt;Process Instance Migration&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#cancellation-of-running-process-instances&#34;&gt;Cancellation of running Process Instances&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#deletion-of-historic-process-instances&#34;&gt;Deletion of Historic Process Instances&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#update-suspend-state-of-process-instances&#34;&gt;Update suspend state of process instances&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#setting-retries-and-due-dates-of-jobs-using-the-builder-pattern&#34;&gt;Setting retries and due dates of jobs using the builder pattern&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#setting-retries-of-jobs-associated-with-process-instances&#34;&gt;Setting retries of jobs associated with Process Instances&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/process-instance-modification/#modification-of-multiple-process-instances&#34;&gt;Process Instance Modification&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/process-instance-restart/#asynchronous-batch-execution&#34;&gt;Process Instance Restart&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#setting-retries-of-external-tasks&#34;&gt;Setting retries of external tasks&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#set-variables-to-process-instances&#34;&gt;Set Variables to Process Instances&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#correlate-messages-to-process-instances&#34;&gt;Correlate Messages to Process Instances&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#historic-process-instances&#34;&gt;Set a Removal Time to Historic Process Instances&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#historic-decision-instances&#34;&gt;Set a Removal Time to Historic Decision Instances&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#historic-batches&#34;&gt;Set a Removal Time to Historic Batches&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;All batch operations rely on corresponding methods that provide the possibility to&#xA;operate on a list of entities synchronously. Please refer to the general &lt;a href=&#34;/manual/1.0/manual/1.0/user-guide/process-engine/batch/&#34;&gt;Batch&lt;/a&gt; documentation to&#xA;understand the creation process better.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Error Handling</title>
      <link>/manual/1.0/user-guide/process-engine/error-handling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/process-engine/error-handling/</guid>
      <description>&lt;h1 id=&#34;error-handling-strategies&#34;&gt;Error Handling Strategies&lt;/h1&gt;&#xA;&lt;p&gt;There are a couple of basic strategies to handle errors and exceptions within processes. The decision which strategy to use depends on:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Technical vs. Business Errors: Does the error have some business meaning and causes an alternative process flow (like &amp;ldquo;item not on stock&amp;rdquo;) or is it a technical malfunction (like &amp;ldquo;network currently down&amp;rdquo;)?&lt;/li&gt;&#xA;&lt;li&gt;Explicit error handling or generic approach: For some situations you want to explicitly model what should happen in case of an error (typically for business errors). For a lot of situations you don&amp;rsquo;t want to do that but have some generic mechanism which applies for errors, simplifying your process models (typical for technical errors, imagine you would have to model network outage on every task were it might possibly occur? You wouldn&amp;rsquo;t be able to recognize your business process any more).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;In the context of the process engine, errors are normally raised as Java exceptions which you have to handle. Let&amp;rsquo;s have a look at how to handle them.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Diagnostics data</title>
      <link>/manual/1.0/user-guide/process-engine/diagnostics-data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/process-engine/diagnostics-data/</guid>
      <description>&lt;p&gt;Diagnostics data is constantly collected and can be collected only by you. This allows you to access the collected data through the Java and REST APIs of Camunda.&#xA;Being able to easily access the collected data is helpful when asking for help in our &lt;a href=&#34;https://forum.camunda.org/&#34;&gt;forum&lt;/a&gt; or when opening issues in our &lt;a href=&#34;https://app.camunda.com/jira&#34;&gt;issue tracker&lt;/a&gt; as it contains many of the information that are usually necessary to understand your Camunda setup.&lt;/p&gt;&#xA;&lt;h2 id=&#34;how-to-access-the-data&#34;&gt;How to access the data&lt;/h2&gt;&#xA;&lt;h3 id=&#34;java-api&#34;&gt;Java API&lt;/h3&gt;&#xA;&lt;p&gt;To fetch the collected data via the Java API, you can use the &lt;code&gt;ManagementService&lt;/code&gt; class. For example, the following code retrieves the detected JDK vendor and version:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Version Compatibility</title>
      <link>/manual/1.0/user-guide/ext-client/compatibility-matrix/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/manual/1.0/user-guide/ext-client/compatibility-matrix/</guid>
      <description>&lt;p&gt;Each version of CIB seven is bound to a specific version of the &lt;strong&gt;External Task Clients&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;p&gt;CIB seven and its compatible &lt;strong&gt;Java&lt;/strong&gt; External Task Client always share the same version.&lt;/p&gt;&#xA;&lt;table class=&#34;table table-striped&#34;&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;th&gt;CIB seven version&lt;/th&gt;&#xA;    &lt;th&gt;NodeJS client&lt;/th&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr&gt;&#xA;    &lt;td&gt;7.22.x&lt;/td&gt;&#xA;    &lt;td&gt;3.1.x&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;Only these default combinations are recommended (and supported) by Camunda. Nevertheless, each version of the External&#xA;Task Clients can be combined with newer patch versions of the CIB seven Workflow Engine.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
