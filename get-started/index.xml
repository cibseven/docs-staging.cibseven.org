<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Getting started with CIB seven platform</title>
    <link>/get-started/</link>
    <description>Recent content on Getting started with CIB seven platform</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="/get-started/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Download and Installation</title>
      <link>/get-started/dmn/install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/get-started/dmn/install/</guid>
      <description>&lt;p&gt;First you need to set up your development environment and install the CIB seven and the Camunda Modeler.&lt;/p&gt;&#xA;&lt;h1 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h1&gt;&#xA;&lt;p&gt;Make sure you have the following set of tools installed:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Java JDK 11+,&lt;/li&gt;&#xA;&lt;li&gt;Apache Maven (optional, if not installed you can use embedded Maven inside Eclipse.)&lt;/li&gt;&#xA;&lt;li&gt;A modern web browser (recent Firefox, Chrome or Microsoft Edge will work fine)&lt;/li&gt;&#xA;&lt;li&gt;Eclipse integrated development environment (IDE)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;cib-seven&#34;&gt;CIB seven&lt;/h1&gt;&#xA;&lt;p&gt;First, download a distribution of the CIB seven. You can choose from different distributions for various application servers. In this tutorial, we will use the Apache Tomcat based distribution. Download it from &lt;a href=&#34;https://cibseven.de/download/&#34;&gt;the download page&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Download and Installation (1/6)</title>
      <link>/get-started/quick-start/install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/get-started/quick-start/install/</guid>
      <description>&lt;p&gt;First, you need to install the CIB seven Platform and the Camunda Modeler.&lt;/p&gt;&#xA;&lt;p&gt;In the following section, we&amp;rsquo;ll describe how to install the CIB seven platform locally on your machine.&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;note bg-info docs-info&#34;&gt;&#xA;  &lt;h3&gt;Hint&lt;/h3&gt;&#xA;  &lt;p&gt;&lt;p&gt;If you prefer, you can also run the CIB seven with Docker:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker pull cibseven/cibseven:run-latest&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker run -d --name cibseven -p 8080:8080 cibseven/cibseven:run-latest&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Afterwards, you can &lt;a href=&#34;#camunda-modeler&#34;&gt;install the Camunda Modeler&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h1&gt;&#xA;&lt;p&gt;Please make sure you have the following installed:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Setup a Spring Boot Project</title>
      <link>/get-started/spring-boot/project-setup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/get-started/spring-boot/project-setup/</guid>
      <description>&lt;p&gt;First, let&amp;rsquo;s set up your first process application project in the IDE of your choice, the following description uses Eclipse.&lt;/p&gt;&#xA;&lt;h1 id=&#34;requirements&#34;&gt;Requirements&lt;/h1&gt;&#xA;&lt;p&gt;The project requires Java 17/21.&lt;/p&gt;&#xA;&lt;h1 id=&#34;set-up-a-java-project&#34;&gt;Set Up a Java Project&lt;/h1&gt;&#xA;&lt;p&gt;We will start by setting up a Spring Boot application as an Apache Maven Project inside Eclipse. This consists of three steps:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Create a new Maven Project in Eclipse&lt;/li&gt;&#xA;&lt;li&gt;Add the CIB seven &amp;amp; Spring Boot dependencies&lt;/li&gt;&#xA;&lt;li&gt;Add a main class as an entry point for launching the Spring Boot application.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;In the following sections, we go through this process step by step.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Apache Maven Coordinates</title>
      <link>/get-started/apache-maven/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/get-started/apache-maven/</guid>
      <description>&lt;p&gt;This page lists the most commonly used Apache Maven Coordinates for CIB seven.&lt;/p&gt;&#xA;&lt;p&gt;CIB seven relies on Sonatype Nexus Repository to provide all artifacts to users at &lt;a href=&#34;https://artifacts.cibseven.de/&#34;&gt;artifacts.cibseven.de&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Extra repository should be added to &lt;code&gt;settings.xml&lt;/code&gt; or to the POM file:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;repositories&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;repository&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;id&amp;gt;&lt;/span&gt;mvn-cibseven-public&lt;span class=&#34;nt&#34;&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;CIB seven Public Repository&lt;span class=&#34;nt&#34;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;url&amp;gt;&lt;/span&gt;https://artifacts.cibseven.de/repository/public/&lt;span class=&#34;nt&#34;&gt;&amp;lt;/url&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/repository&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;/repositories&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Publishing to any public repositories is pending.&lt;/p&gt;&#xA;&lt;h1 id=&#34;cib-seven-bom-bill-of-materials&#34;&gt;CIB seven BOM (Bill of Materials)&lt;/h1&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;dependencyManagement&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;dependencies&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.cibseven.bpm&lt;span class=&#34;nt&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;cibseven-bom&lt;span class=&#34;nt&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.1.0&lt;span class=&#34;nt&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;scope&amp;gt;&lt;/span&gt;import&lt;span class=&#34;nt&#34;&gt;&amp;lt;/scope&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;lt;type&amp;gt;&lt;/span&gt;pom&lt;span class=&#34;nt&#34;&gt;&amp;lt;/type&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;lt;/dependencies&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/dependencyManagement&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;div class=&#34;note bg-info docs-info&#34;&gt;&#xA;  &lt;h3&gt;Use the BOM!&lt;/h3&gt;&#xA;  &lt;p&gt;Please import the CIB seven BOM if you use multiple CIB seven projects. The BOM defines versions for all CIB seven projects. This way it is ensured that no incompatible versions are imported.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Configure a Spring Boot Project</title>
      <link>/get-started/spring-boot/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/get-started/spring-boot/configuration/</guid>
      <description>&lt;p&gt;The CIB seven Spring Boot Application created in previous step uses the default and best practice configuration, embedded in a starter.&#xA;There are several ways to customize or override the configuration. The easiest is to provide a set of parameters in the &lt;code&gt;application.yaml&lt;/code&gt; (or &lt;code&gt;application.properties&lt;/code&gt;) file.&#xA;The full list of supported configuration parameters can be found &lt;a href=&#34;/get-started/manual/latest/user-guide/spring-boot-integration/configuration/#cib-seven-engine-properties&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;customize-configuration&#34;&gt;Customize Configuration&lt;/h2&gt;&#xA;&lt;p&gt;Let&amp;rsquo;s create an &lt;code&gt;application.yaml&lt;/code&gt; file in the &lt;code&gt;src/main/resources&lt;/code&gt; folder with the following content:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Executing automated steps (2/6)</title>
      <link>/get-started/quick-start/service-task/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/get-started/quick-start/service-task/</guid>
      <description>&lt;p&gt;In this section, you&amp;rsquo;ll learn how to create your first BPMN 2.0 process with the Camunda Modeler and how to execute automated steps. Start by opening up Camunda Modeler.&lt;/p&gt;&#xA;&lt;h1 id=&#34;create-a-new-bpmn-diagram&#34;&gt;Create a new BPMN Diagram&lt;/h1&gt;&#xA;&lt;p&gt;Create a new BPMN diagram by clicking &lt;em&gt;File &amp;gt; New File &amp;gt; BPMN Diagram (Camunda 7)&lt;/em&gt;.&lt;/p&gt;&#xA;&lt;figure class=&#34;image&#34;&gt;&#xA;  &lt;span&gt;&lt;img&#xA;      src=&#34;../img/modeler-new-bpmn-diagram.png&#34;&#xA;       /&gt;&lt;/span&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;h2 id=&#34;start-with-a-simple-process&#34;&gt;Start with a Simple Process&lt;/h2&gt;&#xA;&lt;p&gt;Start by modeling a simple process.&lt;/p&gt;&#xA;&lt;figure class=&#34;image&#34;&gt;&#xA;  &lt;span&gt;&lt;img&#xA;      src=&#34;../img/modeler-step1.png&#34;&#xA;       /&gt;&lt;/span&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;Double-click on the Start Event. A text box will open. Name the Start Event &lt;em&gt;Payment Retrieval Requested&lt;/em&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Setup a Java Project for DMN</title>
      <link>/get-started/dmn/project-setup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/get-started/dmn/project-setup/</guid>
      <description>&lt;p&gt;Now you are ready to set up your first process application project in the IDE of your choice, the following description uses Eclipse.&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;note bg-info docs-info&#34;&gt;&#xA;  &lt;h3&gt;Terminology - Process vs. Decisions&lt;/h3&gt;&#xA;  &lt;p&gt;DMN is a modeling language for &lt;em&gt;decisions&lt;/em&gt;, whereas BPMN is a language for &lt;em&gt;processes&lt;/em&gt;. This tutorial is about decisions. However, due to BPMN-focused heritage of CIB seven, the Java project contains classes and files with names like &lt;code&gt;ProcessApplication&lt;/code&gt; and &lt;code&gt;processes.xml&lt;/code&gt;. These are in fact generally applicable and can be used with both processes and decisions.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Create a DMN Decision Table</title>
      <link>/get-started/dmn/model/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/get-started/dmn/model/</guid>
      <description>&lt;p&gt;In this section you learn how to create your first &lt;a href=&#34;/get-started/manual/latest/reference/dmn11/decision-table/&#34;&gt;DMN Decision Table&lt;/a&gt; with the Camunda Modeler. The table will contain the decision logic about the desired dish for a given season and guest count.&lt;/p&gt;&#xA;&lt;p&gt;Now start up the Camunda Modeler.&lt;/p&gt;&#xA;&lt;h1 id=&#34;create-a-new-decision-diagram&#34;&gt;Create a new Decision Diagram&lt;/h1&gt;&#xA;&lt;p&gt;Create a new DMN diagram by clicking &lt;em&gt;File &amp;gt; New File &amp;gt; DMN Diagram&lt;/em&gt;.&lt;/p&gt;&#xA;&lt;figure class=&#34;image&#34;&gt;&#xA;  &lt;span&gt;&lt;img&#xA;      src=&#34;../img/modeler-new-dmn-table.png&#34;&#xA;       /&gt;&lt;/span&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;h1 id=&#34;start-with-the-table-header&#34;&gt;Start with the Table Header&lt;/h1&gt;&#xA;&lt;p&gt;Start by setting the name and the id of the decision. Select the decision, open the Properties Panel on the right side and change the text to &amp;ldquo;dish&amp;rdquo; as the technical &lt;a href=&#34;/get-started/manual/latest/reference/dmn11/decision-table/#decision-id&#34;&gt;id of the decision&lt;/a&gt; which is used to reference the decision inside the process application.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Deploy the Process (3/6)</title>
      <link>/get-started/quick-start/deploy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/get-started/quick-start/deploy/</guid>
      <description>&lt;p&gt;In the next step, you&amp;rsquo;ll deploy the Process and start a new instance so you can see that your simple process is working correctly.&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;note bg-info docs-info&#34;&gt;&#xA;  &lt;h3&gt;Deployment Support&lt;/h3&gt;&#xA;  &lt;p&gt;BPMN diagrams must be created for the process engine they intend to be deployed on. You cannot run a BPMN diagram modeled for Camunda Platform in Camunda Cloud, or vice versa, at this time.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;use-the-camunda-modeler-to-deploy-the-process&#34;&gt;Use the Camunda Modeler to Deploy the Process&lt;/h1&gt;&#xA;&lt;p&gt;In order to deploy the Process, click on the deploy button in the Camunda Modeler, then give it the Deployment Name &amp;ldquo;Payment Retrieval&amp;rdquo; and click the Deploy button. From version 3.0.0 on, you will be required to provide an URL for an Endpoint Configuration along with Deployment Details. This can be either the root endpoint to the REST API (e.g. &lt;code&gt;http://localhost:8080/engine-rest&lt;/code&gt;) or an exact endpoint to the deployment creation method (e.g. &lt;code&gt;http://localhost:8080/engine-rest/deployment/create&lt;/code&gt;).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Modeling a BPMN 2.0 Process</title>
      <link>/get-started/spring-boot/model/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/get-started/spring-boot/model/</guid>
      <description>&lt;p&gt;In this section we learn how to deploy a process and invoke a Spring Bean from a BPMN 2.0 Service Task.&lt;/p&gt;&#xA;&lt;h1 id=&#34;deploy-and-invoke-bpmn-process&#34;&gt;Deploy and Invoke BPMN Process&lt;/h1&gt;&#xA;&lt;p&gt;Now that we know how to bootstrap the process engine within a Spring Boot Application, we can add a BPMN 2.0 process&#xA;model and interact with the process from inside our Spring beans. In this section, we will&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Model an executable BPMN 2.0 process.&lt;/li&gt;&#xA;&lt;li&gt;Use Spring Boot Starter auto-deployment for BPMN 2.0 processes.&lt;/li&gt;&#xA;&lt;li&gt;Create a process application.&lt;/li&gt;&#xA;&lt;li&gt;Start a process instance from our process application.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;model-an-executable-bpmn-20-process-and-deploy-it&#34;&gt;Model an Executable BPMN 2.0 Process and Deploy It&lt;/h2&gt;&#xA;&lt;p&gt;Start by modeling an executable process using the Camunda Modeler. The process should look as depicted in the screenshot below.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Add a User Task to the Process (4/6)</title>
      <link>/get-started/quick-start/user-task/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/get-started/quick-start/user-task/</guid>
      <description>&lt;p&gt;In this section, you&amp;rsquo;ll learn how to involve humans in your process by using BPMN 2.0 &lt;em&gt;User Tasks&lt;/em&gt;.&lt;/p&gt;&#xA;&lt;h1 id=&#34;add-a-user-task&#34;&gt;Add a User Task&lt;/h1&gt;&#xA;&lt;p&gt;We want to modify our process so that we can involve humans.&lt;/p&gt;&#xA;&lt;p&gt;To do so, open the process in the Camunda Modeler.&lt;/p&gt;&#xA;&lt;p&gt;Select the create/remove space tool (&amp;lt;||&amp;gt;) from the Modeler&amp;rsquo;s left-hand menu, and use it to create space between the Start Event and the &amp;ldquo;Charge Credit Card&amp;rdquo; Service Task (click and drag the cursor to the right).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Evaluate, Deploy and Test the decision table</title>
      <link>/get-started/dmn/deploy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/get-started/dmn/deploy/</guid>
      <description>&lt;p&gt;In this step, we use Java Code to evaluate the decision table. Then we deploy the web application to Apache Tomcat and verify the result in Cockpit.&lt;/p&gt;&#xA;&lt;h1 id=&#34;evaluate-the-decision-table&#34;&gt;Evaluate the Decision Table&lt;/h1&gt;&#xA;&lt;p&gt;To directly evaluate the decision table after deployment, add the following method to your Application class:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;de.cibseven.getstarted.dmn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nd&#34;&gt;@ProcessApplication&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Dinner App DMN&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;DinnerApplication&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;extends&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ServletProcessApplication&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;protected&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;final&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;static&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Logger&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;LOGGER&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Logger&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getLogger&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DinnerApplication&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nd&#34;&gt;@PostDeploy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;evaluateDecisionTable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ProcessEngine&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;processEngine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DecisionService&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decisionService&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;processEngine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getDecisionService&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;VariableMap&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;variables&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Variables&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;createVariables&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;putValue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;season&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Spring&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;putValue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;guestCount&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DmnDecisionTableResult&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dishDecisionResult&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decisionService&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;evaluateDecisionTableByKey&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;dish&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;variables&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;desiredDish&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dishDecisionResult&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getSingleEntry&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;LOGGER&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Level&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;INFO&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;\n\nDesired dish: {0}\n\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;desiredDish&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;div class=&#34;panel-group gs-download-step-panel&#34; id=&#34;gitStep-4&#34;&gt;&#xA;  &lt;div class=&#34;panel panel-success&#34;&gt;&#xA;    &lt;div class=&#34;panel-heading&#34;&gt;&#xA;      &lt;div class=&#34;pull-right&#34;&gt;&#xA;        &lt;a class=&#34;btn btn-success gs-download-step-btn&#34; href=&#34;https://github.com/cibseven/cibseven-get-started-dmn/archive/Step-4.zip&#34;&gt;&#xA;          &lt;span i class=&#34;glyphicon glyphicon-download-alt&#34;&gt;&lt;/span&gt;&#xA;          Source Code Step-4&#xA;        &lt;/a&gt;&#xA;      &lt;/div&gt;&#xA;      &lt;h4&gt;Catch up: Get the Sources of Step-4.&lt;/h4&gt;&#xA;      &lt;p class=&#34;text-muted&#34;&gt;&#xA;        &lt;a href=&#34;https://github.com/cibseven/cibseven-get-started-dmn/archive/Step-4.zip&#34;&gt;Download as .zip&lt;/a&gt;&#xA;        or checkout the corresponding tag with &lt;a class=&#34;toggle-instructions&#34;&gt;Git&lt;/a&gt;.&#xA;      &lt;/p&gt;</description>
    </item>
    <item>
      <title>Add Gateways to the Process (5/6)</title>
      <link>/get-started/quick-start/gateway/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/get-started/quick-start/gateway/</guid>
      <description>&lt;p&gt;In this section, you&amp;rsquo;ll learn how to make your process more dynamic by using BPMN 2.0 &lt;em&gt;Exclusive Gateways&lt;/em&gt;.&lt;/p&gt;&#xA;&lt;h1 id=&#34;add-two-gateways&#34;&gt;Add Two Gateways&lt;/h1&gt;&#xA;&lt;p&gt;We want to modify our process so that it&amp;rsquo;s more dynamic.&lt;/p&gt;&#xA;&lt;p&gt;To do so, open the process in the Camunda Modeler.&lt;/p&gt;&#xA;&lt;p&gt;Next, from the Modeler&amp;rsquo;s left-hand menu, select the gateway shape (diamond) and drag it into position between the Start Event and the Service Task. Use the create space tool again as needed. Move the User Task down and add another Gateway after it. Lastly, adjust the Sequence Flows so that the model looks like this:&#xA;&lt;figure class=&#34;image&#34;&gt;&#xA;  &lt;span&gt;&lt;img&#xA;      src=&#34;../img/modeler-gateway1.png&#34;&#xA;       /&gt;&lt;/span&gt;&#xA;&lt;/figure&gt;&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Model, Evaluate and Deploy a Decision Requirements Graph</title>
      <link>/get-started/dmn/drg/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/get-started/dmn/drg/</guid>
      <description>&lt;p&gt;In this step, we extend the previous example by a second decision &lt;em&gt;Beverages&lt;/em&gt; which uses the &lt;em&gt;Dish&lt;/em&gt; decision table as input. We model this dependency between the decisions within a Decision Requirements Graph (DRG) using the Camunda Modeler. Then, we adjust the Application class to evaluate the &lt;em&gt;Beverages&lt;/em&gt; decision, deploy the web application to Apache Tomcat and verify the result in Cockpit.&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;note bg-info docs-info&#34;&gt;&#xA;  &lt;h3&gt;Decision Requirements Graph vs. Decision Requirements Diagram&lt;/h3&gt;&#xA;  &lt;p&gt;The visual representation of a Decision Requirements Graph (DRG) is called Decision Requirements Diagram (DRD). In the context of the Camunda Modeler, we name it DRD because we use the visual representation to model the DRG.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Leverage business rules (6/6)</title>
      <link>/get-started/quick-start/decision-automation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/get-started/quick-start/decision-automation/</guid>
      <description>&lt;p&gt;In this section, you&amp;rsquo;ll learn how to add decision automation to your process by using &lt;a href=&#34;/get-started/manual/latest/reference/bpmn20/tasks/business-rule-task/&#34;&gt;BPMN 2.0 &lt;em&gt;Business Rule Tasks&lt;/em&gt;&lt;/a&gt; and &lt;a href=&#34;/get-started/manual/latest/reference/dmn11/&#34;&gt;DMN 1.3 Decision Tables&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h1 id=&#34;add-a-business-rule-task-to-the-process&#34;&gt;Add a Business Rule Task to the Process&lt;/h1&gt;&#xA;&lt;p&gt;Use the Camunda Modeler to open the Payment Retrieval process then click on the Approve Payment Task. Change the activity type to &lt;em&gt;Business Rule Task&lt;/em&gt; in the wrench button menu.&lt;/p&gt;&#xA;&lt;figure class=&#34;image&#34;&gt;&#xA;  &lt;span&gt;&lt;img&#xA;      src=&#34;../img/modeler-businessrule-task1.png&#34;&#xA;       /&gt;&lt;/span&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;Next, link the Business Rule Task to a DMN table by changing &lt;code&gt;Implementation&lt;/code&gt; to &lt;code&gt;DMN&lt;/code&gt; and &lt;code&gt;Decision Ref&lt;/code&gt; to &lt;code&gt;approve-payment&lt;/code&gt; in the properties panel. In order to retrieve the result of the evaluation and save it automatically as a process instance variable in our process, we also need to change the &lt;code&gt;Result Variable&lt;/code&gt; to &lt;code&gt;approved&lt;/code&gt; and use &lt;code&gt;singleEntry&lt;/code&gt; as the &lt;code&gt;Map Decision Result&lt;/code&gt; in the properties panel.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Congratulation!</title>
      <link>/get-started/quick-start/complete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/get-started/quick-start/complete/</guid>
      <description>&lt;h1 id=&#34;your-first-process-instance-is-running-successfully&#34;&gt;Your first process instance is running successfully!&lt;/h1&gt;&#xA;&lt;p&gt;Now that you got the process running you may move on to step four to &lt;a href=&#34;/get-started/get-started/quick-start/user-task/&#34;&gt;learn how you can involve humans in your process&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;figure class=&#34;image&#34;&gt;&#xA;  &lt;span&gt;&lt;img&#xA;      src=&#34;../img/niall-says-congrats.png&#34;&#xA;       /&gt;&lt;/span&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;Feel free to remove the &lt;code&gt;Desktop.getDesktop().browse()&lt;/code&gt; line if you don&amp;rsquo;t want to open this page again.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Congratulation!</title>
      <link>/get-started/quick-start/success/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/get-started/quick-start/success/</guid>
      <description>&lt;h1 id=&#34;your-first-process-instance-is-running-successfully&#34;&gt;Your first process instance is running successfully!&lt;/h1&gt;&#xA;&lt;p&gt;Now that you got the process running you may move on to step four to &lt;a href=&#34;/get-started/get-started/quick-start/user-task/&#34;&gt;learn how you can involve humans in your process&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;figure class=&#34;image&#34;&gt;&#xA;  &lt;span&gt;&lt;img&#xA;      src=&#34;../img/niall-says-congrats.png&#34;&#xA;       /&gt;&lt;/span&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;Feel free to remove the &lt;code&gt;open()&lt;/code&gt; line if you don&amp;rsquo;t want to open this page again.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
